{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "`<calendar-element>` adds a calendar to your page using Polymer.\n\nIf you like to connect it to an input, try it like:\n\n  ```html\n    <input type=\"date\" value=\"{{date::input}}\">\n\n    <calendar-element date=\"{{date}}\"></calendar-element>\n  ```\n\nFor example if you clamp on `hour`, you can round `datetime` and `value` to `00:00:00`. If you set `clamp=\"day\"` you hide the day-selection.\n\nThe following custom properties and mixins are also available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--calendar-element`                   | Mixin applied to the calendar                  | {}\n`--calendar-cell`                      | Mixin applied to the date cells                | {}\n`--calendar-cell-hovered-background`   | background of the hovered date cells           | transparent\n`--calendar-cell-hovered-border-color` | border-color of the hovered date cells         | currentColor\n`--calendar-cell-size`                 | width of a date cell                           | 3em\n`--calendar-cell-border-radius`        | border-radius of a date cell                   | 0.3em\n`--calendar-cell-font-size`            | font-size of a date cell                       | 0.75em\n`--calendar-cell-notinmonth-opacity`   | text opacity of a date cell that are not in the current month | 0.6\n`--calendar-cell-weekend-opacity`      | text opacity of a date cell that are on weekend | 1\n\n Have a look at [input-picker-pattern#input-picker-shared-style](https://github.com/fooloomanzoo/input-picker-pattern#input-picker-shared-style) and [input-picker-pattern#input-shared-style](https://github.com/fooloomanzoo/input-picker-pattern#input-shared-style) to see how to style the element. `--inner-input-focus-background` and `--inner-input-focus-color` will style the selected date-cell and inputs.",
      "summary": "",
      "path": "calendar-element.html",
      "properties": [
        {
          "name": "dwellTime",
          "type": "number",
          "description": "dwell time of incrementing inputs by the buttons in milliseconds. It is minimal 15 milliseconds.",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 33,
              "column": 10
            },
            "end": {
              "line": 37,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_dwellTimeChanged\"",
              "attributeType": "Number"
            }
          },
          "defaultValue": "50",
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "dwellDelay",
          "type": "number",
          "description": "delay when incrementing inputs by the buttons in milliseconds. It is minimal 15 milliseconds.",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 43,
              "column": 10
            },
            "end": {
              "line": 47,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_dwellTimeChanged\"",
              "attributeType": "Number"
            }
          },
          "defaultValue": "500",
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "_switchClassSelector",
          "type": "string | null | undefined",
          "description": "class property of switches",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 52,
              "column": 10
            },
            "end": {
              "line": 55,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"switch\"",
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "name",
          "type": "string | null | undefined",
          "description": "name of the input",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 16,
              "column": 10
            },
            "end": {
              "line": 18,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "title",
          "type": "string | null | undefined",
          "description": "description for the element and can be used as a hint for invalid values",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 23,
              "column": 10
            },
            "end": {
              "line": 26,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "disabled",
          "type": "boolean | null | undefined",
          "description": "disables the input",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 31,
              "column": 10
            },
            "end": {
              "line": 35,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "required",
          "type": "boolean | null | undefined",
          "description": "required attribute",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 40,
              "column": 10
            },
            "end": {
              "line": 44,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "propertyForValue",
          "type": "string | null | undefined",
          "description": "defines the property that should be used for the value",
          "privacy": "public",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 69,
              "column": 10
            },
            "end": {
              "line": 72,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"valueAsNumber\"",
          "inheritedFrom": "DatetimeFormMixin"
        },
        {
          "name": "invalid",
          "type": "boolean | null | undefined",
          "description": "required attribute",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 57,
              "column": 10
            },
            "end": {
              "line": 63,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_valueIsSet",
          "type": "boolean | null | undefined",
          "description": "is true when the value is not undefined",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 68,
              "column": 10
            },
            "end": {
              "line": 72,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "default",
          "type": "Object | null | undefined",
          "description": "The default value of the input, could be a number, a date-object or an iso-string in time, date or datetime-notation",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 166,
              "column": 10
            },
            "end": {
              "line": 168,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "value",
          "type": "Object | null | undefined",
          "description": "value of the input",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 85,
              "column": 10
            },
            "end": {
              "line": 88,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "locale",
          "type": "string | null | undefined",
          "description": "The current locale",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 19,
              "column": 10
            },
            "end": {
              "line": 23,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "decimalSeparator",
          "type": "string",
          "description": "locale separator for local decimal values",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 29,
              "column": 10
            },
            "end": {
              "line": 33,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "dateSeparator",
          "type": "string",
          "description": "Separator for local date values (date-string is still in ISO-Format)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 39,
              "column": 10
            },
            "end": {
              "line": 43,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "timeSeparator",
          "type": "string",
          "description": "Separator for local time values (time-string is still in ISO-Format)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 49,
              "column": 10
            },
            "end": {
              "line": 53,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "amString",
          "type": "string | null | undefined",
          "description": "locale representation of 'AM'",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 58,
              "column": 10
            },
            "end": {
              "line": 62,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "pmString",
          "type": "string | null | undefined",
          "description": "locale representation of 'PM'",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 67,
              "column": 10
            },
            "end": {
              "line": 71,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "dateOrder",
          "type": "Object | null | undefined",
          "description": "order of date-parts",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 76,
              "column": 10
            },
            "end": {
              "line": 86,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Object"
            }
          },
          "defaultValue": "{\"parts\":[],\"timeFirst\":false,\"dateFirst\":true}",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "year",
          "type": "number | null | undefined",
          "description": "The year of the selected date",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 48,
              "column": 10
            },
            "end": {
              "line": 51,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "month",
          "type": "number | null | undefined",
          "description": "The month of the selected date (starts with 1)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 56,
              "column": 10
            },
            "end": {
              "line": 59,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "day",
          "type": "number | null | undefined",
          "description": "The day of the selected date",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 64,
              "column": 10
            },
            "end": {
              "line": 67,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour",
          "type": "number | null | undefined",
          "description": "The hour of the selected time",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 72,
              "column": 10
            },
            "end": {
              "line": 75,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour12",
          "type": "number",
          "description": "hour in 12-hour-format",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 81,
              "column": 10
            },
            "end": {
              "line": 85,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_hour12Changed\"",
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "isAm",
          "type": "boolean",
          "description": "true, when A.M. (when `hour` < 12)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 91,
              "column": 10
            },
            "end": {
              "line": 95,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_isAmChanged\"",
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "minute",
          "type": "number | null | undefined",
          "description": "The minute of the selected time",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 100,
              "column": 10
            },
            "end": {
              "line": 103,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "second",
          "type": "number | null | undefined",
          "description": "The second of the selected time",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 108,
              "column": 10
            },
            "end": {
              "line": 111,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "millisecond",
          "type": "number | null | undefined",
          "description": "The millisecond of the selected time",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 116,
              "column": 10
            },
            "end": {
              "line": 119,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "datetime",
          "type": "string | null | undefined",
          "description": "the selected date and time (format: iso8601)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 124,
              "column": 10
            },
            "end": {
              "line": 127,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "date",
          "type": "string | null | undefined",
          "description": "the selected date (format: iso8601)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 132,
              "column": 10
            },
            "end": {
              "line": 135,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "time",
          "type": "string | null | undefined",
          "description": "the selected time (format: iso8601)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 140,
              "column": 10
            },
            "end": {
              "line": 143,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "valueAsDate",
          "type": "Date | null | undefined",
          "description": "The date-object of the selected date",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 148,
              "column": 10
            },
            "end": {
              "line": 152,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_valueAsDateChanged\"",
              "attributeType": "Date"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "valueAsNumber",
          "type": "number | null | undefined",
          "description": "The value of the selected date",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 157,
              "column": 10
            },
            "end": {
              "line": 161,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_valueAsNumberChanged\"",
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_defaultValue",
          "type": "number | null | undefined",
          "description": "value of the default date",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 173,
              "column": 10
            },
            "end": {
              "line": 176,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "min",
          "type": "Object | null | undefined",
          "description": "The minimal date, could be a number, a date-object or an iso-string in time, date or datetime-notation",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 181,
              "column": 10
            },
            "end": {
              "line": 185,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_minChanged\"",
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_minValue",
          "type": "number | null | undefined",
          "description": "value if the minimum date",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 190,
              "column": 10
            },
            "end": {
              "line": 192,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "max",
          "type": "Object | null | undefined",
          "description": "The maximal date, could be a number, a date-object or an iso-string in time, date or datetime-notation",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 197,
              "column": 10
            },
            "end": {
              "line": 201,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_maxChanged\"",
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_maxValue",
          "type": "number | null | undefined",
          "description": "value if the maximum date",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 206,
              "column": 10
            },
            "end": {
              "line": 208,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour12Format",
          "type": "boolean",
          "description": "when true, 12-hour time format, else 24-hour",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 214,
              "column": 10
            },
            "end": {
              "line": 218,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "clamp",
          "type": "string | null | undefined",
          "description": "Clamp datetime to a property\npossible values: 'month', 'day', 'hour'",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 252,
              "column": 10
            },
            "end": {
              "line": 256,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "defaultValue": "\"hour\"",
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "timezone",
          "type": "string | null | undefined",
          "description": "The timezone offset in '±hh:mm' format",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 233,
              "column": 10
            },
            "end": {
              "line": 237,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_timezoneChanged\"",
              "attributeType": "String"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "offsetMinutes",
          "type": "number | null | undefined",
          "description": "The offset minutes of the set timezone",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 242,
              "column": 10
            },
            "end": {
              "line": 246,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_offsetMinutesChanged\"",
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_timeZoneHours",
          "type": "number | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 248,
              "column": 10
            },
            "end": {
              "line": 250,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_timeZoneMinutes",
          "type": "number | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 252,
              "column": 10
            },
            "end": {
              "line": 254,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_recentLocalTimezoneOffset",
          "type": "number | null | undefined",
          "description": "The offset minute of the current datetime",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 259,
              "column": 10
            },
            "end": {
              "line": 261,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_timeOnly",
          "type": "boolean | null | undefined",
          "description": "if true perspective starts at 0 (1970-01-01)",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 291,
              "column": 10
            },
            "end": {
              "line": 294,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_maxDayOfMonth",
          "type": "number",
          "description": "exclusive max day of month",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 275,
              "column": 10
            },
            "end": {
              "line": 278,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_dateLocked",
          "type": "boolean | null | undefined",
          "description": "lock to date and ignore time",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 283,
              "column": 10
            },
            "end": {
              "line": 286,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "step",
          "type": "number | null | undefined",
          "description": "If set the step defines the step a date should be incremented (in seconds). The input for the most inferior standing that would create an integer step is used to increment the value.\nFor example, if the **step** is:\n + **0.05**: the millisecond-input will increment the value by 50 (50 milliseconds), the other inputs behaive as expected\n + **1.05**: the millisecond-input will increment the value by 1050 (1 second and 50 millisecond), the other inputs behaive as expected\n + **2**: the millisecond-input will be disabled, the second-input will increment the value by 2000 (2 seconds), the other inputs behaive as expected\n + **180**: the millisecond-input and the second-input will be disabled, the minute-input will increment the value by 180000 (3 minutes), the other inputs behaive as expected\nIf `step=\"0\"` all inputs will be disabled, else if the step is below _0.001_ the step will be set to **0.001**. The most supirior input that will become the given step is the day-input.",
          "privacy": "public",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 33,
              "column": 10
            },
            "end": {
              "line": 36,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeFormMixin"
        },
        {
          "name": "_partsDisabled",
          "type": "Object | null | undefined",
          "description": "date-parts that are disabled",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 41,
              "column": 10
            },
            "end": {
              "line": 47,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Object"
            }
          },
          "defaultValue": "{}",
          "inheritedFrom": "DatetimeFormMixin"
        },
        {
          "name": "_partsStep",
          "type": "Object | null | undefined",
          "description": "the computed steps for the date-parts",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 52,
              "column": 10
            },
            "end": {
              "line": 65,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "Object"
            }
          },
          "defaultValue": "{\"day\":1,\"hour\":1,\"minute\":1,\"second\":1,\"millisecond\":1}",
          "inheritedFrom": "DatetimeFormMixin"
        },
        {
          "name": "currentHoveredDayNode",
          "type": "Node | null | undefined",
          "description": "Current hovered day node\nto access: bind the attribute ('current-hovered-day-node') and get its dataset `year`, `month` or `day`-property",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 262,
              "column": 10
            },
            "end": {
              "line": 266,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "Node"
            }
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "currentActiveDayNode",
          "type": "Node | null | undefined",
          "description": "Node of the last clicked day-field (by clicking or keypress)\nto access: bind the attribute ('current-active-day-node') and get its dataset `year`, `month` or `day`-property",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 272,
              "column": 10
            },
            "end": {
              "line": 276,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "Node"
            }
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "currentSelectedDayNode",
          "type": "Node | null | undefined",
          "description": "Node of the last selected day\nto access: bind the attribute ('current-selected-day-node') and get its dataset `year`, `month` or `day`-property",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 282,
              "column": 10
            },
            "end": {
              "line": 286,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "Node"
            }
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "firstDayOfWeek",
          "type": "number | null | undefined",
          "description": "Defines the first day of the week to use. Defaults to `1` (`monday`)\ne.g. when `firstDayOfWeek` is `0` the first day of the week would be `sunday`",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 300,
              "column": 10
            },
            "end": {
              "line": 303,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "1",
          "inheritedFrom": "CalendarElementPattern"
        }
      ],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 315,
              "column": 6
            },
            "end": {
              "line": 318,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 82,
              "column": 6
            },
            "end": {
              "line": 87,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "_addSwitchListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 89,
              "column": 6
            },
            "end": {
              "line": 104,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "_removeSwitchListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 106,
              "column": 6
            },
            "end": {
              "line": 116,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "_checkKeycodeSwitch",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 118,
              "column": 6
            },
            "end": {
              "line": 126,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "__getEventTarget",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 128,
              "column": 6
            },
            "end": {
              "line": 142,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            },
            {
              "name": "classSelector"
            }
          ],
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "__increm",
          "description": "increment property by being called by an Event on an `switch`-Node",
          "privacy": "private",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 149,
              "column": 6
            },
            "end": {
              "line": 176,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "Event",
              "description": "Event it was called on"
            },
            {
              "name": "once",
              "type": "Boolean",
              "description": "if true, it doesn't setup an intervall to continue incrementing (e.g. keyPressEvents are fired itself repeatedly while the key is pressed)"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "__incremProp",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 178,
              "column": 6
            },
            "end": {
              "line": 180,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "prop"
            },
            {
              "name": "step"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "_getDefaultForProp",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 630,
              "column": 6
            },
            "end": {
              "line": 640,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "prop"
            }
          ],
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_stopActiveIncremJob",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 186,
              "column": 6
            },
            "end": {
              "line": 199,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "_dwellTimeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 201,
              "column": 6
            },
            "end": {
              "line": 207,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dwellTime"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "_dwellDelayChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 209,
              "column": 6
            },
            "end": {
              "line": 215,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dwellDelay"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "_attachDom",
          "description": "attach dom with `delegatesFocus: true` so that the element is also focussed while its's children are too, and to autofocus to first tabable",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 103,
              "column": 6
            },
            "end": {
              "line": 112,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom"
            }
          ],
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "validate",
          "description": "validates the input for iron-form",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 122,
              "column": 6
            },
            "end": {
              "line": 124,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_computeInvalid",
          "description": "defines whether the value is set",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 130,
              "column": 6
            },
            "end": {
              "line": 132,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "[Object]"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_validate",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 141,
              "column": 6
            },
            "end": {
              "line": 143,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "Object",
              "description": "value to validate"
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "true, if the value is valid"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_computeValueIsSet",
          "description": "defines whether the value is set",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 149,
              "column": 6
            },
            "end": {
              "line": 151,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "[Object]"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_isSet",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 90,
              "column": 6
            },
            "end": {
              "line": 92,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "inheritedFrom": "DatetimeFormMixin"
        },
        {
          "name": "_valueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 94,
              "column": 6
            },
            "end": {
              "line": 99,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeFormMixin"
        },
        {
          "name": "_defaultChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 83,
              "column": 6
            },
            "end": {
              "line": 88,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "def"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeFormMixin"
        },
        {
          "name": "_createReflectPropertyToValueObserver",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 180,
              "column": 6
            },
            "end": {
              "line": 190,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "prop"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_reflectPropertyToValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 192,
              "column": 6
            },
            "end": {
              "line": 194,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_reflectValueToProperty",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 196,
              "column": 6
            },
            "end": {
              "line": 198,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_localeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 96,
              "column": 6
            },
            "end": {
              "line": 283,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "locale"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "_shouldPropertyChange",
          "description": "overwritten of polymer to handle -0",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 34,
              "column": 6
            },
            "end": {
              "line": 40,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property"
            },
            {
              "name": "value"
            },
            {
              "name": "old"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "now",
          "description": "Sets value to the actual date",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 304,
              "column": 6
            },
            "end": {
              "line": 320,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "setDate",
          "description": "sets date to all necessary properties",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 326,
              "column": 6
            },
            "end": {
              "line": 390,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date",
              "description": "[the date to set]"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "resetDate",
          "description": "resets the date (if `default` is set, it will be used for the new value)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 396,
              "column": 6
            },
            "end": {
              "line": 433,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "Event",
              "description": "[a causing event will not propagated]"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_defaultValueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 435,
              "column": 6
            },
            "end": {
              "line": 442,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "def"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computeDefaultValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 444,
              "column": 6
            },
            "end": {
              "line": 446,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "def"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computeDatetime",
          "description": "modify date components of a date-object. it needs to be applied or called on a date object",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 460,
              "column": 6
            },
            "end": {
              "line": 537,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "year",
              "type": "number"
            },
            {
              "name": "month",
              "type": "number"
            },
            {
              "name": "day",
              "type": "number"
            },
            {
              "name": "hour",
              "type": "number"
            },
            {
              "name": "minute",
              "type": "number"
            },
            {
              "name": "second",
              "type": "number"
            },
            {
              "name": "millisecond",
              "type": "number"
            }
          ],
          "return": {
            "type": "object",
            "desc": "the changed object and the new offset-minutes"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_dateTimeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 539,
              "column": 6
            },
            "end": {
              "line": 566,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "date"
            },
            {
              "name": "time"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_datetimeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 568,
              "column": 6
            },
            "end": {
              "line": 611,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "datetime"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_valueAsNumberChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 613,
              "column": 6
            },
            "end": {
              "line": 620,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_valueAsDateChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 622,
              "column": 6
            },
            "end": {
              "line": 633,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_fromDatetime",
          "description": "compute a date object",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 640,
              "column": 6
            },
            "end": {
              "line": 667,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "datetime"
            }
          ],
          "return": {
            "type": "Date",
            "desc": "date"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_clampChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 669,
              "column": 6
            },
            "end": {
              "line": 677,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "clamp"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_minChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 553,
              "column": 6
            },
            "end": {
              "line": 556,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "min"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_maxChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 558,
              "column": 6
            },
            "end": {
              "line": 561,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "max"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_minMaxValueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 717,
              "column": 6
            },
            "end": {
              "line": 721,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_checkThreshold",
          "description": "test date object against thresholds",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 728,
              "column": 6
            },
            "end": {
              "line": 739,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date"
            }
          ],
          "return": {
            "type": "Date",
            "desc": "ether the threshold when the date is exceeding or the date object itself"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_toDate",
          "description": "get date string from a date object",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 746,
              "column": 6
            },
            "end": {
              "line": 752,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date",
              "description": "the Date to serialize"
            }
          ],
          "return": {
            "type": "String",
            "desc": "date string"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_toTime",
          "description": "get UTC time string from a date object",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 759,
              "column": 6
            },
            "end": {
              "line": 764,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date",
              "description": "the Date to serialize"
            }
          ],
          "return": {
            "type": "String",
            "desc": "date string"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_toUTCDate",
          "description": "get UTC date string from a date object",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 771,
              "column": 6
            },
            "end": {
              "line": 777,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date",
              "description": "the Date to serialize"
            }
          ],
          "return": {
            "type": "String",
            "desc": "date string"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_toUTCTime",
          "description": "get UTC time string from a date object",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 784,
              "column": 6
            },
            "end": {
              "line": 789,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date",
              "description": "the Date to serialize"
            }
          ],
          "return": {
            "type": "String",
            "desc": "time string"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "__toDate",
          "description": "get date string from date components",
          "privacy": "private",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 798,
              "column": 6
            },
            "end": {
              "line": 800,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "year",
              "type": "Number"
            },
            {
              "name": "month",
              "type": "Number"
            },
            {
              "name": "day",
              "type": "Number"
            }
          ],
          "return": {
            "type": "String",
            "desc": "date string"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "__toTime",
          "description": "get time string from date components",
          "privacy": "private",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 810,
              "column": 6
            },
            "end": {
              "line": 812,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hour",
              "type": "Number"
            },
            {
              "name": "minute",
              "type": "Number"
            },
            {
              "name": "second",
              "type": "Number"
            },
            {
              "name": "millisecond",
              "type": "Number"
            }
          ],
          "return": {
            "type": "String",
            "desc": "time string"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_clampUTC",
          "description": "clamp UTC values",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 820,
              "column": 6
            },
            "end": {
              "line": 837,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date",
              "description": "the Date to clamp"
            },
            {
              "name": "clamp",
              "type": "String",
              "description": "the date component to clamp"
            }
          ],
          "return": {
            "type": "Date",
            "desc": "the clamped date"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_pad",
          "description": "pad a string with 0",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 845,
              "column": 6
            },
            "end": {
              "line": 851,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "n",
              "type": "Number",
              "description": "number to pad"
            },
            {
              "name": "padLength",
              "type": "Number",
              "description": "total length of strings"
            }
          ],
          "return": {
            "type": "String",
            "desc": "padded string"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_hour12Changed",
          "description": "`hour12` is the hour in hour12-format, that starts is minimal 1 and maximal 12, midnight is at 12am and noon is 12pm",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 856,
              "column": 6
            },
            "end": {
              "line": 860,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hour12"
            },
            {
              "name": "old"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_isAmChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 862,
              "column": 6
            },
            "end": {
              "line": 866,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "isAm"
            },
            {
              "name": "old"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_ifClamped",
          "description": "clamp to date component",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 871,
              "column": 6
            },
            "end": {
              "line": 876,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "clamp"
            },
            {
              "name": "comp"
            },
            {
              "name": "hidden"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_checkDefaultTimezone",
          "description": "set the default timezone if needed",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 882,
              "column": 6
            },
            "end": {
              "line": 895,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computeTimezoneShift",
          "description": "correct a timezone shift when date changes from winter to summertime (locally)",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 901,
              "column": 6
            },
            "end": {
              "line": 910,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_timezoneChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 912,
              "column": 6
            },
            "end": {
              "line": 932,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "timezone"
            },
            {
              "name": "oldValue"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_offsetMinutesChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 934,
              "column": 6
            },
            "end": {
              "line": 942,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "offsetMinutes"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_timeZoneHoursMinutesChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 944,
              "column": 6
            },
            "end": {
              "line": 963,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hour"
            },
            {
              "name": "minute"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computeTimezone",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 965,
              "column": 6
            },
            "end": {
              "line": 987,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "offsetMinutes"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computeTimezoneOffset",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 989,
              "column": 6
            },
            "end": {
              "line": 1019,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "timezone"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computeMaxDayOfMonth",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 1021,
              "column": 6
            },
            "end": {
              "line": 1029,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "year"
            },
            {
              "name": "month"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computePartsStep",
          "description": "compute the steps for the related inputs. The day-input is the highest modified input allthough if the step is higher than a day in seconds it might also change month- or year-inputs.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 104,
              "column": 6
            },
            "end": {
              "line": 185,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "step"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeFormMixin"
        },
        {
          "name": "_computePartsDisabled",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 187,
              "column": 6
            },
            "end": {
              "line": 205,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "change"
            },
            {
              "name": "disabled"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeFormMixin"
        },
        {
          "name": "_onMouseMoveDay",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 320,
              "column": 6
            },
            "end": {
              "line": 333,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_onClickDay",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 335,
              "column": 6
            },
            "end": {
              "line": 361,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "confirm",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 363,
              "column": 6
            },
            "end": {
              "line": 372,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_computeIncremPropTop",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 374,
              "column": 6
            },
            "end": {
              "line": 379,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hideMonth"
            }
          ],
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_setWeekDayCaptions",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 381,
              "column": 6
            },
            "end": {
              "line": 396,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "locale"
            },
            {
              "name": "firstDayOfWeek"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_setMonthSelectorOptions",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 398,
              "column": 6
            },
            "end": {
              "line": 407,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "locale"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "renderCalendar",
          "description": "renderCalendars the current daySelector (manually).",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 416,
              "column": 6
            },
            "end": {
              "line": 539,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "year",
              "type": "number",
              "description": "The year of the date of the current daySelector."
            },
            {
              "name": "month",
              "type": "number",
              "description": "The month of the date of the current daySelector."
            },
            {
              "name": "day",
              "type": "number",
              "description": "The day of the date of the current daySelector."
            },
            {
              "name": "date",
              "type": "number",
              "description": "The current selected date."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_clampDay",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 541,
              "column": 6
            },
            "end": {
              "line": 547,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d"
            }
          ],
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_dayDiff",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 549,
              "column": 6
            },
            "end": {
              "line": 551,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "end"
            },
            {
              "name": "start"
            }
          ],
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_checkKeycodeForDates",
          "description": "key press event handler on days area",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 567,
              "column": 6
            },
            "end": {
              "line": 628,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "[type]",
              "description": "Event"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "CalendarElementPattern"
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/date-elements.html",
          "description": "date elements"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 684,
          "column": 4
        },
        "end": {
          "line": 698,
          "column": 5
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "CalendarElement",
      "attributes": [
        {
          "name": "dwell-time",
          "description": "dwell time of incrementing inputs by the buttons in milliseconds. It is minimal 15 milliseconds.",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 33,
              "column": 10
            },
            "end": {
              "line": 37,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "dwell-delay",
          "description": "delay when incrementing inputs by the buttons in milliseconds. It is minimal 15 milliseconds.",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 43,
              "column": 10
            },
            "end": {
              "line": 47,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "name",
          "description": "name of the input",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 16,
              "column": 10
            },
            "end": {
              "line": 18,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "title",
          "description": "description for the element and can be used as a hint for invalid values",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 23,
              "column": 10
            },
            "end": {
              "line": 26,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "disabled",
          "description": "disables the input",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 31,
              "column": 10
            },
            "end": {
              "line": 35,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "required",
          "description": "required attribute",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 40,
              "column": 10
            },
            "end": {
              "line": 44,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "property-for-value",
          "description": "defines the property that should be used for the value",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 69,
              "column": 10
            },
            "end": {
              "line": 72,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "DatetimeFormMixin"
        },
        {
          "name": "invalid",
          "description": "required attribute",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 57,
              "column": 10
            },
            "end": {
              "line": 63,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "default",
          "description": "The default value of the input, could be a number, a date-object or an iso-string in time, date or datetime-notation",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 166,
              "column": 10
            },
            "end": {
              "line": 168,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "value",
          "description": "value of the input",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 85,
              "column": 10
            },
            "end": {
              "line": 88,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "locale",
          "description": "The current locale",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 19,
              "column": 10
            },
            "end": {
              "line": 23,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "decimal-separator",
          "description": "locale separator for local decimal values",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 29,
              "column": 10
            },
            "end": {
              "line": 33,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "date-separator",
          "description": "Separator for local date values (date-string is still in ISO-Format)",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 39,
              "column": 10
            },
            "end": {
              "line": 43,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "time-separator",
          "description": "Separator for local time values (time-string is still in ISO-Format)",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 49,
              "column": 10
            },
            "end": {
              "line": 53,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "am-string",
          "description": "locale representation of 'AM'",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 58,
              "column": 10
            },
            "end": {
              "line": 62,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "pm-string",
          "description": "locale representation of 'PM'",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 67,
              "column": 10
            },
            "end": {
              "line": 71,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "date-order",
          "description": "order of date-parts",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 76,
              "column": 10
            },
            "end": {
              "line": 86,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "year",
          "description": "The year of the selected date",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 48,
              "column": 10
            },
            "end": {
              "line": 51,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "month",
          "description": "The month of the selected date (starts with 1)",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 56,
              "column": 10
            },
            "end": {
              "line": 59,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "day",
          "description": "The day of the selected date",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 64,
              "column": 10
            },
            "end": {
              "line": 67,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour",
          "description": "The hour of the selected time",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 72,
              "column": 10
            },
            "end": {
              "line": 75,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour12",
          "description": "hour in 12-hour-format",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 81,
              "column": 10
            },
            "end": {
              "line": 85,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "is-am",
          "description": "true, when A.M. (when `hour` < 12)",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 91,
              "column": 10
            },
            "end": {
              "line": 95,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "minute",
          "description": "The minute of the selected time",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 100,
              "column": 10
            },
            "end": {
              "line": 103,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "second",
          "description": "The second of the selected time",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 108,
              "column": 10
            },
            "end": {
              "line": 111,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "millisecond",
          "description": "The millisecond of the selected time",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 116,
              "column": 10
            },
            "end": {
              "line": 119,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "datetime",
          "description": "the selected date and time (format: iso8601)",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 124,
              "column": 10
            },
            "end": {
              "line": 127,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "date",
          "description": "the selected date (format: iso8601)",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 132,
              "column": 10
            },
            "end": {
              "line": 135,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "time",
          "description": "the selected time (format: iso8601)",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 140,
              "column": 10
            },
            "end": {
              "line": 143,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "value-as-date",
          "description": "The date-object of the selected date",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 148,
              "column": 10
            },
            "end": {
              "line": 152,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Date | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "value-as-number",
          "description": "The value of the selected date",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 157,
              "column": 10
            },
            "end": {
              "line": 161,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "min",
          "description": "The minimal date, could be a number, a date-object or an iso-string in time, date or datetime-notation",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 181,
              "column": 10
            },
            "end": {
              "line": 185,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "max",
          "description": "The maximal date, could be a number, a date-object or an iso-string in time, date or datetime-notation",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 197,
              "column": 10
            },
            "end": {
              "line": 201,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour12-format",
          "description": "when true, 12-hour time format, else 24-hour",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 214,
              "column": 10
            },
            "end": {
              "line": 218,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "clamp",
          "description": "Clamp datetime to a property\npossible values: 'month', 'day', 'hour'",
          "sourceRange": {
            "start": {
              "line": 252,
              "column": 10
            },
            "end": {
              "line": 256,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "timezone",
          "description": "The timezone offset in '±hh:mm' format",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 233,
              "column": 10
            },
            "end": {
              "line": 237,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "offset-minutes",
          "description": "The offset minutes of the set timezone",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 242,
              "column": 10
            },
            "end": {
              "line": 246,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "step",
          "description": "If set the step defines the step a date should be incremented (in seconds). The input for the most inferior standing that would create an integer step is used to increment the value.\nFor example, if the **step** is:\n + **0.05**: the millisecond-input will increment the value by 50 (50 milliseconds), the other inputs behaive as expected\n + **1.05**: the millisecond-input will increment the value by 1050 (1 second and 50 millisecond), the other inputs behaive as expected\n + **2**: the millisecond-input will be disabled, the second-input will increment the value by 2000 (2 seconds), the other inputs behaive as expected\n + **180**: the millisecond-input and the second-input will be disabled, the minute-input will increment the value by 180000 (3 minutes), the other inputs behaive as expected\nIf `step=\"0\"` all inputs will be disabled, else if the step is below _0.001_ the step will be set to **0.001**. The most supirior input that will become the given step is the day-input.",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 33,
              "column": 10
            },
            "end": {
              "line": 36,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeFormMixin"
        },
        {
          "name": "current-hovered-day-node",
          "description": "Current hovered day node\nto access: bind the attribute ('current-hovered-day-node') and get its dataset `year`, `month` or `day`-property",
          "sourceRange": {
            "start": {
              "line": 262,
              "column": 10
            },
            "end": {
              "line": 266,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Node | null | undefined",
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "current-active-day-node",
          "description": "Node of the last clicked day-field (by clicking or keypress)\nto access: bind the attribute ('current-active-day-node') and get its dataset `year`, `month` or `day`-property",
          "sourceRange": {
            "start": {
              "line": 272,
              "column": 10
            },
            "end": {
              "line": 276,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Node | null | undefined",
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "current-selected-day-node",
          "description": "Node of the last selected day\nto access: bind the attribute ('current-selected-day-node') and get its dataset `year`, `month` or `day`-property",
          "sourceRange": {
            "start": {
              "line": 282,
              "column": 10
            },
            "end": {
              "line": 286,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Node | null | undefined",
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "first-day-of-week",
          "description": "Defines the first day of the week to use. Defaults to `1` (`monday`)\ne.g. when `firstDayOfWeek` is `0` the first day of the week would be `sunday`",
          "sourceRange": {
            "start": {
              "line": 300,
              "column": 10
            },
            "end": {
              "line": 303,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "CalendarElementPattern"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "calendar-element",
      "mixins": [
        "CalendarElementPattern"
      ]
    },
    {
      "description": "`<date-picker>` is a picker for date for **[Polymer](https://github.com/Polymer/polymer)** that can use the **native** input, too. If the **native** picker is choosen and is not supported, this element uses the **polyfill** date-picker. The `<calendar-element>` will come in place if the native picker is not available or is not explicitly wanted. A range picker is provided by combining the `min`- and `max`-attributes.\n\n ```html\n   <date-picker value=\"{{value}}\"></date-picker>\n ```\n\n If you need an **overlay** then use `overlay-date-picker`, that creates the element in an `overlay-element`, that extends *IronOverlayBehavior* and will create some of its attribute-bindings.\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--calendar-element`                   | Mixin applied to the calendar                  | {}\n`--calendar-cell`                      | Mixin applied to the date cells                | {}\n`--calendar-cell-hovered-background`   | background of the hovered date cells           | transparent\n`--calendar-cell-hovered-border-color` | border-color of the hovered date cells         | currentColor\n`--calendar-cell-size`                 | width of a date cell                           | 3em\n`--calendar-cell-border-radius`        | border-radius of a date cell                   | 0.3em\n`--calendar-cell-font-size`            | font-size of a date cell                       | 0.75em\n`--calendar-cell-notinmonth-opacity`   | text opacity of a date cell that are not in the current month | 0.6\n`--calendar-cell-weekend-opacity`      | text opacity of a date cell that are on weekend | 1\n\n Have a look at [input-picker-pattern#input-picker-shared-style](https://github.com/fooloomanzoo/input-picker-pattern#input-picker-shared-style) and [input-picker-pattern#input-shared-style](https://github.com/fooloomanzoo/input-picker-pattern#input-shared-style) to see how to style the element. `--inner-input-focus-background` and `--inner-input-focus-color` will style the selected date-cell and inputs.",
      "summary": "",
      "path": "date-picker.html",
      "properties": [
        {
          "name": "name",
          "type": "string | null | undefined",
          "description": "name of the input",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 16,
              "column": 10
            },
            "end": {
              "line": 18,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "title",
          "type": "string | null | undefined",
          "description": "description for the element and can be used as a hint for invalid values",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 23,
              "column": 10
            },
            "end": {
              "line": 26,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "disabled",
          "type": "boolean | null | undefined",
          "description": "disables the input",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 31,
              "column": 10
            },
            "end": {
              "line": 35,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "required",
          "type": "boolean | null | undefined",
          "description": "required attribute",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 40,
              "column": 10
            },
            "end": {
              "line": 44,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "propertyForValue",
          "type": "string | null | undefined",
          "description": "defines the property that should be used for the value",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 49,
              "column": 10
            },
            "end": {
              "line": 52,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_createReflectPropertyToValueObserver\"",
              "attributeType": "String"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "invalid",
          "type": "boolean | null | undefined",
          "description": "required attribute",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 57,
              "column": 10
            },
            "end": {
              "line": 63,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_valueIsSet",
          "type": "boolean | null | undefined",
          "description": "is true when the value is not undefined",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 68,
              "column": 10
            },
            "end": {
              "line": 72,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "default",
          "type": "Object | null | undefined",
          "description": "default value of the value, when it does not validate",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 77,
              "column": 10
            },
            "end": {
              "line": 80,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_defaultChanged\"",
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "value",
          "type": "Object | null | undefined",
          "description": "value of the input",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 85,
              "column": 10
            },
            "end": {
              "line": 88,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "locale",
          "type": "string | null | undefined",
          "description": "The current locale",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 19,
              "column": 10
            },
            "end": {
              "line": 23,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "decimalSeparator",
          "type": "string",
          "description": "locale separator for local decimal values",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 29,
              "column": 10
            },
            "end": {
              "line": 33,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "dateSeparator",
          "type": "string",
          "description": "Separator for local date values (date-string is still in ISO-Format)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 39,
              "column": 10
            },
            "end": {
              "line": 43,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "timeSeparator",
          "type": "string",
          "description": "Separator for local time values (time-string is still in ISO-Format)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 49,
              "column": 10
            },
            "end": {
              "line": 53,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "amString",
          "type": "string | null | undefined",
          "description": "locale representation of 'AM'",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 58,
              "column": 10
            },
            "end": {
              "line": 62,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "pmString",
          "type": "string | null | undefined",
          "description": "locale representation of 'PM'",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 67,
              "column": 10
            },
            "end": {
              "line": 71,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "dateOrder",
          "type": "Object | null | undefined",
          "description": "order of date-parts",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 76,
              "column": 10
            },
            "end": {
              "line": 86,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Object"
            }
          },
          "defaultValue": "{\"parts\":[],\"timeFirst\":false,\"dateFirst\":true}",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "year",
          "type": "number | null | undefined",
          "description": "The year of the selected date",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 48,
              "column": 10
            },
            "end": {
              "line": 51,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "month",
          "type": "number | null | undefined",
          "description": "The month of the selected date (starts with 1)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 56,
              "column": 10
            },
            "end": {
              "line": 59,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "day",
          "type": "number | null | undefined",
          "description": "The day of the selected date",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 64,
              "column": 10
            },
            "end": {
              "line": 67,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour",
          "type": "number | null | undefined",
          "description": "The hour of the selected time",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 72,
              "column": 10
            },
            "end": {
              "line": 75,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour12",
          "type": "number",
          "description": "hour in 12-hour-format",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 81,
              "column": 10
            },
            "end": {
              "line": 85,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_hour12Changed\"",
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "isAm",
          "type": "boolean",
          "description": "true, when A.M. (when `hour` < 12)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 91,
              "column": 10
            },
            "end": {
              "line": 95,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_isAmChanged\"",
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "minute",
          "type": "number | null | undefined",
          "description": "The minute of the selected time",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 100,
              "column": 10
            },
            "end": {
              "line": 103,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "second",
          "type": "number | null | undefined",
          "description": "The second of the selected time",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 108,
              "column": 10
            },
            "end": {
              "line": 111,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "millisecond",
          "type": "number | null | undefined",
          "description": "The millisecond of the selected time",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 116,
              "column": 10
            },
            "end": {
              "line": 119,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "datetime",
          "type": "string | null | undefined",
          "description": "the selected date and time (format: iso8601)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 124,
              "column": 10
            },
            "end": {
              "line": 127,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "date",
          "type": "string | null | undefined",
          "description": "the selected date (format: iso8601)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 132,
              "column": 10
            },
            "end": {
              "line": 135,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "time",
          "type": "string | null | undefined",
          "description": "the selected time (format: iso8601)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 140,
              "column": 10
            },
            "end": {
              "line": 143,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "valueAsDate",
          "type": "Date | null | undefined",
          "description": "The date-object of the selected date",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 148,
              "column": 10
            },
            "end": {
              "line": 152,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_valueAsDateChanged\"",
              "attributeType": "Date"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "valueAsNumber",
          "type": "number | null | undefined",
          "description": "The value of the selected date",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 157,
              "column": 10
            },
            "end": {
              "line": 161,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_valueAsNumberChanged\"",
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_defaultValue",
          "type": "number | null | undefined",
          "description": "value of the default date",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 173,
              "column": 10
            },
            "end": {
              "line": 176,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "min",
          "type": "Object | null | undefined",
          "description": "The minimal date, could be a number, a date-object or an iso-string in time, date or datetime-notation",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 181,
              "column": 10
            },
            "end": {
              "line": 185,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_minChanged\"",
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_minValue",
          "type": "number | null | undefined",
          "description": "value if the minimum date",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 190,
              "column": 10
            },
            "end": {
              "line": 192,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "max",
          "type": "Object | null | undefined",
          "description": "The maximal date, could be a number, a date-object or an iso-string in time, date or datetime-notation",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 197,
              "column": 10
            },
            "end": {
              "line": 201,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_maxChanged\"",
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_maxValue",
          "type": "number | null | undefined",
          "description": "value if the maximum date",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 206,
              "column": 10
            },
            "end": {
              "line": 208,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour12Format",
          "type": "boolean",
          "description": "when true, 12-hour time format, else 24-hour",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 214,
              "column": 10
            },
            "end": {
              "line": 218,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "clamp",
          "type": "string | null | undefined",
          "description": "Clamp datetime to a property\npossible values:'month', 'day', 'hour', 'minute', 'second', 'millisecond'",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 224,
              "column": 10
            },
            "end": {
              "line": 228,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_clampChanged\"",
              "attributeType": "String"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "timezone",
          "type": "string | null | undefined",
          "description": "The timezone offset in '±hh:mm' format",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 233,
              "column": 10
            },
            "end": {
              "line": 237,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_timezoneChanged\"",
              "attributeType": "String"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "offsetMinutes",
          "type": "number | null | undefined",
          "description": "The offset minutes of the set timezone",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 242,
              "column": 10
            },
            "end": {
              "line": 246,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_offsetMinutesChanged\"",
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_timeZoneHours",
          "type": "number | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 248,
              "column": 10
            },
            "end": {
              "line": 250,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_timeZoneMinutes",
          "type": "number | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 252,
              "column": 10
            },
            "end": {
              "line": 254,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_recentLocalTimezoneOffset",
          "type": "number | null | undefined",
          "description": "The offset minute of the current datetime",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 259,
              "column": 10
            },
            "end": {
              "line": 261,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_timeOnly",
          "type": "boolean | null | undefined",
          "description": "if true perspective starts at 0 (1970-01-01)",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 266,
              "column": 10
            },
            "end": {
              "line": 269,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_maxDayOfMonth",
          "type": "number",
          "description": "exclusive max day of month",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 275,
              "column": 10
            },
            "end": {
              "line": 278,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_dateLocked",
          "type": "boolean | null | undefined",
          "description": "lock to date and ignore time",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 283,
              "column": 10
            },
            "end": {
              "line": 286,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "step",
          "type": "number | null | undefined",
          "description": "If set the step defines the step a date should be incremented (in seconds). The input for the most inferior standing that would create an integer step is used to increment the value.\nFor example, if the **step** is:\n + **0.05**: the millisecond-input will increment the value by 50 (50 milliseconds), the other inputs behaive as expected\n + **1.05**: the millisecond-input will increment the value by 1050 (1 second and 50 millisecond), the other inputs behaive as expected\n + **2**: the millisecond-input will be disabled, the second-input will increment the value by 2000 (2 seconds), the other inputs behaive as expected\n + **180**: the millisecond-input and the second-input will be disabled, the minute-input will increment the value by 180000 (3 minutes), the other inputs behaive as expected\nIf `step=\"0\"` all inputs will be disabled, else if the step is below _0.001_ the step will be set to **0.001**. The most supirior input that will become the given step is the day-input.",
          "privacy": "public",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 33,
              "column": 10
            },
            "end": {
              "line": 36,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeFormMixin"
        },
        {
          "name": "_partsDisabled",
          "type": "Object | null | undefined",
          "description": "date-parts that are disabled",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 41,
              "column": 10
            },
            "end": {
              "line": 47,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Object"
            }
          },
          "defaultValue": "{}",
          "inheritedFrom": "DatetimeFormMixin"
        },
        {
          "name": "_partsStep",
          "type": "Object | null | undefined",
          "description": "the computed steps for the date-parts",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 52,
              "column": 10
            },
            "end": {
              "line": 65,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "Object"
            }
          },
          "defaultValue": "{\"day\":1,\"hour\":1,\"minute\":1,\"second\":1,\"millisecond\":1}",
          "inheritedFrom": "DatetimeFormMixin"
        },
        {
          "name": "hideResetButton",
          "type": "boolean | null | undefined",
          "description": "if true, the reset button is hidden",
          "privacy": "public",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 298,
              "column": 10
            },
            "end": {
              "line": 301,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "DatetimeInputMixin"
        },
        {
          "name": "withTimezone",
          "type": "boolean | null | undefined",
          "description": "if true, timezone inputs are shown",
          "privacy": "public",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 306,
              "column": 10
            },
            "end": {
              "line": 309,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "DatetimeInputMixin"
        },
        {
          "name": "_resetButtonIsInvisible",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 311,
              "column": 10
            },
            "end": {
              "line": 314,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "DatetimeInputMixin"
        },
        {
          "name": "dwellTime",
          "type": "number",
          "description": "dwell time of incrementing inputs by the buttons in milliseconds. It is minimal 15 milliseconds.",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 33,
              "column": 10
            },
            "end": {
              "line": 37,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_dwellTimeChanged\"",
              "attributeType": "Number"
            }
          },
          "defaultValue": "50",
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "dwellDelay",
          "type": "number",
          "description": "delay when incrementing inputs by the buttons in milliseconds. It is minimal 15 milliseconds.",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 43,
              "column": 10
            },
            "end": {
              "line": 47,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_dwellTimeChanged\"",
              "attributeType": "Number"
            }
          },
          "defaultValue": "500",
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "_switchClassSelector",
          "type": "string | null | undefined",
          "description": "class property of switches",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 52,
              "column": 10
            },
            "end": {
              "line": 55,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"switch\"",
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "currentHoveredDayNode",
          "type": "Node | null | undefined",
          "description": "Current hovered day node\nto access: bind the attribute ('current-hovered-day-node') and get its dataset `year`, `month` or `day`-property",
          "privacy": "public",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 262,
              "column": 10
            },
            "end": {
              "line": 266,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "Node"
            }
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "currentActiveDayNode",
          "type": "Node | null | undefined",
          "description": "Node of the last clicked day-field (by clicking or keypress)\nto access: bind the attribute ('current-active-day-node') and get its dataset `year`, `month` or `day`-property",
          "privacy": "public",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 272,
              "column": 10
            },
            "end": {
              "line": 276,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "Node"
            }
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "currentSelectedDayNode",
          "type": "Node | null | undefined",
          "description": "Node of the last selected day\nto access: bind the attribute ('current-selected-day-node') and get its dataset `year`, `month` or `day`-property",
          "privacy": "public",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 282,
              "column": 10
            },
            "end": {
              "line": 286,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "Node"
            }
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "firstDayOfWeek",
          "type": "number | null | undefined",
          "description": "Defines the first day of the week to use. Defaults to `1` (`monday`)\ne.g. when `firstDayOfWeek` is `0` the first day of the week would be `sunday`",
          "privacy": "public",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 300,
              "column": 10
            },
            "end": {
              "line": 303,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "1",
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "native",
          "type": "boolean | null | undefined",
          "description": "Set to `true` to use the native input, if it available",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 173,
              "column": 10
            },
            "end": {
              "line": 176,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "nativeOnMobile",
          "type": "boolean | null | undefined",
          "description": "Set to `true` to use the native input automatically on mobile devices, if it available",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 181,
              "column": 10
            },
            "end": {
              "line": 184,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_nativeOnMobileChanged\"",
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "mobileUserAgentTestString",
          "type": "string | null | undefined",
          "description": "When `nativeOnMobile` is set to `true` this string is used to test the userAgent for a mobile device",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 189,
              "column": 10
            },
            "end": {
              "line": 193,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_nativeOnMobileChanged\"",
              "attributeType": "String"
            }
          },
          "defaultValue": "\"mM]obi|[tT]ablet|[aA]ndroid\"",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "opened",
          "type": "boolean | null | undefined",
          "description": "if `true` the picker is opened",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 198,
              "column": 10
            },
            "end": {
              "line": 203,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "horizontalAlign",
          "type": "string | null | undefined",
          "description": "The orientation against which to align the element horizontally\nrelative to the related input element. Possible values are \"left\", \"right\", \"center\", \"auto\". (comparable to `iron-fit-behavior` and its `no-overlap`-attribute)",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 209,
              "column": 10
            },
            "end": {
              "line": 213,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"auto\"",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "verticalAlign",
          "type": "string | null | undefined",
          "description": "The orientation against which to align the element vertically\nrelative to the related input element. Possible values are \"top\", \"bottom\", \"middle\", \"auto\". (comparable to `iron-fit-behavior` and its `no-overlap`-attribute)",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 219,
              "column": 10
            },
            "end": {
              "line": 223,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"auto\"",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "autoConfirm",
          "type": "boolean | null | undefined",
          "description": "Set to `true` to make the input auto-confirming",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 228,
              "column": 10
            },
            "end": {
              "line": 231,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_autoConfirmChanged\"",
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "noCancelOnEscKey",
          "type": "boolean | null | undefined",
          "description": "Set to `true` to disable canceling the overlay with the ESC key.",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 236,
              "column": 10
            },
            "end": {
              "line": 239,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "noCancelOnOutsideClick",
          "type": "boolean | null | undefined",
          "description": "Set to `true` to disable canceling the dropdown by clicking outside the picker.",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 244,
              "column": 10
            },
            "end": {
              "line": 247,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "noTip",
          "type": "boolean | null | undefined",
          "description": "Set to `true` to disable the tip of the picker",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 252,
              "column": 10
            },
            "end": {
              "line": 255,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "confirmedValue",
          "type": "Object | null | undefined",
          "description": "The confirmed value. When `auto-confirm` is not set, the value will only change, when you confirm.",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 260,
              "column": 10
            },
            "end": {
              "line": 263,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "confirmedDatetime",
          "type": "string | null | undefined",
          "description": "The confirmed datetime. When `auto-confirm` is not set, the datetime will only change, when you confirm.",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 154,
              "column": 10
            },
            "end": {
              "line": 157,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "hideNowButton",
          "type": "boolean | null | undefined",
          "description": "Set to `true` to hide the `now`-button",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 162,
              "column": 10
            },
            "end": {
              "line": 164,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_hasNative",
          "type": "?",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 121,
              "column": 6
            },
            "end": {
              "line": 123,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_attachDom",
          "description": "attach dom with `delegatesFocus: true` so that the element is also focussed while its's children are too, and to autofocus to first tabable",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 103,
              "column": 6
            },
            "end": {
              "line": 112,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom"
            }
          ],
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 283,
              "column": 6
            },
            "end": {
              "line": 287,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "validate",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 384,
              "column": 6
            },
            "end": {
              "line": 391,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_computeInvalid",
          "description": "defines whether the value is set",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 130,
              "column": 6
            },
            "end": {
              "line": 132,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "[Object]"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_validate",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 141,
              "column": 6
            },
            "end": {
              "line": 143,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "Object",
              "description": "value to validate"
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "true, if the value is valid"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_computeValueIsSet",
          "description": "defines whether the value is set",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 149,
              "column": 6
            },
            "end": {
              "line": 151,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "[Object]"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_isSet",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 159,
              "column": 6
            },
            "end": {
              "line": 161,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "Object",
              "description": "value to test"
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "true, if the value is set"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_valueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 474,
              "column": 6
            },
            "end": {
              "line": 483,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_defaultChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 516,
              "column": 6
            },
            "end": {
              "line": 521,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "def"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_createReflectPropertyToValueObserver",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 180,
              "column": 6
            },
            "end": {
              "line": 190,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "prop"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_reflectPropertyToValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 192,
              "column": 6
            },
            "end": {
              "line": 194,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_reflectValueToProperty",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 196,
              "column": 6
            },
            "end": {
              "line": 198,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_localeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 96,
              "column": 6
            },
            "end": {
              "line": 283,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "locale"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "_shouldPropertyChange",
          "description": "overwritten of polymer to handle -0",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 34,
              "column": 6
            },
            "end": {
              "line": 40,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property"
            },
            {
              "name": "value"
            },
            {
              "name": "old"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "now",
          "description": "Sets value to the actual date",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 304,
              "column": 6
            },
            "end": {
              "line": 320,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "setDate",
          "description": "sets date to all necessary properties",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 326,
              "column": 6
            },
            "end": {
              "line": 390,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date",
              "description": "[the date to set]"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "resetDate",
          "description": "resets the date (if `default` is set, it will be used for the new value)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 396,
              "column": 6
            },
            "end": {
              "line": 433,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "Event",
              "description": "[a causing event will not propagated]"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_defaultValueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 435,
              "column": 6
            },
            "end": {
              "line": 442,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "def"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computeDefaultValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 444,
              "column": 6
            },
            "end": {
              "line": 446,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "def"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computeDatetime",
          "description": "modify date components of a date-object. it needs to be applied or called on a date object",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 460,
              "column": 6
            },
            "end": {
              "line": 537,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "year",
              "type": "number"
            },
            {
              "name": "month",
              "type": "number"
            },
            {
              "name": "day",
              "type": "number"
            },
            {
              "name": "hour",
              "type": "number"
            },
            {
              "name": "minute",
              "type": "number"
            },
            {
              "name": "second",
              "type": "number"
            },
            {
              "name": "millisecond",
              "type": "number"
            }
          ],
          "return": {
            "type": "object",
            "desc": "the changed object and the new offset-minutes"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_dateTimeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 539,
              "column": 6
            },
            "end": {
              "line": 566,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "date"
            },
            {
              "name": "time"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_datetimeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 568,
              "column": 6
            },
            "end": {
              "line": 611,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "datetime"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_valueAsNumberChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 613,
              "column": 6
            },
            "end": {
              "line": 620,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_valueAsDateChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 622,
              "column": 6
            },
            "end": {
              "line": 633,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_fromDatetime",
          "description": "compute a date object",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 640,
              "column": 6
            },
            "end": {
              "line": 667,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "datetime"
            }
          ],
          "return": {
            "type": "Date",
            "desc": "date"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_clampChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 669,
              "column": 6
            },
            "end": {
              "line": 677,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "clamp"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_minChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 679,
              "column": 6
            },
            "end": {
              "line": 696,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "min"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_maxChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 698,
              "column": 6
            },
            "end": {
              "line": 715,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "max"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_minMaxValueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 717,
              "column": 6
            },
            "end": {
              "line": 721,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_checkThreshold",
          "description": "test date object against thresholds",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 728,
              "column": 6
            },
            "end": {
              "line": 739,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date"
            }
          ],
          "return": {
            "type": "Date",
            "desc": "ether the threshold when the date is exceeding or the date object itself"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_toDate",
          "description": "get date string from a date object",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 746,
              "column": 6
            },
            "end": {
              "line": 752,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date",
              "description": "the Date to serialize"
            }
          ],
          "return": {
            "type": "String",
            "desc": "date string"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_toTime",
          "description": "get UTC time string from a date object",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 759,
              "column": 6
            },
            "end": {
              "line": 764,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date",
              "description": "the Date to serialize"
            }
          ],
          "return": {
            "type": "String",
            "desc": "date string"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_toUTCDate",
          "description": "get UTC date string from a date object",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 771,
              "column": 6
            },
            "end": {
              "line": 777,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date",
              "description": "the Date to serialize"
            }
          ],
          "return": {
            "type": "String",
            "desc": "date string"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_toUTCTime",
          "description": "get UTC time string from a date object",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 784,
              "column": 6
            },
            "end": {
              "line": 789,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date",
              "description": "the Date to serialize"
            }
          ],
          "return": {
            "type": "String",
            "desc": "time string"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "__toDate",
          "description": "get date string from date components",
          "privacy": "private",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 798,
              "column": 6
            },
            "end": {
              "line": 800,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "year",
              "type": "Number"
            },
            {
              "name": "month",
              "type": "Number"
            },
            {
              "name": "day",
              "type": "Number"
            }
          ],
          "return": {
            "type": "String",
            "desc": "date string"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "__toTime",
          "description": "get time string from date components",
          "privacy": "private",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 810,
              "column": 6
            },
            "end": {
              "line": 812,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hour",
              "type": "Number"
            },
            {
              "name": "minute",
              "type": "Number"
            },
            {
              "name": "second",
              "type": "Number"
            },
            {
              "name": "millisecond",
              "type": "Number"
            }
          ],
          "return": {
            "type": "String",
            "desc": "time string"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_clampUTC",
          "description": "clamp UTC values",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 820,
              "column": 6
            },
            "end": {
              "line": 837,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date",
              "description": "the Date to clamp"
            },
            {
              "name": "clamp",
              "type": "String",
              "description": "the date component to clamp"
            }
          ],
          "return": {
            "type": "Date",
            "desc": "the clamped date"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_pad",
          "description": "pad a string with 0",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 845,
              "column": 6
            },
            "end": {
              "line": 851,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "n",
              "type": "Number",
              "description": "number to pad"
            },
            {
              "name": "padLength",
              "type": "Number",
              "description": "total length of strings"
            }
          ],
          "return": {
            "type": "String",
            "desc": "padded string"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_hour12Changed",
          "description": "`hour12` is the hour in hour12-format, that starts is minimal 1 and maximal 12, midnight is at 12am and noon is 12pm",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 856,
              "column": 6
            },
            "end": {
              "line": 860,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hour12"
            },
            {
              "name": "old"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_isAmChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 862,
              "column": 6
            },
            "end": {
              "line": 866,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "isAm"
            },
            {
              "name": "old"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_ifClamped",
          "description": "clamp to date component",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 871,
              "column": 6
            },
            "end": {
              "line": 876,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "clamp"
            },
            {
              "name": "comp"
            },
            {
              "name": "hidden"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_checkDefaultTimezone",
          "description": "set the default timezone if needed",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 882,
              "column": 6
            },
            "end": {
              "line": 895,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computeTimezoneShift",
          "description": "correct a timezone shift when date changes from winter to summertime (locally)",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 901,
              "column": 6
            },
            "end": {
              "line": 910,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_timezoneChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 912,
              "column": 6
            },
            "end": {
              "line": 932,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "timezone"
            },
            {
              "name": "oldValue"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_offsetMinutesChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 934,
              "column": 6
            },
            "end": {
              "line": 942,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "offsetMinutes"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_timeZoneHoursMinutesChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 944,
              "column": 6
            },
            "end": {
              "line": 963,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hour"
            },
            {
              "name": "minute"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computeTimezone",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 965,
              "column": 6
            },
            "end": {
              "line": 987,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "offsetMinutes"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computeTimezoneOffset",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 989,
              "column": 6
            },
            "end": {
              "line": 1019,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "timezone"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computeMaxDayOfMonth",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 1021,
              "column": 6
            },
            "end": {
              "line": 1029,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "year"
            },
            {
              "name": "month"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computePartsStep",
          "description": "compute the steps for the related inputs. The day-input is the highest modified input allthough if the step is higher than a day in seconds it might also change month- or year-inputs.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 104,
              "column": 6
            },
            "end": {
              "line": 185,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "step"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeFormMixin"
        },
        {
          "name": "_computePartsDisabled",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 187,
              "column": 6
            },
            "end": {
              "line": 205,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "change"
            },
            {
              "name": "disabled"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeFormMixin"
        },
        {
          "name": "_computeOr",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 318,
              "column": 6
            },
            "end": {
              "line": 320,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "a"
            },
            {
              "name": "b"
            }
          ],
          "inheritedFrom": "DatetimeInputMixin"
        },
        {
          "name": "_computePartOrder",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 322,
              "column": 6
            },
            "end": {
              "line": 324,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "first"
            }
          ],
          "inheritedFrom": "DatetimeInputMixin"
        },
        {
          "name": "_computeResetButtonIsInvisible",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 326,
              "column": 6
            },
            "end": {
              "line": 328,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "valueIsSet"
            },
            {
              "name": "defaultValue"
            },
            {
              "name": "valueAsNumber"
            }
          ],
          "inheritedFrom": "DatetimeInputMixin"
        },
        {
          "name": "_orderDateParts",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/date-input.html",
            "start": {
              "line": 62,
              "column": 6
            },
            "end": {
              "line": 117,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "order"
            },
            {
              "name": "clamp"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DateInputPattern"
        },
        {
          "name": "_getDefaultForProp",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 630,
              "column": 6
            },
            "end": {
              "line": 640,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "prop"
            }
          ],
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 289,
              "column": 6
            },
            "end": {
              "line": 293,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_addSwitchListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 89,
              "column": 6
            },
            "end": {
              "line": 104,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "_removeSwitchListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 106,
              "column": 6
            },
            "end": {
              "line": 116,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "_checkKeycodeSwitch",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 118,
              "column": 6
            },
            "end": {
              "line": 126,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "__getEventTarget",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 128,
              "column": 6
            },
            "end": {
              "line": 142,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            },
            {
              "name": "classSelector"
            }
          ],
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "__increm",
          "description": "increment property by being called by an Event on an `switch`-Node",
          "privacy": "private",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 149,
              "column": 6
            },
            "end": {
              "line": 176,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "Event",
              "description": "Event it was called on"
            },
            {
              "name": "once",
              "type": "Boolean",
              "description": "if true, it doesn't setup an intervall to continue incrementing (e.g. keyPressEvents are fired itself repeatedly while the key is pressed)"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "__incremProp",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 178,
              "column": 6
            },
            "end": {
              "line": 180,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "prop"
            },
            {
              "name": "step"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "_stopActiveIncremJob",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 186,
              "column": 6
            },
            "end": {
              "line": 199,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "_dwellTimeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 201,
              "column": 6
            },
            "end": {
              "line": 207,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dwellTime"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "_dwellDelayChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 209,
              "column": 6
            },
            "end": {
              "line": 215,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dwellDelay"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "_onMouseMoveDay",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 320,
              "column": 6
            },
            "end": {
              "line": 333,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_onClickDay",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 335,
              "column": 6
            },
            "end": {
              "line": 361,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "confirm",
          "description": "confirms the input",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 443,
              "column": 6
            },
            "end": {
              "line": 452,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "[type]",
              "description": "Event"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_computeIncremPropTop",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 374,
              "column": 6
            },
            "end": {
              "line": 379,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hideMonth"
            }
          ],
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_setWeekDayCaptions",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 381,
              "column": 6
            },
            "end": {
              "line": 396,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "locale"
            },
            {
              "name": "firstDayOfWeek"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_setMonthSelectorOptions",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 398,
              "column": 6
            },
            "end": {
              "line": 407,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "locale"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "renderCalendar",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 38,
              "column": 6
            },
            "end": {
              "line": 43,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "year"
            },
            {
              "name": "month"
            },
            {
              "name": "day"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatePickerPattern"
        },
        {
          "name": "_clampDay",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 541,
              "column": 6
            },
            "end": {
              "line": 547,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d"
            }
          ],
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_dayDiff",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 549,
              "column": 6
            },
            "end": {
              "line": 551,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "end"
            },
            {
              "name": "start"
            }
          ],
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_checkKeycodeForDates",
          "description": "key press event handler on days area",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 567,
              "column": 6
            },
            "end": {
              "line": 628,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "[type]",
              "description": "Event"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_addEventListenerToNode",
          "description": "Add the event listener to the node if it is a gestures event.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../polymer/lib/mixins/gesture-event-listeners.html",
            "start": {
              "line": 55,
              "column": 6
            },
            "end": {
              "line": 59,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node",
              "type": "!Node",
              "description": "Node to add event listener to"
            },
            {
              "name": "eventName",
              "type": "string",
              "description": "Name of event"
            },
            {
              "name": "handler",
              "type": "function (!Event): void",
              "description": "Listener function to add"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.GestureEventListeners"
        },
        {
          "name": "_removeEventListenerFromNode",
          "description": "Remove the event listener to the node if it is a gestures event.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../polymer/lib/mixins/gesture-event-listeners.html",
            "start": {
              "line": 69,
              "column": 6
            },
            "end": {
              "line": 73,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node",
              "type": "!Node",
              "description": "Node to remove event listener from"
            },
            {
              "name": "eventName",
              "type": "string",
              "description": "Name of event"
            },
            {
              "name": "handler",
              "type": "function (!Event): void",
              "description": "Listener function to remove"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.GestureEventListeners"
        },
        {
          "name": "_addPickerTransitionEndListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 295,
              "column": 6
            },
            "end": {
              "line": 302,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_removePickerTransitionEndListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 304,
              "column": 6
            },
            "end": {
              "line": 306,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_onPickerTransitionEnd",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 308,
              "column": 6
            },
            "end": {
              "line": 313,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_addCancelOnClickListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 315,
              "column": 6
            },
            "end": {
              "line": 322,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_removeCancelOnClickListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 324,
              "column": 6
            },
            "end": {
              "line": 327,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_stopPropagation",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 329,
              "column": 6
            },
            "end": {
              "line": 332,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_addKeyListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 334,
              "column": 6
            },
            "end": {
              "line": 337,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_removeKeyListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 339,
              "column": 6
            },
            "end": {
              "line": 342,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_nativeOnMobileChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 344,
              "column": 6
            },
            "end": {
              "line": 357,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_checkKeycode",
          "description": "key press event handler",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 363,
              "column": 6
            },
            "end": {
              "line": 382,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "[type]",
              "description": "Event"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "open",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 45,
              "column": 6
            },
            "end": {
              "line": 54,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatePickerPattern"
        },
        {
          "name": "close",
          "description": "close the picker",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 415,
              "column": 6
            },
            "end": {
              "line": 423,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "[type]",
              "description": "Event"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "toggle",
          "description": "toggle the picker",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 429,
              "column": 6
            },
            "end": {
              "line": 437,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "[type]",
              "description": "Event"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "cancel",
          "description": "cancels the input",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 458,
              "column": 6
            },
            "end": {
              "line": 472,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "[type]",
              "description": "Event"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_confirmedValueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 295,
              "column": 6
            },
            "end": {
              "line": 303,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "confirmedValue"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_reset",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 493,
              "column": 6
            },
            "end": {
              "line": 498,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_setConfirmedValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 305,
              "column": 6
            },
            "end": {
              "line": 312,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_resetValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 506,
              "column": 6
            },
            "end": {
              "line": 510,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_autoConfirmChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 512,
              "column": 6
            },
            "end": {
              "line": 514,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "autoConfirm"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_computeAnd",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 181,
              "column": 6
            },
            "end": {
              "line": 183,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "a"
            },
            {
              "name": "b"
            }
          ],
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_computeNativeStep",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 185,
              "column": 6
            },
            "end": {
              "line": 204,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "step"
            },
            {
              "name": "clamp"
            }
          ],
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_computeNativeValueAsNumber",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 206,
              "column": 6
            },
            "end": {
              "line": 227,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "native"
            },
            {
              "name": "valueAsNumber"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_reflectNativeValueAsNumber",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 229,
              "column": 6
            },
            "end": {
              "line": 253,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "native"
            },
            {
              "name": "nativeValueAsNumber"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_setDate",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 255,
              "column": 6
            },
            "end": {
              "line": 262,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_confirmedDatetimeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 264,
              "column": 6
            },
            "end": {
              "line": 276,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "confirmedDatetime"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_resetDate",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 314,
              "column": 6
            },
            "end": {
              "line": 317,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_resetConfirmedValues",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 319,
              "column": 6
            },
            "end": {
              "line": 327,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_resetValues",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 329,
              "column": 6
            },
            "end": {
              "line": 336,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        },
        {
          "url": "demo/date-elements.html",
          "description": "date elements"
        },
        {
          "url": "demo/form.html",
          "description": "in a form"
        },
        {
          "url": "demo/music-album.html",
          "description": "music album demo"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 115,
          "column": 4
        },
        "end": {
          "line": 129,
          "column": 5
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "DatePicker",
      "attributes": [
        {
          "name": "name",
          "description": "name of the input",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 16,
              "column": 10
            },
            "end": {
              "line": 18,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "title",
          "description": "description for the element and can be used as a hint for invalid values",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 23,
              "column": 10
            },
            "end": {
              "line": 26,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "disabled",
          "description": "disables the input",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 31,
              "column": 10
            },
            "end": {
              "line": 35,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "required",
          "description": "required attribute",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 40,
              "column": 10
            },
            "end": {
              "line": 44,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "property-for-value",
          "description": "defines the property that should be used for the value",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 49,
              "column": 10
            },
            "end": {
              "line": 52,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "invalid",
          "description": "required attribute",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 57,
              "column": 10
            },
            "end": {
              "line": 63,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "default",
          "description": "default value of the value, when it does not validate",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 77,
              "column": 10
            },
            "end": {
              "line": 80,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "value",
          "description": "value of the input",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 85,
              "column": 10
            },
            "end": {
              "line": 88,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "locale",
          "description": "The current locale",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 19,
              "column": 10
            },
            "end": {
              "line": 23,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "decimal-separator",
          "description": "locale separator for local decimal values",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 29,
              "column": 10
            },
            "end": {
              "line": 33,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "date-separator",
          "description": "Separator for local date values (date-string is still in ISO-Format)",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 39,
              "column": 10
            },
            "end": {
              "line": 43,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "time-separator",
          "description": "Separator for local time values (time-string is still in ISO-Format)",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 49,
              "column": 10
            },
            "end": {
              "line": 53,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "am-string",
          "description": "locale representation of 'AM'",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 58,
              "column": 10
            },
            "end": {
              "line": 62,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "pm-string",
          "description": "locale representation of 'PM'",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 67,
              "column": 10
            },
            "end": {
              "line": 71,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "date-order",
          "description": "order of date-parts",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 76,
              "column": 10
            },
            "end": {
              "line": 86,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "year",
          "description": "The year of the selected date",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 48,
              "column": 10
            },
            "end": {
              "line": 51,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "month",
          "description": "The month of the selected date (starts with 1)",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 56,
              "column": 10
            },
            "end": {
              "line": 59,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "day",
          "description": "The day of the selected date",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 64,
              "column": 10
            },
            "end": {
              "line": 67,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour",
          "description": "The hour of the selected time",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 72,
              "column": 10
            },
            "end": {
              "line": 75,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour12",
          "description": "hour in 12-hour-format",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 81,
              "column": 10
            },
            "end": {
              "line": 85,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "is-am",
          "description": "true, when A.M. (when `hour` < 12)",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 91,
              "column": 10
            },
            "end": {
              "line": 95,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "minute",
          "description": "The minute of the selected time",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 100,
              "column": 10
            },
            "end": {
              "line": 103,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "second",
          "description": "The second of the selected time",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 108,
              "column": 10
            },
            "end": {
              "line": 111,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "millisecond",
          "description": "The millisecond of the selected time",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 116,
              "column": 10
            },
            "end": {
              "line": 119,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "datetime",
          "description": "the selected date and time (format: iso8601)",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 124,
              "column": 10
            },
            "end": {
              "line": 127,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "date",
          "description": "the selected date (format: iso8601)",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 132,
              "column": 10
            },
            "end": {
              "line": 135,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "time",
          "description": "the selected time (format: iso8601)",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 140,
              "column": 10
            },
            "end": {
              "line": 143,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "value-as-date",
          "description": "The date-object of the selected date",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 148,
              "column": 10
            },
            "end": {
              "line": 152,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Date | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "value-as-number",
          "description": "The value of the selected date",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 157,
              "column": 10
            },
            "end": {
              "line": 161,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "min",
          "description": "The minimal date, could be a number, a date-object or an iso-string in time, date or datetime-notation",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 181,
              "column": 10
            },
            "end": {
              "line": 185,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "max",
          "description": "The maximal date, could be a number, a date-object or an iso-string in time, date or datetime-notation",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 197,
              "column": 10
            },
            "end": {
              "line": 201,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour12-format",
          "description": "when true, 12-hour time format, else 24-hour",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 214,
              "column": 10
            },
            "end": {
              "line": 218,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "clamp",
          "description": "Clamp datetime to a property\npossible values:'month', 'day', 'hour', 'minute', 'second', 'millisecond'",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 224,
              "column": 10
            },
            "end": {
              "line": 228,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "timezone",
          "description": "The timezone offset in '±hh:mm' format",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 233,
              "column": 10
            },
            "end": {
              "line": 237,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "offset-minutes",
          "description": "The offset minutes of the set timezone",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 242,
              "column": 10
            },
            "end": {
              "line": 246,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "step",
          "description": "If set the step defines the step a date should be incremented (in seconds). The input for the most inferior standing that would create an integer step is used to increment the value.\nFor example, if the **step** is:\n + **0.05**: the millisecond-input will increment the value by 50 (50 milliseconds), the other inputs behaive as expected\n + **1.05**: the millisecond-input will increment the value by 1050 (1 second and 50 millisecond), the other inputs behaive as expected\n + **2**: the millisecond-input will be disabled, the second-input will increment the value by 2000 (2 seconds), the other inputs behaive as expected\n + **180**: the millisecond-input and the second-input will be disabled, the minute-input will increment the value by 180000 (3 minutes), the other inputs behaive as expected\nIf `step=\"0\"` all inputs will be disabled, else if the step is below _0.001_ the step will be set to **0.001**. The most supirior input that will become the given step is the day-input.",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 33,
              "column": 10
            },
            "end": {
              "line": 36,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeFormMixin"
        },
        {
          "name": "hide-reset-button",
          "description": "if true, the reset button is hidden",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 298,
              "column": 10
            },
            "end": {
              "line": 301,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "DatetimeInputMixin"
        },
        {
          "name": "with-timezone",
          "description": "if true, timezone inputs are shown",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 306,
              "column": 10
            },
            "end": {
              "line": 309,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "DatetimeInputMixin"
        },
        {
          "name": "dwell-time",
          "description": "dwell time of incrementing inputs by the buttons in milliseconds. It is minimal 15 milliseconds.",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 33,
              "column": 10
            },
            "end": {
              "line": 37,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "dwell-delay",
          "description": "delay when incrementing inputs by the buttons in milliseconds. It is minimal 15 milliseconds.",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 43,
              "column": 10
            },
            "end": {
              "line": 47,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "current-hovered-day-node",
          "description": "Current hovered day node\nto access: bind the attribute ('current-hovered-day-node') and get its dataset `year`, `month` or `day`-property",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 262,
              "column": 10
            },
            "end": {
              "line": 266,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Node | null | undefined",
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "current-active-day-node",
          "description": "Node of the last clicked day-field (by clicking or keypress)\nto access: bind the attribute ('current-active-day-node') and get its dataset `year`, `month` or `day`-property",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 272,
              "column": 10
            },
            "end": {
              "line": 276,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Node | null | undefined",
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "current-selected-day-node",
          "description": "Node of the last selected day\nto access: bind the attribute ('current-selected-day-node') and get its dataset `year`, `month` or `day`-property",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 282,
              "column": 10
            },
            "end": {
              "line": 286,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Node | null | undefined",
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "first-day-of-week",
          "description": "Defines the first day of the week to use. Defaults to `1` (`monday`)\ne.g. when `firstDayOfWeek` is `0` the first day of the week would be `sunday`",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 300,
              "column": 10
            },
            "end": {
              "line": 303,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "native",
          "description": "Set to `true` to use the native input, if it available",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 173,
              "column": 10
            },
            "end": {
              "line": 176,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "native-on-mobile",
          "description": "Set to `true` to use the native input automatically on mobile devices, if it available",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 181,
              "column": 10
            },
            "end": {
              "line": 184,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "mobile-user-agent-test-string",
          "description": "When `nativeOnMobile` is set to `true` this string is used to test the userAgent for a mobile device",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 189,
              "column": 10
            },
            "end": {
              "line": 193,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "opened",
          "description": "if `true` the picker is opened",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 198,
              "column": 10
            },
            "end": {
              "line": 203,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "horizontal-align",
          "description": "The orientation against which to align the element horizontally\nrelative to the related input element. Possible values are \"left\", \"right\", \"center\", \"auto\". (comparable to `iron-fit-behavior` and its `no-overlap`-attribute)",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 209,
              "column": 10
            },
            "end": {
              "line": 213,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "vertical-align",
          "description": "The orientation against which to align the element vertically\nrelative to the related input element. Possible values are \"top\", \"bottom\", \"middle\", \"auto\". (comparable to `iron-fit-behavior` and its `no-overlap`-attribute)",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 219,
              "column": 10
            },
            "end": {
              "line": 223,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "auto-confirm",
          "description": "Set to `true` to make the input auto-confirming",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 228,
              "column": 10
            },
            "end": {
              "line": 231,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "no-cancel-on-esc-key",
          "description": "Set to `true` to disable canceling the overlay with the ESC key.",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 236,
              "column": 10
            },
            "end": {
              "line": 239,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "no-cancel-on-outside-click",
          "description": "Set to `true` to disable canceling the dropdown by clicking outside the picker.",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 244,
              "column": 10
            },
            "end": {
              "line": 247,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "no-tip",
          "description": "Set to `true` to disable the tip of the picker",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 252,
              "column": 10
            },
            "end": {
              "line": 255,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "confirmed-value",
          "description": "The confirmed value. When `auto-confirm` is not set, the value will only change, when you confirm.",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 260,
              "column": 10
            },
            "end": {
              "line": 263,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "confirmed-datetime",
          "description": "The confirmed datetime. When `auto-confirm` is not set, the datetime will only change, when you confirm.",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 154,
              "column": 10
            },
            "end": {
              "line": 157,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "hide-now-button",
          "description": "Set to `true` to hide the `now`-button",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 162,
              "column": 10
            },
            "end": {
              "line": 164,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "DatetimePickerMixin"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "input-picker-closed",
          "description": "input-picker-closed\nFired after a picker has been closed.",
          "metadata": {},
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "type": "CustomEvent",
          "name": "input-picker-opened",
          "description": "input-picker-opened\nFired when a picker has been opened.",
          "metadata": {},
          "inheritedFrom": "InputPickerPattern"
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "date-picker",
      "mixins": [
        "DatePickerPattern"
      ]
    },
    {
      "description": "`<time-element>` adds a time-input to your page using Polymer.\n\nIf you like to connect it to an input, try it like:\n\n ```html\n    <input type=\"time\" value-as-number=\"{{time::input}}\" step=\"1\">\n\n    <time-element time=\"{{time}}\"></time-element>\n ```\n\nFor example if you clamp on `millisecond`, you can round to `0` millisecond and hide the input. If you set `clamp=\"second\"` the inputs for *second* and *millisecond* are hidden.\n\nThe following custom properties and mixins are also available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--time-element`                   | Mixin applied to the time-element              | {}\n\n Have a look at [input-picker-pattern#input-picker-shared-style](https://github.com/fooloomanzoo/input-picker-pattern#input-picker-shared-style) and [input-picker-pattern#input-shared-style](https://github.com/fooloomanzoo/input-picker-pattern#input-shared-style) to see how to style the element.",
      "summary": "",
      "path": "time-element.html",
      "properties": [
        {
          "name": "dwellTime",
          "type": "number",
          "description": "dwell time of incrementing inputs by the buttons in milliseconds. It is minimal 15 milliseconds.",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 33,
              "column": 10
            },
            "end": {
              "line": 37,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_dwellTimeChanged\"",
              "attributeType": "Number"
            }
          },
          "defaultValue": "50",
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "dwellDelay",
          "type": "number",
          "description": "delay when incrementing inputs by the buttons in milliseconds. It is minimal 15 milliseconds.",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 43,
              "column": 10
            },
            "end": {
              "line": 47,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_dwellTimeChanged\"",
              "attributeType": "Number"
            }
          },
          "defaultValue": "500",
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "_switchClassSelector",
          "type": "string | null | undefined",
          "description": "class property of switches",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 52,
              "column": 10
            },
            "end": {
              "line": 55,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"switch\"",
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "name",
          "type": "string | null | undefined",
          "description": "name of the input",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 16,
              "column": 10
            },
            "end": {
              "line": 18,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "title",
          "type": "string | null | undefined",
          "description": "description for the element and can be used as a hint for invalid values",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 23,
              "column": 10
            },
            "end": {
              "line": 26,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "disabled",
          "type": "boolean | null | undefined",
          "description": "disables the input",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 31,
              "column": 10
            },
            "end": {
              "line": 35,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "required",
          "type": "boolean | null | undefined",
          "description": "required attribute",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 40,
              "column": 10
            },
            "end": {
              "line": 44,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "propertyForValue",
          "type": "string | null | undefined",
          "description": "defines the property that should be used for the value",
          "privacy": "public",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 69,
              "column": 10
            },
            "end": {
              "line": 72,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"valueAsNumber\"",
          "inheritedFrom": "DatetimeFormMixin"
        },
        {
          "name": "invalid",
          "type": "boolean | null | undefined",
          "description": "required attribute",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 57,
              "column": 10
            },
            "end": {
              "line": 63,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_valueIsSet",
          "type": "boolean | null | undefined",
          "description": "is true when the value is not undefined",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 68,
              "column": 10
            },
            "end": {
              "line": 72,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "default",
          "type": "Object | null | undefined",
          "description": "The default value of the input, could be a number, a date-object or an iso-string in time, date or datetime-notation",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 166,
              "column": 10
            },
            "end": {
              "line": 168,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "value",
          "type": "Object | null | undefined",
          "description": "value of the input",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 85,
              "column": 10
            },
            "end": {
              "line": 88,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "locale",
          "type": "string | null | undefined",
          "description": "The current locale",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 19,
              "column": 10
            },
            "end": {
              "line": 23,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "decimalSeparator",
          "type": "string",
          "description": "locale separator for local decimal values",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 29,
              "column": 10
            },
            "end": {
              "line": 33,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "dateSeparator",
          "type": "string",
          "description": "Separator for local date values (date-string is still in ISO-Format)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 39,
              "column": 10
            },
            "end": {
              "line": 43,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "timeSeparator",
          "type": "string",
          "description": "Separator for local time values (time-string is still in ISO-Format)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 49,
              "column": 10
            },
            "end": {
              "line": 53,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "amString",
          "type": "string | null | undefined",
          "description": "locale representation of 'AM'",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 58,
              "column": 10
            },
            "end": {
              "line": 62,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "pmString",
          "type": "string | null | undefined",
          "description": "locale representation of 'PM'",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 67,
              "column": 10
            },
            "end": {
              "line": 71,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "dateOrder",
          "type": "Object | null | undefined",
          "description": "order of date-parts",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 76,
              "column": 10
            },
            "end": {
              "line": 86,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Object"
            }
          },
          "defaultValue": "{\"parts\":[],\"timeFirst\":false,\"dateFirst\":true}",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "year",
          "type": "number | null | undefined",
          "description": "The year of the selected date",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 48,
              "column": 10
            },
            "end": {
              "line": 51,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "month",
          "type": "number | null | undefined",
          "description": "The month of the selected date (starts with 1)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 56,
              "column": 10
            },
            "end": {
              "line": 59,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "day",
          "type": "number | null | undefined",
          "description": "The day of the selected date",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 64,
              "column": 10
            },
            "end": {
              "line": 67,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour",
          "type": "number | null | undefined",
          "description": "The hour of the selected time",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 72,
              "column": 10
            },
            "end": {
              "line": 75,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour12",
          "type": "number",
          "description": "hour in 12-hour-format",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 81,
              "column": 10
            },
            "end": {
              "line": 85,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_hour12Changed\"",
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "isAm",
          "type": "boolean",
          "description": "true, when A.M. (when `hour` < 12)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 91,
              "column": 10
            },
            "end": {
              "line": 95,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_isAmChanged\"",
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "minute",
          "type": "number | null | undefined",
          "description": "The minute of the selected time",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 100,
              "column": 10
            },
            "end": {
              "line": 103,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "second",
          "type": "number | null | undefined",
          "description": "The second of the selected time",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 108,
              "column": 10
            },
            "end": {
              "line": 111,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "millisecond",
          "type": "number | null | undefined",
          "description": "The millisecond of the selected time",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 116,
              "column": 10
            },
            "end": {
              "line": 119,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "datetime",
          "type": "string | null | undefined",
          "description": "the selected date and time (format: iso8601)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 124,
              "column": 10
            },
            "end": {
              "line": 127,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "date",
          "type": "string | null | undefined",
          "description": "the selected date (format: iso8601)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 132,
              "column": 10
            },
            "end": {
              "line": 135,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "time",
          "type": "string | null | undefined",
          "description": "the selected time (format: iso8601)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 140,
              "column": 10
            },
            "end": {
              "line": 143,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "valueAsDate",
          "type": "Date | null | undefined",
          "description": "The date-object of the selected date",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 148,
              "column": 10
            },
            "end": {
              "line": 152,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_valueAsDateChanged\"",
              "attributeType": "Date"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "valueAsNumber",
          "type": "number | null | undefined",
          "description": "The value of the selected date",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 157,
              "column": 10
            },
            "end": {
              "line": 161,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_valueAsNumberChanged\"",
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_defaultValue",
          "type": "number | null | undefined",
          "description": "value of the default date",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 173,
              "column": 10
            },
            "end": {
              "line": 176,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "min",
          "type": "Object | null | undefined",
          "description": "The minimal date, could be a number, a date-object or an iso-string in time, date or datetime-notation",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 181,
              "column": 10
            },
            "end": {
              "line": 185,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_minChanged\"",
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_minValue",
          "type": "number | null | undefined",
          "description": "value if the minimum date",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 190,
              "column": 10
            },
            "end": {
              "line": 192,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "max",
          "type": "Object | null | undefined",
          "description": "The maximal date, could be a number, a date-object or an iso-string in time, date or datetime-notation",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 197,
              "column": 10
            },
            "end": {
              "line": 201,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_maxChanged\"",
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_maxValue",
          "type": "number | null | undefined",
          "description": "value if the maximum date",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 206,
              "column": 10
            },
            "end": {
              "line": 208,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour12Format",
          "type": "boolean",
          "description": "when true, 12-hour time format, else 24-hour",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 214,
              "column": 10
            },
            "end": {
              "line": 218,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "clamp",
          "type": "string | null | undefined",
          "description": "Clamp datetime to a property\npossible values:'month', 'day', 'hour', 'minute', 'second', 'millisecond'",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 224,
              "column": 10
            },
            "end": {
              "line": 228,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_clampChanged\"",
              "attributeType": "String"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "timezone",
          "type": "string | null | undefined",
          "description": "The timezone offset in '±hh:mm' format",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 233,
              "column": 10
            },
            "end": {
              "line": 237,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_timezoneChanged\"",
              "attributeType": "String"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "offsetMinutes",
          "type": "number | null | undefined",
          "description": "The offset minutes of the set timezone",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 242,
              "column": 10
            },
            "end": {
              "line": 246,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_offsetMinutesChanged\"",
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_timeZoneHours",
          "type": "number | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 248,
              "column": 10
            },
            "end": {
              "line": 250,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_timeZoneMinutes",
          "type": "number | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 252,
              "column": 10
            },
            "end": {
              "line": 254,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_recentLocalTimezoneOffset",
          "type": "number | null | undefined",
          "description": "The offset minute of the current datetime",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 259,
              "column": 10
            },
            "end": {
              "line": 261,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_timeOnly",
          "type": "boolean | null | undefined",
          "description": "if true perspective starts at 0 (1970-01-01)",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 169,
              "column": 10
            },
            "end": {
              "line": 172,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "true",
          "inheritedFrom": "TimeElementPattern"
        },
        {
          "name": "_maxDayOfMonth",
          "type": "number",
          "description": "exclusive max day of month",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 275,
              "column": 10
            },
            "end": {
              "line": 278,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_dateLocked",
          "type": "boolean | null | undefined",
          "description": "lock to date and ignore time",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 283,
              "column": 10
            },
            "end": {
              "line": 286,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "step",
          "type": "number | null | undefined",
          "description": "If set the step defines the step a date should be incremented (in seconds). The input for the most inferior standing that would create an integer step is used to increment the value.\nFor example, if the **step** is:\n + **0.05**: the millisecond-input will increment the value by 50 (50 milliseconds), the other inputs behaive as expected\n + **1.05**: the millisecond-input will increment the value by 1050 (1 second and 50 millisecond), the other inputs behaive as expected\n + **2**: the millisecond-input will be disabled, the second-input will increment the value by 2000 (2 seconds), the other inputs behaive as expected\n + **180**: the millisecond-input and the second-input will be disabled, the minute-input will increment the value by 180000 (3 minutes), the other inputs behaive as expected\nIf `step=\"0\"` all inputs will be disabled, else if the step is below _0.001_ the step will be set to **0.001**. The most supirior input that will become the given step is the day-input.",
          "privacy": "public",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 33,
              "column": 10
            },
            "end": {
              "line": 36,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeFormMixin"
        },
        {
          "name": "_partsDisabled",
          "type": "Object | null | undefined",
          "description": "date-parts that are disabled",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 41,
              "column": 10
            },
            "end": {
              "line": 47,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Object"
            }
          },
          "defaultValue": "{}",
          "inheritedFrom": "DatetimeFormMixin"
        },
        {
          "name": "_partsStep",
          "type": "Object | null | undefined",
          "description": "the computed steps for the date-parts",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 52,
              "column": 10
            },
            "end": {
              "line": 65,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "Object"
            }
          },
          "defaultValue": "{\"day\":1,\"hour\":1,\"minute\":1,\"second\":1,\"millisecond\":1}",
          "inheritedFrom": "DatetimeFormMixin"
        },
        {
          "name": "withTimezone",
          "type": "boolean | null | undefined",
          "description": "if true, timezone inputs are shown",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 161,
              "column": 10
            },
            "end": {
              "line": 164,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "TimeElementPattern"
        }
      ],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 114,
              "column": 6
            },
            "end": {
              "line": 117,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 82,
              "column": 6
            },
            "end": {
              "line": 87,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "_addSwitchListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 89,
              "column": 6
            },
            "end": {
              "line": 104,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "_removeSwitchListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 106,
              "column": 6
            },
            "end": {
              "line": 116,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "_checkKeycodeSwitch",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 118,
              "column": 6
            },
            "end": {
              "line": 126,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "__getEventTarget",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 128,
              "column": 6
            },
            "end": {
              "line": 142,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            },
            {
              "name": "classSelector"
            }
          ],
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "__increm",
          "description": "increment property by being called by an Event on an `switch`-Node",
          "privacy": "private",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 149,
              "column": 6
            },
            "end": {
              "line": 176,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "Event",
              "description": "Event it was called on"
            },
            {
              "name": "once",
              "type": "Boolean",
              "description": "if true, it doesn't setup an intervall to continue incrementing (e.g. keyPressEvents are fired itself repeatedly while the key is pressed)"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "__incremProp",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 178,
              "column": 6
            },
            "end": {
              "line": 180,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "prop"
            },
            {
              "name": "step"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "_getDefaultForProp",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 182,
              "column": 6
            },
            "end": {
              "line": 184,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "prop"
            }
          ],
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "_stopActiveIncremJob",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 186,
              "column": 6
            },
            "end": {
              "line": 199,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "_dwellTimeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 201,
              "column": 6
            },
            "end": {
              "line": 207,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dwellTime"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "_dwellDelayChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 209,
              "column": 6
            },
            "end": {
              "line": 215,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dwellDelay"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "_attachDom",
          "description": "attach dom with `delegatesFocus: true` so that the element is also focussed while its's children are too, and to autofocus to first tabable",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 103,
              "column": 6
            },
            "end": {
              "line": 112,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom"
            }
          ],
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "validate",
          "description": "validates the input for iron-form",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 122,
              "column": 6
            },
            "end": {
              "line": 124,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_computeInvalid",
          "description": "defines whether the value is set",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 130,
              "column": 6
            },
            "end": {
              "line": 132,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "[Object]"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_validate",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 141,
              "column": 6
            },
            "end": {
              "line": 143,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "Object",
              "description": "value to validate"
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "true, if the value is valid"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_computeValueIsSet",
          "description": "defines whether the value is set",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 149,
              "column": 6
            },
            "end": {
              "line": 151,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "[Object]"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_isSet",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 90,
              "column": 6
            },
            "end": {
              "line": 92,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "inheritedFrom": "DatetimeFormMixin"
        },
        {
          "name": "_valueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 94,
              "column": 6
            },
            "end": {
              "line": 99,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeFormMixin"
        },
        {
          "name": "_defaultChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 83,
              "column": 6
            },
            "end": {
              "line": 88,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "def"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeFormMixin"
        },
        {
          "name": "_createReflectPropertyToValueObserver",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 180,
              "column": 6
            },
            "end": {
              "line": 190,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "prop"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_reflectPropertyToValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 192,
              "column": 6
            },
            "end": {
              "line": 194,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_reflectValueToProperty",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 196,
              "column": 6
            },
            "end": {
              "line": 198,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_localeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 96,
              "column": 6
            },
            "end": {
              "line": 283,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "locale"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "_shouldPropertyChange",
          "description": "overwritten of polymer to handle -0",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 34,
              "column": 6
            },
            "end": {
              "line": 40,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property"
            },
            {
              "name": "value"
            },
            {
              "name": "old"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "now",
          "description": "Sets value to the actual date",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 304,
              "column": 6
            },
            "end": {
              "line": 320,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "setDate",
          "description": "sets date to all necessary properties",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 326,
              "column": 6
            },
            "end": {
              "line": 390,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date",
              "description": "[the date to set]"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "resetDate",
          "description": "resets the date (if `default` is set, it will be used for the new value)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 396,
              "column": 6
            },
            "end": {
              "line": 433,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "Event",
              "description": "[a causing event will not propagated]"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_defaultValueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 435,
              "column": 6
            },
            "end": {
              "line": 442,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "def"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computeDefaultValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 444,
              "column": 6
            },
            "end": {
              "line": 446,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "def"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computeDatetime",
          "description": "modify date components of a date-object. it needs to be applied or called on a date object",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 460,
              "column": 6
            },
            "end": {
              "line": 537,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "year",
              "type": "number"
            },
            {
              "name": "month",
              "type": "number"
            },
            {
              "name": "day",
              "type": "number"
            },
            {
              "name": "hour",
              "type": "number"
            },
            {
              "name": "minute",
              "type": "number"
            },
            {
              "name": "second",
              "type": "number"
            },
            {
              "name": "millisecond",
              "type": "number"
            }
          ],
          "return": {
            "type": "object",
            "desc": "the changed object and the new offset-minutes"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_dateTimeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 539,
              "column": 6
            },
            "end": {
              "line": 566,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "date"
            },
            {
              "name": "time"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_datetimeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 568,
              "column": 6
            },
            "end": {
              "line": 611,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "datetime"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_valueAsNumberChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 613,
              "column": 6
            },
            "end": {
              "line": 620,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_valueAsDateChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 622,
              "column": 6
            },
            "end": {
              "line": 633,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_fromDatetime",
          "description": "compute a date object",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 640,
              "column": 6
            },
            "end": {
              "line": 667,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "datetime"
            }
          ],
          "return": {
            "type": "Date",
            "desc": "date"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_clampChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 669,
              "column": 6
            },
            "end": {
              "line": 677,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "clamp"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_minChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 679,
              "column": 6
            },
            "end": {
              "line": 696,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "min"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_maxChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 698,
              "column": 6
            },
            "end": {
              "line": 715,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "max"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_minMaxValueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 717,
              "column": 6
            },
            "end": {
              "line": 721,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_checkThreshold",
          "description": "test date object against thresholds",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 728,
              "column": 6
            },
            "end": {
              "line": 739,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date"
            }
          ],
          "return": {
            "type": "Date",
            "desc": "ether the threshold when the date is exceeding or the date object itself"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_toDate",
          "description": "get date string from a date object",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 746,
              "column": 6
            },
            "end": {
              "line": 752,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date",
              "description": "the Date to serialize"
            }
          ],
          "return": {
            "type": "String",
            "desc": "date string"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_toTime",
          "description": "get UTC time string from a date object",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 759,
              "column": 6
            },
            "end": {
              "line": 764,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date",
              "description": "the Date to serialize"
            }
          ],
          "return": {
            "type": "String",
            "desc": "date string"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_toUTCDate",
          "description": "get UTC date string from a date object",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 771,
              "column": 6
            },
            "end": {
              "line": 777,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date",
              "description": "the Date to serialize"
            }
          ],
          "return": {
            "type": "String",
            "desc": "date string"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_toUTCTime",
          "description": "get UTC time string from a date object",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 784,
              "column": 6
            },
            "end": {
              "line": 789,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date",
              "description": "the Date to serialize"
            }
          ],
          "return": {
            "type": "String",
            "desc": "time string"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "__toDate",
          "description": "get date string from date components",
          "privacy": "private",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 798,
              "column": 6
            },
            "end": {
              "line": 800,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "year",
              "type": "Number"
            },
            {
              "name": "month",
              "type": "Number"
            },
            {
              "name": "day",
              "type": "Number"
            }
          ],
          "return": {
            "type": "String",
            "desc": "date string"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "__toTime",
          "description": "get time string from date components",
          "privacy": "private",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 810,
              "column": 6
            },
            "end": {
              "line": 812,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hour",
              "type": "Number"
            },
            {
              "name": "minute",
              "type": "Number"
            },
            {
              "name": "second",
              "type": "Number"
            },
            {
              "name": "millisecond",
              "type": "Number"
            }
          ],
          "return": {
            "type": "String",
            "desc": "time string"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_clampUTC",
          "description": "clamp UTC values",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 820,
              "column": 6
            },
            "end": {
              "line": 837,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date",
              "description": "the Date to clamp"
            },
            {
              "name": "clamp",
              "type": "String",
              "description": "the date component to clamp"
            }
          ],
          "return": {
            "type": "Date",
            "desc": "the clamped date"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_pad",
          "description": "pad a string with 0",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 845,
              "column": 6
            },
            "end": {
              "line": 851,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "n",
              "type": "Number",
              "description": "number to pad"
            },
            {
              "name": "padLength",
              "type": "Number",
              "description": "total length of strings"
            }
          ],
          "return": {
            "type": "String",
            "desc": "padded string"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_hour12Changed",
          "description": "`hour12` is the hour in hour12-format, that starts is minimal 1 and maximal 12, midnight is at 12am and noon is 12pm",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 856,
              "column": 6
            },
            "end": {
              "line": 860,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hour12"
            },
            {
              "name": "old"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_isAmChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 862,
              "column": 6
            },
            "end": {
              "line": 866,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "isAm"
            },
            {
              "name": "old"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_ifClamped",
          "description": "clamp to date component",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 871,
              "column": 6
            },
            "end": {
              "line": 876,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "clamp"
            },
            {
              "name": "comp"
            },
            {
              "name": "hidden"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_checkDefaultTimezone",
          "description": "set the default timezone if needed",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 882,
              "column": 6
            },
            "end": {
              "line": 895,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computeTimezoneShift",
          "description": "correct a timezone shift when date changes from winter to summertime (locally)",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 901,
              "column": 6
            },
            "end": {
              "line": 910,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_timezoneChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 912,
              "column": 6
            },
            "end": {
              "line": 932,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "timezone"
            },
            {
              "name": "oldValue"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_offsetMinutesChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 934,
              "column": 6
            },
            "end": {
              "line": 942,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "offsetMinutes"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_timeZoneHoursMinutesChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 944,
              "column": 6
            },
            "end": {
              "line": 963,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hour"
            },
            {
              "name": "minute"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computeTimezone",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 965,
              "column": 6
            },
            "end": {
              "line": 987,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "offsetMinutes"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computeTimezoneOffset",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 989,
              "column": 6
            },
            "end": {
              "line": 1019,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "timezone"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computeMaxDayOfMonth",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 1021,
              "column": 6
            },
            "end": {
              "line": 1029,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "year"
            },
            {
              "name": "month"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computePartsStep",
          "description": "compute the steps for the related inputs. The day-input is the highest modified input allthough if the step is higher than a day in seconds it might also change month- or year-inputs.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 104,
              "column": 6
            },
            "end": {
              "line": 185,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "step"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeFormMixin"
        },
        {
          "name": "_computePartsDisabled",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 187,
              "column": 6
            },
            "end": {
              "line": 205,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "change"
            },
            {
              "name": "disabled"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeFormMixin"
        },
        {
          "name": "_computeMultipleClamp",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 183,
              "column": 6
            },
            "end": {
              "line": 185,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "clamp"
            },
            {
              "name": "prop1"
            },
            {
              "name": "prop2"
            }
          ],
          "inheritedFrom": "TimeElementPattern"
        },
        {
          "name": "_switchAm",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 187,
              "column": 6
            },
            "end": {
              "line": 190,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "TimeElementPattern"
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/time-elements.html",
          "description": "time elements"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 226,
          "column": 4
        },
        "end": {
          "line": 240,
          "column": 5
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "TimeElement",
      "attributes": [
        {
          "name": "dwell-time",
          "description": "dwell time of incrementing inputs by the buttons in milliseconds. It is minimal 15 milliseconds.",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 33,
              "column": 10
            },
            "end": {
              "line": 37,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "dwell-delay",
          "description": "delay when incrementing inputs by the buttons in milliseconds. It is minimal 15 milliseconds.",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 43,
              "column": 10
            },
            "end": {
              "line": 47,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "name",
          "description": "name of the input",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 16,
              "column": 10
            },
            "end": {
              "line": 18,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "title",
          "description": "description for the element and can be used as a hint for invalid values",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 23,
              "column": 10
            },
            "end": {
              "line": 26,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "disabled",
          "description": "disables the input",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 31,
              "column": 10
            },
            "end": {
              "line": 35,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "required",
          "description": "required attribute",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 40,
              "column": 10
            },
            "end": {
              "line": 44,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "property-for-value",
          "description": "defines the property that should be used for the value",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 69,
              "column": 10
            },
            "end": {
              "line": 72,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "DatetimeFormMixin"
        },
        {
          "name": "invalid",
          "description": "required attribute",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 57,
              "column": 10
            },
            "end": {
              "line": 63,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "default",
          "description": "The default value of the input, could be a number, a date-object or an iso-string in time, date or datetime-notation",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 166,
              "column": 10
            },
            "end": {
              "line": 168,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "value",
          "description": "value of the input",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 85,
              "column": 10
            },
            "end": {
              "line": 88,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "locale",
          "description": "The current locale",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 19,
              "column": 10
            },
            "end": {
              "line": 23,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "decimal-separator",
          "description": "locale separator for local decimal values",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 29,
              "column": 10
            },
            "end": {
              "line": 33,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "date-separator",
          "description": "Separator for local date values (date-string is still in ISO-Format)",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 39,
              "column": 10
            },
            "end": {
              "line": 43,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "time-separator",
          "description": "Separator for local time values (time-string is still in ISO-Format)",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 49,
              "column": 10
            },
            "end": {
              "line": 53,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "am-string",
          "description": "locale representation of 'AM'",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 58,
              "column": 10
            },
            "end": {
              "line": 62,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "pm-string",
          "description": "locale representation of 'PM'",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 67,
              "column": 10
            },
            "end": {
              "line": 71,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "date-order",
          "description": "order of date-parts",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 76,
              "column": 10
            },
            "end": {
              "line": 86,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "year",
          "description": "The year of the selected date",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 48,
              "column": 10
            },
            "end": {
              "line": 51,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "month",
          "description": "The month of the selected date (starts with 1)",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 56,
              "column": 10
            },
            "end": {
              "line": 59,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "day",
          "description": "The day of the selected date",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 64,
              "column": 10
            },
            "end": {
              "line": 67,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour",
          "description": "The hour of the selected time",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 72,
              "column": 10
            },
            "end": {
              "line": 75,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour12",
          "description": "hour in 12-hour-format",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 81,
              "column": 10
            },
            "end": {
              "line": 85,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "is-am",
          "description": "true, when A.M. (when `hour` < 12)",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 91,
              "column": 10
            },
            "end": {
              "line": 95,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "minute",
          "description": "The minute of the selected time",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 100,
              "column": 10
            },
            "end": {
              "line": 103,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "second",
          "description": "The second of the selected time",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 108,
              "column": 10
            },
            "end": {
              "line": 111,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "millisecond",
          "description": "The millisecond of the selected time",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 116,
              "column": 10
            },
            "end": {
              "line": 119,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "datetime",
          "description": "the selected date and time (format: iso8601)",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 124,
              "column": 10
            },
            "end": {
              "line": 127,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "date",
          "description": "the selected date (format: iso8601)",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 132,
              "column": 10
            },
            "end": {
              "line": 135,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "time",
          "description": "the selected time (format: iso8601)",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 140,
              "column": 10
            },
            "end": {
              "line": 143,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "value-as-date",
          "description": "The date-object of the selected date",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 148,
              "column": 10
            },
            "end": {
              "line": 152,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Date | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "value-as-number",
          "description": "The value of the selected date",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 157,
              "column": 10
            },
            "end": {
              "line": 161,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "min",
          "description": "The minimal date, could be a number, a date-object or an iso-string in time, date or datetime-notation",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 181,
              "column": 10
            },
            "end": {
              "line": 185,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "max",
          "description": "The maximal date, could be a number, a date-object or an iso-string in time, date or datetime-notation",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 197,
              "column": 10
            },
            "end": {
              "line": 201,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour12-format",
          "description": "when true, 12-hour time format, else 24-hour",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 214,
              "column": 10
            },
            "end": {
              "line": 218,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "clamp",
          "description": "Clamp datetime to a property\npossible values:'month', 'day', 'hour', 'minute', 'second', 'millisecond'",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 224,
              "column": 10
            },
            "end": {
              "line": 228,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "timezone",
          "description": "The timezone offset in '±hh:mm' format",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 233,
              "column": 10
            },
            "end": {
              "line": 237,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "offset-minutes",
          "description": "The offset minutes of the set timezone",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 242,
              "column": 10
            },
            "end": {
              "line": 246,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "step",
          "description": "If set the step defines the step a date should be incremented (in seconds). The input for the most inferior standing that would create an integer step is used to increment the value.\nFor example, if the **step** is:\n + **0.05**: the millisecond-input will increment the value by 50 (50 milliseconds), the other inputs behaive as expected\n + **1.05**: the millisecond-input will increment the value by 1050 (1 second and 50 millisecond), the other inputs behaive as expected\n + **2**: the millisecond-input will be disabled, the second-input will increment the value by 2000 (2 seconds), the other inputs behaive as expected\n + **180**: the millisecond-input and the second-input will be disabled, the minute-input will increment the value by 180000 (3 minutes), the other inputs behaive as expected\nIf `step=\"0\"` all inputs will be disabled, else if the step is below _0.001_ the step will be set to **0.001**. The most supirior input that will become the given step is the day-input.",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 33,
              "column": 10
            },
            "end": {
              "line": 36,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeFormMixin"
        },
        {
          "name": "with-timezone",
          "description": "if true, timezone inputs are shown",
          "sourceRange": {
            "start": {
              "line": 161,
              "column": 10
            },
            "end": {
              "line": 164,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "TimeElementPattern"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "time-element",
      "mixins": [
        "TimeElementPattern"
      ]
    },
    {
      "description": "`<time-picker>` is a picker for time for **[Polymer](https://github.com/Polymer/polymer)** that can use the **native** input, too. If the **native** picker is choosen and is not supported, this element uses the **polyfill** time-picker. The `<time-element>` will come in place if the native picker is not available or is not explicitly wanted. A range picker is provided by combining the `min`- and `max`-attributes.\n\n ```html\n   <time-picker value=\"{{value}}\"></time-picker>\n ```\n\n If you need an **overlay** then use `overlay-time-picker`, that creates the element in an `overlay-element`, that extends *IronOverlayBehavior* and will create some of its attribute-bindings.\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--time-element`                   | Mixin applied to the time-element              | {}\n\n Have a look at [input-picker-pattern#input-picker-shared-style](https://github.com/fooloomanzoo/input-picker-pattern#input-picker-shared-style) and [input-picker-pattern#input-shared-style](https://github.com/fooloomanzoo/input-picker-pattern#input-shared-style) to see how to style the element.",
      "summary": "",
      "path": "time-picker.html",
      "properties": [
        {
          "name": "name",
          "type": "string | null | undefined",
          "description": "name of the input",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 16,
              "column": 10
            },
            "end": {
              "line": 18,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "title",
          "type": "string | null | undefined",
          "description": "description for the element and can be used as a hint for invalid values",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 23,
              "column": 10
            },
            "end": {
              "line": 26,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "disabled",
          "type": "boolean | null | undefined",
          "description": "disables the input",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 31,
              "column": 10
            },
            "end": {
              "line": 35,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "required",
          "type": "boolean | null | undefined",
          "description": "required attribute",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 40,
              "column": 10
            },
            "end": {
              "line": 44,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "propertyForValue",
          "type": "string | null | undefined",
          "description": "defines the property that should be used for the value",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 49,
              "column": 10
            },
            "end": {
              "line": 52,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_createReflectPropertyToValueObserver\"",
              "attributeType": "String"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "invalid",
          "type": "boolean | null | undefined",
          "description": "required attribute",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 57,
              "column": 10
            },
            "end": {
              "line": 63,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_valueIsSet",
          "type": "boolean | null | undefined",
          "description": "is true when the value is not undefined",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 68,
              "column": 10
            },
            "end": {
              "line": 72,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "default",
          "type": "Object | null | undefined",
          "description": "default value of the value, when it does not validate",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 77,
              "column": 10
            },
            "end": {
              "line": 80,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_defaultChanged\"",
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "value",
          "type": "Object | null | undefined",
          "description": "value of the input",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 85,
              "column": 10
            },
            "end": {
              "line": 88,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "locale",
          "type": "string | null | undefined",
          "description": "The current locale",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 19,
              "column": 10
            },
            "end": {
              "line": 23,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "decimalSeparator",
          "type": "string",
          "description": "locale separator for local decimal values",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 29,
              "column": 10
            },
            "end": {
              "line": 33,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "dateSeparator",
          "type": "string",
          "description": "Separator for local date values (date-string is still in ISO-Format)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 39,
              "column": 10
            },
            "end": {
              "line": 43,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "timeSeparator",
          "type": "string",
          "description": "Separator for local time values (time-string is still in ISO-Format)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 49,
              "column": 10
            },
            "end": {
              "line": 53,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "amString",
          "type": "string | null | undefined",
          "description": "locale representation of 'AM'",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 58,
              "column": 10
            },
            "end": {
              "line": 62,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "pmString",
          "type": "string | null | undefined",
          "description": "locale representation of 'PM'",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 67,
              "column": 10
            },
            "end": {
              "line": 71,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "dateOrder",
          "type": "Object | null | undefined",
          "description": "order of date-parts",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 76,
              "column": 10
            },
            "end": {
              "line": 86,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Object"
            }
          },
          "defaultValue": "{\"parts\":[],\"timeFirst\":false,\"dateFirst\":true}",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "year",
          "type": "number | null | undefined",
          "description": "The year of the selected date",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 48,
              "column": 10
            },
            "end": {
              "line": 51,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "month",
          "type": "number | null | undefined",
          "description": "The month of the selected date (starts with 1)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 56,
              "column": 10
            },
            "end": {
              "line": 59,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "day",
          "type": "number | null | undefined",
          "description": "The day of the selected date",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 64,
              "column": 10
            },
            "end": {
              "line": 67,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour",
          "type": "number | null | undefined",
          "description": "The hour of the selected time",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 72,
              "column": 10
            },
            "end": {
              "line": 75,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour12",
          "type": "number",
          "description": "hour in 12-hour-format",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 81,
              "column": 10
            },
            "end": {
              "line": 85,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_hour12Changed\"",
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "isAm",
          "type": "boolean",
          "description": "true, when A.M. (when `hour` < 12)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 91,
              "column": 10
            },
            "end": {
              "line": 95,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_isAmChanged\"",
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "minute",
          "type": "number | null | undefined",
          "description": "The minute of the selected time",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 100,
              "column": 10
            },
            "end": {
              "line": 103,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "second",
          "type": "number | null | undefined",
          "description": "The second of the selected time",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 108,
              "column": 10
            },
            "end": {
              "line": 111,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "millisecond",
          "type": "number | null | undefined",
          "description": "The millisecond of the selected time",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 116,
              "column": 10
            },
            "end": {
              "line": 119,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "datetime",
          "type": "string | null | undefined",
          "description": "the selected date and time (format: iso8601)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 124,
              "column": 10
            },
            "end": {
              "line": 127,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "date",
          "type": "string | null | undefined",
          "description": "the selected date (format: iso8601)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 132,
              "column": 10
            },
            "end": {
              "line": 135,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "time",
          "type": "string | null | undefined",
          "description": "the selected time (format: iso8601)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 140,
              "column": 10
            },
            "end": {
              "line": 143,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "valueAsDate",
          "type": "Date | null | undefined",
          "description": "The date-object of the selected date",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 148,
              "column": 10
            },
            "end": {
              "line": 152,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_valueAsDateChanged\"",
              "attributeType": "Date"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "valueAsNumber",
          "type": "number | null | undefined",
          "description": "The value of the selected date",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 157,
              "column": 10
            },
            "end": {
              "line": 161,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_valueAsNumberChanged\"",
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_defaultValue",
          "type": "number | null | undefined",
          "description": "value of the default date",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 173,
              "column": 10
            },
            "end": {
              "line": 176,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "min",
          "type": "Object | null | undefined",
          "description": "The minimal date, could be a number, a date-object or an iso-string in time, date or datetime-notation",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 181,
              "column": 10
            },
            "end": {
              "line": 185,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_minChanged\"",
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_minValue",
          "type": "number | null | undefined",
          "description": "value if the minimum date",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 190,
              "column": 10
            },
            "end": {
              "line": 192,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "max",
          "type": "Object | null | undefined",
          "description": "The maximal date, could be a number, a date-object or an iso-string in time, date or datetime-notation",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 197,
              "column": 10
            },
            "end": {
              "line": 201,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_maxChanged\"",
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_maxValue",
          "type": "number | null | undefined",
          "description": "value if the maximum date",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 206,
              "column": 10
            },
            "end": {
              "line": 208,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour12Format",
          "type": "boolean",
          "description": "when true, 12-hour time format, else 24-hour",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 214,
              "column": 10
            },
            "end": {
              "line": 218,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "clamp",
          "type": "string | null | undefined",
          "description": "Clamp datetime to a property\npossible values:'month', 'day', 'hour', 'minute', 'second', 'millisecond'",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 224,
              "column": 10
            },
            "end": {
              "line": 228,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_clampChanged\"",
              "attributeType": "String"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "timezone",
          "type": "string | null | undefined",
          "description": "The timezone offset in '±hh:mm' format",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 233,
              "column": 10
            },
            "end": {
              "line": 237,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_timezoneChanged\"",
              "attributeType": "String"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "offsetMinutes",
          "type": "number | null | undefined",
          "description": "The offset minutes of the set timezone",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 242,
              "column": 10
            },
            "end": {
              "line": 246,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_offsetMinutesChanged\"",
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_timeZoneHours",
          "type": "number | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 248,
              "column": 10
            },
            "end": {
              "line": 250,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_timeZoneMinutes",
          "type": "number | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 252,
              "column": 10
            },
            "end": {
              "line": 254,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_recentLocalTimezoneOffset",
          "type": "number | null | undefined",
          "description": "The offset minute of the current datetime",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 259,
              "column": 10
            },
            "end": {
              "line": 261,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_timeOnly",
          "type": "boolean | null | undefined",
          "description": "if true perspective starts at 0 (1970-01-01)",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 266,
              "column": 10
            },
            "end": {
              "line": 269,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_maxDayOfMonth",
          "type": "number",
          "description": "exclusive max day of month",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 275,
              "column": 10
            },
            "end": {
              "line": 278,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_dateLocked",
          "type": "boolean | null | undefined",
          "description": "lock to date and ignore time",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 283,
              "column": 10
            },
            "end": {
              "line": 286,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "step",
          "type": "number | null | undefined",
          "description": "If set the step defines the step a date should be incremented (in seconds). The input for the most inferior standing that would create an integer step is used to increment the value.\nFor example, if the **step** is:\n + **0.05**: the millisecond-input will increment the value by 50 (50 milliseconds), the other inputs behaive as expected\n + **1.05**: the millisecond-input will increment the value by 1050 (1 second and 50 millisecond), the other inputs behaive as expected\n + **2**: the millisecond-input will be disabled, the second-input will increment the value by 2000 (2 seconds), the other inputs behaive as expected\n + **180**: the millisecond-input and the second-input will be disabled, the minute-input will increment the value by 180000 (3 minutes), the other inputs behaive as expected\nIf `step=\"0\"` all inputs will be disabled, else if the step is below _0.001_ the step will be set to **0.001**. The most supirior input that will become the given step is the day-input.",
          "privacy": "public",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 33,
              "column": 10
            },
            "end": {
              "line": 36,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeFormMixin"
        },
        {
          "name": "_partsDisabled",
          "type": "Object | null | undefined",
          "description": "date-parts that are disabled",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 41,
              "column": 10
            },
            "end": {
              "line": 47,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Object"
            }
          },
          "defaultValue": "{}",
          "inheritedFrom": "DatetimeFormMixin"
        },
        {
          "name": "_partsStep",
          "type": "Object | null | undefined",
          "description": "the computed steps for the date-parts",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 52,
              "column": 10
            },
            "end": {
              "line": 65,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "Object"
            }
          },
          "defaultValue": "{\"day\":1,\"hour\":1,\"minute\":1,\"second\":1,\"millisecond\":1}",
          "inheritedFrom": "DatetimeFormMixin"
        },
        {
          "name": "hideResetButton",
          "type": "boolean | null | undefined",
          "description": "if true, the reset button is hidden",
          "privacy": "public",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 298,
              "column": 10
            },
            "end": {
              "line": 301,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "DatetimeInputMixin"
        },
        {
          "name": "withTimezone",
          "type": "boolean | null | undefined",
          "description": "if true, timezone inputs are shown",
          "privacy": "public",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 306,
              "column": 10
            },
            "end": {
              "line": 309,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "DatetimeInputMixin"
        },
        {
          "name": "_resetButtonIsInvisible",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 311,
              "column": 10
            },
            "end": {
              "line": 314,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "DatetimeInputMixin"
        },
        {
          "name": "dwellTime",
          "type": "number",
          "description": "dwell time of incrementing inputs by the buttons in milliseconds. It is minimal 15 milliseconds.",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 33,
              "column": 10
            },
            "end": {
              "line": 37,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_dwellTimeChanged\"",
              "attributeType": "Number"
            }
          },
          "defaultValue": "50",
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "dwellDelay",
          "type": "number",
          "description": "delay when incrementing inputs by the buttons in milliseconds. It is minimal 15 milliseconds.",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 43,
              "column": 10
            },
            "end": {
              "line": 47,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_dwellTimeChanged\"",
              "attributeType": "Number"
            }
          },
          "defaultValue": "500",
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "_switchClassSelector",
          "type": "string | null | undefined",
          "description": "class property of switches",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 52,
              "column": 10
            },
            "end": {
              "line": 55,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"switch\"",
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "native",
          "type": "boolean | null | undefined",
          "description": "Set to `true` to use the native input, if it available",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 173,
              "column": 10
            },
            "end": {
              "line": 176,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "nativeOnMobile",
          "type": "boolean | null | undefined",
          "description": "Set to `true` to use the native input automatically on mobile devices, if it available",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 181,
              "column": 10
            },
            "end": {
              "line": 184,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_nativeOnMobileChanged\"",
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "mobileUserAgentTestString",
          "type": "string | null | undefined",
          "description": "When `nativeOnMobile` is set to `true` this string is used to test the userAgent for a mobile device",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 189,
              "column": 10
            },
            "end": {
              "line": 193,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_nativeOnMobileChanged\"",
              "attributeType": "String"
            }
          },
          "defaultValue": "\"mM]obi|[tT]ablet|[aA]ndroid\"",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "opened",
          "type": "boolean | null | undefined",
          "description": "if `true` the picker is opened",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 198,
              "column": 10
            },
            "end": {
              "line": 203,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "horizontalAlign",
          "type": "string | null | undefined",
          "description": "The orientation against which to align the element horizontally\nrelative to the related input element. Possible values are \"left\", \"right\", \"center\", \"auto\". (comparable to `iron-fit-behavior` and its `no-overlap`-attribute)",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 209,
              "column": 10
            },
            "end": {
              "line": 213,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"auto\"",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "verticalAlign",
          "type": "string | null | undefined",
          "description": "The orientation against which to align the element vertically\nrelative to the related input element. Possible values are \"top\", \"bottom\", \"middle\", \"auto\". (comparable to `iron-fit-behavior` and its `no-overlap`-attribute)",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 219,
              "column": 10
            },
            "end": {
              "line": 223,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"auto\"",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "autoConfirm",
          "type": "boolean | null | undefined",
          "description": "Set to `true` to make the input auto-confirming",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 228,
              "column": 10
            },
            "end": {
              "line": 231,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_autoConfirmChanged\"",
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "noCancelOnEscKey",
          "type": "boolean | null | undefined",
          "description": "Set to `true` to disable canceling the overlay with the ESC key.",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 236,
              "column": 10
            },
            "end": {
              "line": 239,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "noCancelOnOutsideClick",
          "type": "boolean | null | undefined",
          "description": "Set to `true` to disable canceling the dropdown by clicking outside the picker.",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 244,
              "column": 10
            },
            "end": {
              "line": 247,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "noTip",
          "type": "boolean | null | undefined",
          "description": "Set to `true` to disable the tip of the picker",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 252,
              "column": 10
            },
            "end": {
              "line": 255,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "confirmedValue",
          "type": "Object | null | undefined",
          "description": "The confirmed value. When `auto-confirm` is not set, the value will only change, when you confirm.",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 260,
              "column": 10
            },
            "end": {
              "line": 263,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "confirmedDatetime",
          "type": "string | null | undefined",
          "description": "The confirmed datetime. When `auto-confirm` is not set, the datetime will only change, when you confirm.",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 154,
              "column": 10
            },
            "end": {
              "line": 157,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "hideNowButton",
          "type": "boolean | null | undefined",
          "description": "Set to `true` to hide the `now`-button",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 162,
              "column": 10
            },
            "end": {
              "line": 164,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_hasNative",
          "type": "?",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 119,
              "column": 6
            },
            "end": {
              "line": 121,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_attachDom",
          "description": "attach dom with `delegatesFocus: true` so that the element is also focussed while its's children are too, and to autofocus to first tabable",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 103,
              "column": 6
            },
            "end": {
              "line": 112,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom"
            }
          ],
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 283,
              "column": 6
            },
            "end": {
              "line": 287,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "validate",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 384,
              "column": 6
            },
            "end": {
              "line": 391,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_computeInvalid",
          "description": "defines whether the value is set",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 130,
              "column": 6
            },
            "end": {
              "line": 132,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "[Object]"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_validate",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 141,
              "column": 6
            },
            "end": {
              "line": 143,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "Object",
              "description": "value to validate"
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "true, if the value is valid"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_computeValueIsSet",
          "description": "defines whether the value is set",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 149,
              "column": 6
            },
            "end": {
              "line": 151,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "[Object]"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_isSet",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 159,
              "column": 6
            },
            "end": {
              "line": 161,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "Object",
              "description": "value to test"
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "true, if the value is set"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_valueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 474,
              "column": 6
            },
            "end": {
              "line": 483,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_defaultChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 516,
              "column": 6
            },
            "end": {
              "line": 521,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "def"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_createReflectPropertyToValueObserver",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 180,
              "column": 6
            },
            "end": {
              "line": 190,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "prop"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_reflectPropertyToValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 192,
              "column": 6
            },
            "end": {
              "line": 194,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_reflectValueToProperty",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 196,
              "column": 6
            },
            "end": {
              "line": 198,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_localeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 96,
              "column": 6
            },
            "end": {
              "line": 283,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "locale"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "_shouldPropertyChange",
          "description": "overwritten of polymer to handle -0",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 34,
              "column": 6
            },
            "end": {
              "line": 40,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property"
            },
            {
              "name": "value"
            },
            {
              "name": "old"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "now",
          "description": "Sets value to the actual date",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 304,
              "column": 6
            },
            "end": {
              "line": 320,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "setDate",
          "description": "sets date to all necessary properties",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 326,
              "column": 6
            },
            "end": {
              "line": 390,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date",
              "description": "[the date to set]"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "resetDate",
          "description": "resets the date (if `default` is set, it will be used for the new value)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 396,
              "column": 6
            },
            "end": {
              "line": 433,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "Event",
              "description": "[a causing event will not propagated]"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_defaultValueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 435,
              "column": 6
            },
            "end": {
              "line": 442,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "def"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computeDefaultValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 444,
              "column": 6
            },
            "end": {
              "line": 446,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "def"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computeDatetime",
          "description": "modify date components of a date-object. it needs to be applied or called on a date object",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 460,
              "column": 6
            },
            "end": {
              "line": 537,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "year",
              "type": "number"
            },
            {
              "name": "month",
              "type": "number"
            },
            {
              "name": "day",
              "type": "number"
            },
            {
              "name": "hour",
              "type": "number"
            },
            {
              "name": "minute",
              "type": "number"
            },
            {
              "name": "second",
              "type": "number"
            },
            {
              "name": "millisecond",
              "type": "number"
            }
          ],
          "return": {
            "type": "object",
            "desc": "the changed object and the new offset-minutes"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_dateTimeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 539,
              "column": 6
            },
            "end": {
              "line": 566,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "date"
            },
            {
              "name": "time"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_datetimeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 568,
              "column": 6
            },
            "end": {
              "line": 611,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "datetime"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_valueAsNumberChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 613,
              "column": 6
            },
            "end": {
              "line": 620,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_valueAsDateChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 622,
              "column": 6
            },
            "end": {
              "line": 633,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_fromDatetime",
          "description": "compute a date object",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 640,
              "column": 6
            },
            "end": {
              "line": 667,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "datetime"
            }
          ],
          "return": {
            "type": "Date",
            "desc": "date"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_clampChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 669,
              "column": 6
            },
            "end": {
              "line": 677,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "clamp"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_minChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 679,
              "column": 6
            },
            "end": {
              "line": 696,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "min"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_maxChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 698,
              "column": 6
            },
            "end": {
              "line": 715,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "max"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_minMaxValueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 717,
              "column": 6
            },
            "end": {
              "line": 721,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_checkThreshold",
          "description": "test date object against thresholds",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 728,
              "column": 6
            },
            "end": {
              "line": 739,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date"
            }
          ],
          "return": {
            "type": "Date",
            "desc": "ether the threshold when the date is exceeding or the date object itself"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_toDate",
          "description": "get date string from a date object",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 746,
              "column": 6
            },
            "end": {
              "line": 752,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date",
              "description": "the Date to serialize"
            }
          ],
          "return": {
            "type": "String",
            "desc": "date string"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_toTime",
          "description": "get UTC time string from a date object",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 759,
              "column": 6
            },
            "end": {
              "line": 764,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date",
              "description": "the Date to serialize"
            }
          ],
          "return": {
            "type": "String",
            "desc": "date string"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_toUTCDate",
          "description": "get UTC date string from a date object",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 771,
              "column": 6
            },
            "end": {
              "line": 777,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date",
              "description": "the Date to serialize"
            }
          ],
          "return": {
            "type": "String",
            "desc": "date string"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_toUTCTime",
          "description": "get UTC time string from a date object",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 784,
              "column": 6
            },
            "end": {
              "line": 789,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date",
              "description": "the Date to serialize"
            }
          ],
          "return": {
            "type": "String",
            "desc": "time string"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "__toDate",
          "description": "get date string from date components",
          "privacy": "private",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 798,
              "column": 6
            },
            "end": {
              "line": 800,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "year",
              "type": "Number"
            },
            {
              "name": "month",
              "type": "Number"
            },
            {
              "name": "day",
              "type": "Number"
            }
          ],
          "return": {
            "type": "String",
            "desc": "date string"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "__toTime",
          "description": "get time string from date components",
          "privacy": "private",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 810,
              "column": 6
            },
            "end": {
              "line": 812,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hour",
              "type": "Number"
            },
            {
              "name": "minute",
              "type": "Number"
            },
            {
              "name": "second",
              "type": "Number"
            },
            {
              "name": "millisecond",
              "type": "Number"
            }
          ],
          "return": {
            "type": "String",
            "desc": "time string"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_clampUTC",
          "description": "clamp UTC values",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 820,
              "column": 6
            },
            "end": {
              "line": 837,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date",
              "description": "the Date to clamp"
            },
            {
              "name": "clamp",
              "type": "String",
              "description": "the date component to clamp"
            }
          ],
          "return": {
            "type": "Date",
            "desc": "the clamped date"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_pad",
          "description": "pad a string with 0",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 845,
              "column": 6
            },
            "end": {
              "line": 851,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "n",
              "type": "Number",
              "description": "number to pad"
            },
            {
              "name": "padLength",
              "type": "Number",
              "description": "total length of strings"
            }
          ],
          "return": {
            "type": "String",
            "desc": "padded string"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_hour12Changed",
          "description": "`hour12` is the hour in hour12-format, that starts is minimal 1 and maximal 12, midnight is at 12am and noon is 12pm",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 856,
              "column": 6
            },
            "end": {
              "line": 860,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hour12"
            },
            {
              "name": "old"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_isAmChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 862,
              "column": 6
            },
            "end": {
              "line": 866,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "isAm"
            },
            {
              "name": "old"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_ifClamped",
          "description": "clamp to date component",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 871,
              "column": 6
            },
            "end": {
              "line": 876,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "clamp"
            },
            {
              "name": "comp"
            },
            {
              "name": "hidden"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_checkDefaultTimezone",
          "description": "set the default timezone if needed",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 882,
              "column": 6
            },
            "end": {
              "line": 895,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computeTimezoneShift",
          "description": "correct a timezone shift when date changes from winter to summertime (locally)",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 901,
              "column": 6
            },
            "end": {
              "line": 910,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_timezoneChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 912,
              "column": 6
            },
            "end": {
              "line": 932,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "timezone"
            },
            {
              "name": "oldValue"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_offsetMinutesChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 934,
              "column": 6
            },
            "end": {
              "line": 942,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "offsetMinutes"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_timeZoneHoursMinutesChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 944,
              "column": 6
            },
            "end": {
              "line": 963,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hour"
            },
            {
              "name": "minute"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computeTimezone",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 965,
              "column": 6
            },
            "end": {
              "line": 987,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "offsetMinutes"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computeTimezoneOffset",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 989,
              "column": 6
            },
            "end": {
              "line": 1019,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "timezone"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computeMaxDayOfMonth",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 1021,
              "column": 6
            },
            "end": {
              "line": 1029,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "year"
            },
            {
              "name": "month"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computePartsStep",
          "description": "compute the steps for the related inputs. The day-input is the highest modified input allthough if the step is higher than a day in seconds it might also change month- or year-inputs.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 104,
              "column": 6
            },
            "end": {
              "line": 185,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "step"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeFormMixin"
        },
        {
          "name": "_computePartsDisabled",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 187,
              "column": 6
            },
            "end": {
              "line": 205,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "change"
            },
            {
              "name": "disabled"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeFormMixin"
        },
        {
          "name": "_computeOr",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 318,
              "column": 6
            },
            "end": {
              "line": 320,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "a"
            },
            {
              "name": "b"
            }
          ],
          "inheritedFrom": "DatetimeInputMixin"
        },
        {
          "name": "_computePartOrder",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 322,
              "column": 6
            },
            "end": {
              "line": 324,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "first"
            }
          ],
          "inheritedFrom": "DatetimeInputMixin"
        },
        {
          "name": "_computeResetButtonIsInvisible",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 326,
              "column": 6
            },
            "end": {
              "line": 328,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "valueIsSet"
            },
            {
              "name": "defaultValue"
            },
            {
              "name": "valueAsNumber"
            }
          ],
          "inheritedFrom": "DatetimeInputMixin"
        },
        {
          "name": "_switchAm",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "time-element.html",
            "start": {
              "line": 187,
              "column": 6
            },
            "end": {
              "line": 190,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "TimeElementPattern"
        },
        {
          "name": "_computeMultipleClamp",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "time-element.html",
            "start": {
              "line": 183,
              "column": 6
            },
            "end": {
              "line": 185,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "clamp"
            },
            {
              "name": "prop1"
            },
            {
              "name": "prop2"
            }
          ],
          "inheritedFrom": "TimeElementPattern"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 289,
              "column": 6
            },
            "end": {
              "line": 293,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_addSwitchListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 89,
              "column": 6
            },
            "end": {
              "line": 104,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "_removeSwitchListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 106,
              "column": 6
            },
            "end": {
              "line": 116,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "_checkKeycodeSwitch",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 118,
              "column": 6
            },
            "end": {
              "line": 126,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "__getEventTarget",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 128,
              "column": 6
            },
            "end": {
              "line": 142,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            },
            {
              "name": "classSelector"
            }
          ],
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "__increm",
          "description": "increment property by being called by an Event on an `switch`-Node",
          "privacy": "private",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 149,
              "column": 6
            },
            "end": {
              "line": 176,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "Event",
              "description": "Event it was called on"
            },
            {
              "name": "once",
              "type": "Boolean",
              "description": "if true, it doesn't setup an intervall to continue incrementing (e.g. keyPressEvents are fired itself repeatedly while the key is pressed)"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "__incremProp",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 178,
              "column": 6
            },
            "end": {
              "line": 180,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "prop"
            },
            {
              "name": "step"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "_getDefaultForProp",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 182,
              "column": 6
            },
            "end": {
              "line": 184,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "prop"
            }
          ],
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "_stopActiveIncremJob",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 186,
              "column": 6
            },
            "end": {
              "line": 199,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "_dwellTimeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 201,
              "column": 6
            },
            "end": {
              "line": 207,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dwellTime"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "_dwellDelayChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 209,
              "column": 6
            },
            "end": {
              "line": 215,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dwellDelay"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "_addEventListenerToNode",
          "description": "Add the event listener to the node if it is a gestures event.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../polymer/lib/mixins/gesture-event-listeners.html",
            "start": {
              "line": 55,
              "column": 6
            },
            "end": {
              "line": 59,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node",
              "type": "!Node",
              "description": "Node to add event listener to"
            },
            {
              "name": "eventName",
              "type": "string",
              "description": "Name of event"
            },
            {
              "name": "handler",
              "type": "function (!Event): void",
              "description": "Listener function to add"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.GestureEventListeners"
        },
        {
          "name": "_removeEventListenerFromNode",
          "description": "Remove the event listener to the node if it is a gestures event.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../polymer/lib/mixins/gesture-event-listeners.html",
            "start": {
              "line": 69,
              "column": 6
            },
            "end": {
              "line": 73,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node",
              "type": "!Node",
              "description": "Node to remove event listener from"
            },
            {
              "name": "eventName",
              "type": "string",
              "description": "Name of event"
            },
            {
              "name": "handler",
              "type": "function (!Event): void",
              "description": "Listener function to remove"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.GestureEventListeners"
        },
        {
          "name": "_addPickerTransitionEndListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 295,
              "column": 6
            },
            "end": {
              "line": 302,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_removePickerTransitionEndListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 304,
              "column": 6
            },
            "end": {
              "line": 306,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_onPickerTransitionEnd",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 308,
              "column": 6
            },
            "end": {
              "line": 313,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_addCancelOnClickListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 315,
              "column": 6
            },
            "end": {
              "line": 322,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_removeCancelOnClickListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 324,
              "column": 6
            },
            "end": {
              "line": 327,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_stopPropagation",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 329,
              "column": 6
            },
            "end": {
              "line": 332,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_addKeyListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 334,
              "column": 6
            },
            "end": {
              "line": 337,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_removeKeyListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 339,
              "column": 6
            },
            "end": {
              "line": 342,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_nativeOnMobileChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 344,
              "column": 6
            },
            "end": {
              "line": 357,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_checkKeycode",
          "description": "key press event handler",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 363,
              "column": 6
            },
            "end": {
              "line": 382,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "[type]",
              "description": "Event"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "open",
          "description": "open the picker",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 396,
              "column": 6
            },
            "end": {
              "line": 409,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "close",
          "description": "close the picker",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 415,
              "column": 6
            },
            "end": {
              "line": 423,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "[type]",
              "description": "Event"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "toggle",
          "description": "toggle the picker",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 429,
              "column": 6
            },
            "end": {
              "line": 437,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "[type]",
              "description": "Event"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "confirm",
          "description": "confirms the input",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 443,
              "column": 6
            },
            "end": {
              "line": 452,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "[type]",
              "description": "Event"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "cancel",
          "description": "cancels the input",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 458,
              "column": 6
            },
            "end": {
              "line": 472,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "[type]",
              "description": "Event"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_confirmedValueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 295,
              "column": 6
            },
            "end": {
              "line": 303,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "confirmedValue"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_reset",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 493,
              "column": 6
            },
            "end": {
              "line": 498,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_setConfirmedValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 305,
              "column": 6
            },
            "end": {
              "line": 312,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_resetValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 506,
              "column": 6
            },
            "end": {
              "line": 510,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_autoConfirmChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 512,
              "column": 6
            },
            "end": {
              "line": 514,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "autoConfirm"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_computeAnd",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 181,
              "column": 6
            },
            "end": {
              "line": 183,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "a"
            },
            {
              "name": "b"
            }
          ],
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_computeNativeStep",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 185,
              "column": 6
            },
            "end": {
              "line": 204,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "step"
            },
            {
              "name": "clamp"
            }
          ],
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_computeNativeValueAsNumber",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 206,
              "column": 6
            },
            "end": {
              "line": 227,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "native"
            },
            {
              "name": "valueAsNumber"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_reflectNativeValueAsNumber",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 229,
              "column": 6
            },
            "end": {
              "line": 253,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "native"
            },
            {
              "name": "nativeValueAsNumber"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_setDate",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 255,
              "column": 6
            },
            "end": {
              "line": 262,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_confirmedDatetimeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 264,
              "column": 6
            },
            "end": {
              "line": 276,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "confirmedDatetime"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_resetDate",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 314,
              "column": 6
            },
            "end": {
              "line": 317,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_resetConfirmedValues",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 319,
              "column": 6
            },
            "end": {
              "line": 327,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_resetValues",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 329,
              "column": 6
            },
            "end": {
              "line": 336,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_confirmedDateTimeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 39,
              "column": 6
            },
            "end": {
              "line": 54,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "confirmedDate"
            },
            {
              "name": "confirmedTime"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "TimePickerPattern"
        },
        {
          "name": "_setConfirmedValues",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 56,
              "column": 6
            },
            "end": {
              "line": 76,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "TimePickerPattern"
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        },
        {
          "url": "demo/time-elements.html",
          "description": "time elements"
        },
        {
          "url": "demo/form.html",
          "description": "in a form"
        },
        {
          "url": "demo/music-album.html",
          "description": "music album demo"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 109,
          "column": 4
        },
        "end": {
          "line": 123,
          "column": 5
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "TimePicker",
      "attributes": [
        {
          "name": "name",
          "description": "name of the input",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 16,
              "column": 10
            },
            "end": {
              "line": 18,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "title",
          "description": "description for the element and can be used as a hint for invalid values",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 23,
              "column": 10
            },
            "end": {
              "line": 26,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "disabled",
          "description": "disables the input",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 31,
              "column": 10
            },
            "end": {
              "line": 35,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "required",
          "description": "required attribute",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 40,
              "column": 10
            },
            "end": {
              "line": 44,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "property-for-value",
          "description": "defines the property that should be used for the value",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 49,
              "column": 10
            },
            "end": {
              "line": 52,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "invalid",
          "description": "required attribute",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 57,
              "column": 10
            },
            "end": {
              "line": 63,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "default",
          "description": "default value of the value, when it does not validate",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 77,
              "column": 10
            },
            "end": {
              "line": 80,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "value",
          "description": "value of the input",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 85,
              "column": 10
            },
            "end": {
              "line": 88,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "locale",
          "description": "The current locale",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 19,
              "column": 10
            },
            "end": {
              "line": 23,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "decimal-separator",
          "description": "locale separator for local decimal values",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 29,
              "column": 10
            },
            "end": {
              "line": 33,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "date-separator",
          "description": "Separator for local date values (date-string is still in ISO-Format)",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 39,
              "column": 10
            },
            "end": {
              "line": 43,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "time-separator",
          "description": "Separator for local time values (time-string is still in ISO-Format)",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 49,
              "column": 10
            },
            "end": {
              "line": 53,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "am-string",
          "description": "locale representation of 'AM'",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 58,
              "column": 10
            },
            "end": {
              "line": 62,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "pm-string",
          "description": "locale representation of 'PM'",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 67,
              "column": 10
            },
            "end": {
              "line": 71,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "date-order",
          "description": "order of date-parts",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 76,
              "column": 10
            },
            "end": {
              "line": 86,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "year",
          "description": "The year of the selected date",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 48,
              "column": 10
            },
            "end": {
              "line": 51,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "month",
          "description": "The month of the selected date (starts with 1)",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 56,
              "column": 10
            },
            "end": {
              "line": 59,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "day",
          "description": "The day of the selected date",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 64,
              "column": 10
            },
            "end": {
              "line": 67,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour",
          "description": "The hour of the selected time",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 72,
              "column": 10
            },
            "end": {
              "line": 75,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour12",
          "description": "hour in 12-hour-format",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 81,
              "column": 10
            },
            "end": {
              "line": 85,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "is-am",
          "description": "true, when A.M. (when `hour` < 12)",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 91,
              "column": 10
            },
            "end": {
              "line": 95,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "minute",
          "description": "The minute of the selected time",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 100,
              "column": 10
            },
            "end": {
              "line": 103,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "second",
          "description": "The second of the selected time",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 108,
              "column": 10
            },
            "end": {
              "line": 111,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "millisecond",
          "description": "The millisecond of the selected time",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 116,
              "column": 10
            },
            "end": {
              "line": 119,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "datetime",
          "description": "the selected date and time (format: iso8601)",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 124,
              "column": 10
            },
            "end": {
              "line": 127,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "date",
          "description": "the selected date (format: iso8601)",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 132,
              "column": 10
            },
            "end": {
              "line": 135,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "time",
          "description": "the selected time (format: iso8601)",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 140,
              "column": 10
            },
            "end": {
              "line": 143,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "value-as-date",
          "description": "The date-object of the selected date",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 148,
              "column": 10
            },
            "end": {
              "line": 152,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Date | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "value-as-number",
          "description": "The value of the selected date",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 157,
              "column": 10
            },
            "end": {
              "line": 161,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "min",
          "description": "The minimal date, could be a number, a date-object or an iso-string in time, date or datetime-notation",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 181,
              "column": 10
            },
            "end": {
              "line": 185,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "max",
          "description": "The maximal date, could be a number, a date-object or an iso-string in time, date or datetime-notation",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 197,
              "column": 10
            },
            "end": {
              "line": 201,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour12-format",
          "description": "when true, 12-hour time format, else 24-hour",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 214,
              "column": 10
            },
            "end": {
              "line": 218,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "clamp",
          "description": "Clamp datetime to a property\npossible values:'month', 'day', 'hour', 'minute', 'second', 'millisecond'",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 224,
              "column": 10
            },
            "end": {
              "line": 228,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "timezone",
          "description": "The timezone offset in '±hh:mm' format",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 233,
              "column": 10
            },
            "end": {
              "line": 237,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "offset-minutes",
          "description": "The offset minutes of the set timezone",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 242,
              "column": 10
            },
            "end": {
              "line": 246,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "step",
          "description": "If set the step defines the step a date should be incremented (in seconds). The input for the most inferior standing that would create an integer step is used to increment the value.\nFor example, if the **step** is:\n + **0.05**: the millisecond-input will increment the value by 50 (50 milliseconds), the other inputs behaive as expected\n + **1.05**: the millisecond-input will increment the value by 1050 (1 second and 50 millisecond), the other inputs behaive as expected\n + **2**: the millisecond-input will be disabled, the second-input will increment the value by 2000 (2 seconds), the other inputs behaive as expected\n + **180**: the millisecond-input and the second-input will be disabled, the minute-input will increment the value by 180000 (3 minutes), the other inputs behaive as expected\nIf `step=\"0\"` all inputs will be disabled, else if the step is below _0.001_ the step will be set to **0.001**. The most supirior input that will become the given step is the day-input.",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 33,
              "column": 10
            },
            "end": {
              "line": 36,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeFormMixin"
        },
        {
          "name": "hide-reset-button",
          "description": "if true, the reset button is hidden",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 298,
              "column": 10
            },
            "end": {
              "line": 301,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "DatetimeInputMixin"
        },
        {
          "name": "with-timezone",
          "description": "if true, timezone inputs are shown",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 306,
              "column": 10
            },
            "end": {
              "line": 309,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "DatetimeInputMixin"
        },
        {
          "name": "dwell-time",
          "description": "dwell time of incrementing inputs by the buttons in milliseconds. It is minimal 15 milliseconds.",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 33,
              "column": 10
            },
            "end": {
              "line": 37,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "dwell-delay",
          "description": "delay when incrementing inputs by the buttons in milliseconds. It is minimal 15 milliseconds.",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 43,
              "column": 10
            },
            "end": {
              "line": 47,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "native",
          "description": "Set to `true` to use the native input, if it available",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 173,
              "column": 10
            },
            "end": {
              "line": 176,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "native-on-mobile",
          "description": "Set to `true` to use the native input automatically on mobile devices, if it available",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 181,
              "column": 10
            },
            "end": {
              "line": 184,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "mobile-user-agent-test-string",
          "description": "When `nativeOnMobile` is set to `true` this string is used to test the userAgent for a mobile device",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 189,
              "column": 10
            },
            "end": {
              "line": 193,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "opened",
          "description": "if `true` the picker is opened",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 198,
              "column": 10
            },
            "end": {
              "line": 203,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "horizontal-align",
          "description": "The orientation against which to align the element horizontally\nrelative to the related input element. Possible values are \"left\", \"right\", \"center\", \"auto\". (comparable to `iron-fit-behavior` and its `no-overlap`-attribute)",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 209,
              "column": 10
            },
            "end": {
              "line": 213,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "vertical-align",
          "description": "The orientation against which to align the element vertically\nrelative to the related input element. Possible values are \"top\", \"bottom\", \"middle\", \"auto\". (comparable to `iron-fit-behavior` and its `no-overlap`-attribute)",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 219,
              "column": 10
            },
            "end": {
              "line": 223,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "auto-confirm",
          "description": "Set to `true` to make the input auto-confirming",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 228,
              "column": 10
            },
            "end": {
              "line": 231,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "no-cancel-on-esc-key",
          "description": "Set to `true` to disable canceling the overlay with the ESC key.",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 236,
              "column": 10
            },
            "end": {
              "line": 239,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "no-cancel-on-outside-click",
          "description": "Set to `true` to disable canceling the dropdown by clicking outside the picker.",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 244,
              "column": 10
            },
            "end": {
              "line": 247,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "no-tip",
          "description": "Set to `true` to disable the tip of the picker",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 252,
              "column": 10
            },
            "end": {
              "line": 255,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "confirmed-value",
          "description": "The confirmed value. When `auto-confirm` is not set, the value will only change, when you confirm.",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 260,
              "column": 10
            },
            "end": {
              "line": 263,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "confirmed-datetime",
          "description": "The confirmed datetime. When `auto-confirm` is not set, the datetime will only change, when you confirm.",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 154,
              "column": 10
            },
            "end": {
              "line": 157,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "hide-now-button",
          "description": "Set to `true` to hide the `now`-button",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 162,
              "column": 10
            },
            "end": {
              "line": 164,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "DatetimePickerMixin"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "input-picker-closed",
          "description": "input-picker-closed\nFired after a picker has been closed.",
          "metadata": {},
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "type": "CustomEvent",
          "name": "input-picker-opened",
          "description": "input-picker-opened\nFired when a picker has been opened.",
          "metadata": {},
          "inheritedFrom": "InputPickerPattern"
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "time-picker",
      "mixins": [
        "TimePickerPattern"
      ]
    },
    {
      "description": "`<datetime-picker>` is a picker for date and time for **[Polymer](https://github.com/Polymer/polymer)** that can use the **native** input, too. If the **native** picker is choosen and is not supported, this element uses the **polyfill** datetime-picker. The `<calendar-element>` and the `<time-element>` will come in place if the native picker is not available or is not explicitly wanted. A range picker is provided by combining the `min`- and `max`-attributes.\n\n ```html\n   <datetime-picker value=\"{{value}}\"></datetime-picker>\n ```\n\n A use case could be for example, if you want on mobile devices use the `native picker` and on desktop devices this polyfill.\n\n ```html\n   <datetime-picker native-on-mobile></datetime-picker>\n ```\n\n If you need an **overlay** then use `overlay-datetime-picker`, that creates the element in an `overlay-element`, that extends *IronOverlayBehavior* and will create some of its attribute-bindings.\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--calendar-element`                   | Mixin applied to the calendar                  | {}\n`--calendar-cell`                      | Mixin applied to the date cells                | {}\n`--calendar-cell-hovered-background`   | background of the hovered date cells           | transparent\n`--calendar-cell-hovered-border-color` | border-color of the hovered date cells         | currentColor\n`--calendar-cell-size`                 | width of a date cell                           | 3em\n`--calendar-cell-border-radius`        | border-radius of a date cell                   | 0.3em\n`--calendar-cell-font-size`            | font-size of a date cell                       | 0.75em\n`--calendar-cell-notinmonth-opacity`   | text opacity of a date cell that are not in the current month | 0.6\n`--calendar-cell-weekend-opacity`      | text opacity of a date cell that are on weekend | 1\n`--time-element`                       | Mixin applied to the time-element               | {}\n\n Have a look at [input-picker-pattern#input-picker-shared-style](https://github.com/fooloomanzoo/input-picker-pattern#input-picker-shared-style) and [input-picker-pattern#input-shared-style](https://github.com/fooloomanzoo/input-picker-pattern#input-shared-style) to see how to style the element. `--inner-input-focus-background` and `--inner-input-focus-color` will style the selected date-cell and inputs.",
      "summary": "",
      "path": "datetime-picker.html",
      "properties": [
        {
          "name": "name",
          "type": "string | null | undefined",
          "description": "name of the input",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 16,
              "column": 10
            },
            "end": {
              "line": 18,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "title",
          "type": "string | null | undefined",
          "description": "description for the element and can be used as a hint for invalid values",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 23,
              "column": 10
            },
            "end": {
              "line": 26,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "disabled",
          "type": "boolean | null | undefined",
          "description": "disables the input",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 31,
              "column": 10
            },
            "end": {
              "line": 35,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "required",
          "type": "boolean | null | undefined",
          "description": "required attribute",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 40,
              "column": 10
            },
            "end": {
              "line": 44,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "propertyForValue",
          "type": "string | null | undefined",
          "description": "defines the property that should be used for the value",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 49,
              "column": 10
            },
            "end": {
              "line": 52,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_createReflectPropertyToValueObserver\"",
              "attributeType": "String"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "invalid",
          "type": "boolean | null | undefined",
          "description": "required attribute",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 57,
              "column": 10
            },
            "end": {
              "line": 63,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_valueIsSet",
          "type": "boolean | null | undefined",
          "description": "is true when the value is not undefined",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 68,
              "column": 10
            },
            "end": {
              "line": 72,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "default",
          "type": "Object | null | undefined",
          "description": "default value of the value, when it does not validate",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 77,
              "column": 10
            },
            "end": {
              "line": 80,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_defaultChanged\"",
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "value",
          "type": "Object | null | undefined",
          "description": "value of the input",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 85,
              "column": 10
            },
            "end": {
              "line": 88,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "locale",
          "type": "string | null | undefined",
          "description": "The current locale",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 19,
              "column": 10
            },
            "end": {
              "line": 23,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "decimalSeparator",
          "type": "string",
          "description": "locale separator for local decimal values",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 29,
              "column": 10
            },
            "end": {
              "line": 33,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "dateSeparator",
          "type": "string",
          "description": "Separator for local date values (date-string is still in ISO-Format)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 39,
              "column": 10
            },
            "end": {
              "line": 43,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "timeSeparator",
          "type": "string",
          "description": "Separator for local time values (time-string is still in ISO-Format)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 49,
              "column": 10
            },
            "end": {
              "line": 53,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "amString",
          "type": "string | null | undefined",
          "description": "locale representation of 'AM'",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 58,
              "column": 10
            },
            "end": {
              "line": 62,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "pmString",
          "type": "string | null | undefined",
          "description": "locale representation of 'PM'",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 67,
              "column": 10
            },
            "end": {
              "line": 71,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "dateOrder",
          "type": "Object | null | undefined",
          "description": "order of date-parts",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 76,
              "column": 10
            },
            "end": {
              "line": 86,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Object"
            }
          },
          "defaultValue": "{\"parts\":[],\"timeFirst\":false,\"dateFirst\":true}",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "year",
          "type": "number | null | undefined",
          "description": "The year of the selected date",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 48,
              "column": 10
            },
            "end": {
              "line": 51,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "month",
          "type": "number | null | undefined",
          "description": "The month of the selected date (starts with 1)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 56,
              "column": 10
            },
            "end": {
              "line": 59,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "day",
          "type": "number | null | undefined",
          "description": "The day of the selected date",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 64,
              "column": 10
            },
            "end": {
              "line": 67,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour",
          "type": "number | null | undefined",
          "description": "The hour of the selected time",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 72,
              "column": 10
            },
            "end": {
              "line": 75,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour12",
          "type": "number",
          "description": "hour in 12-hour-format",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 81,
              "column": 10
            },
            "end": {
              "line": 85,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_hour12Changed\"",
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "isAm",
          "type": "boolean",
          "description": "true, when A.M. (when `hour` < 12)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 91,
              "column": 10
            },
            "end": {
              "line": 95,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_isAmChanged\"",
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "minute",
          "type": "number | null | undefined",
          "description": "The minute of the selected time",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 100,
              "column": 10
            },
            "end": {
              "line": 103,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "second",
          "type": "number | null | undefined",
          "description": "The second of the selected time",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 108,
              "column": 10
            },
            "end": {
              "line": 111,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "millisecond",
          "type": "number | null | undefined",
          "description": "The millisecond of the selected time",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 116,
              "column": 10
            },
            "end": {
              "line": 119,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "datetime",
          "type": "string | null | undefined",
          "description": "the selected date and time (format: iso8601)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 124,
              "column": 10
            },
            "end": {
              "line": 127,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "date",
          "type": "string | null | undefined",
          "description": "the selected date (format: iso8601)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 132,
              "column": 10
            },
            "end": {
              "line": 135,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "time",
          "type": "string | null | undefined",
          "description": "the selected time (format: iso8601)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 140,
              "column": 10
            },
            "end": {
              "line": 143,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "valueAsDate",
          "type": "Date | null | undefined",
          "description": "The date-object of the selected date",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 148,
              "column": 10
            },
            "end": {
              "line": 152,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_valueAsDateChanged\"",
              "attributeType": "Date"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "valueAsNumber",
          "type": "number | null | undefined",
          "description": "The value of the selected date",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 157,
              "column": 10
            },
            "end": {
              "line": 161,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_valueAsNumberChanged\"",
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_defaultValue",
          "type": "number | null | undefined",
          "description": "value of the default date",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 173,
              "column": 10
            },
            "end": {
              "line": 176,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "min",
          "type": "Object | null | undefined",
          "description": "The minimal date, could be a number, a date-object or an iso-string in time, date or datetime-notation",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 181,
              "column": 10
            },
            "end": {
              "line": 185,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_minChanged\"",
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_minValue",
          "type": "number | null | undefined",
          "description": "value if the minimum date",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 190,
              "column": 10
            },
            "end": {
              "line": 192,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "max",
          "type": "Object | null | undefined",
          "description": "The maximal date, could be a number, a date-object or an iso-string in time, date or datetime-notation",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 197,
              "column": 10
            },
            "end": {
              "line": 201,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_maxChanged\"",
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_maxValue",
          "type": "number | null | undefined",
          "description": "value if the maximum date",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 206,
              "column": 10
            },
            "end": {
              "line": 208,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour12Format",
          "type": "boolean",
          "description": "when true, 12-hour time format, else 24-hour",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 214,
              "column": 10
            },
            "end": {
              "line": 218,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "clamp",
          "type": "string | null | undefined",
          "description": "Clamp datetime to a property\npossible values: 'month', 'day', 'hour', 'minute', 'second', 'millisecond' or ''",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 44,
              "column": 10
            },
            "end": {
              "line": 48,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "defaultValue": "\"millisecond\"",
          "inheritedFrom": "DatetimePickerPattern"
        },
        {
          "name": "timezone",
          "type": "string | null | undefined",
          "description": "The timezone offset in '±hh:mm' format",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 233,
              "column": 10
            },
            "end": {
              "line": 237,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_timezoneChanged\"",
              "attributeType": "String"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "offsetMinutes",
          "type": "number | null | undefined",
          "description": "The offset minutes of the set timezone",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 242,
              "column": 10
            },
            "end": {
              "line": 246,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_offsetMinutesChanged\"",
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_timeZoneHours",
          "type": "number | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 248,
              "column": 10
            },
            "end": {
              "line": 250,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_timeZoneMinutes",
          "type": "number | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 252,
              "column": 10
            },
            "end": {
              "line": 254,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_recentLocalTimezoneOffset",
          "type": "number | null | undefined",
          "description": "The offset minute of the current datetime",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 259,
              "column": 10
            },
            "end": {
              "line": 261,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_timeOnly",
          "type": "boolean | null | undefined",
          "description": "if true perspective starts at 0 (1970-01-01)",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 266,
              "column": 10
            },
            "end": {
              "line": 269,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_maxDayOfMonth",
          "type": "number",
          "description": "exclusive max day of month",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 275,
              "column": 10
            },
            "end": {
              "line": 278,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_dateLocked",
          "type": "boolean | null | undefined",
          "description": "lock to date and ignore time",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 283,
              "column": 10
            },
            "end": {
              "line": 286,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "step",
          "type": "number | null | undefined",
          "description": "If set the step defines the step a date should be incremented (in seconds). The input for the most inferior standing that would create an integer step is used to increment the value.\nFor example, if the **step** is:\n + **0.05**: the millisecond-input will increment the value by 50 (50 milliseconds), the other inputs behaive as expected\n + **1.05**: the millisecond-input will increment the value by 1050 (1 second and 50 millisecond), the other inputs behaive as expected\n + **2**: the millisecond-input will be disabled, the second-input will increment the value by 2000 (2 seconds), the other inputs behaive as expected\n + **180**: the millisecond-input and the second-input will be disabled, the minute-input will increment the value by 180000 (3 minutes), the other inputs behaive as expected\nIf `step=\"0\"` all inputs will be disabled, else if the step is below _0.001_ the step will be set to **0.001**. The most supirior input that will become the given step is the day-input.",
          "privacy": "public",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 33,
              "column": 10
            },
            "end": {
              "line": 36,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeFormMixin"
        },
        {
          "name": "_partsDisabled",
          "type": "Object | null | undefined",
          "description": "date-parts that are disabled",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 41,
              "column": 10
            },
            "end": {
              "line": 47,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Object"
            }
          },
          "defaultValue": "{}",
          "inheritedFrom": "DatetimeFormMixin"
        },
        {
          "name": "_partsStep",
          "type": "Object | null | undefined",
          "description": "the computed steps for the date-parts",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 52,
              "column": 10
            },
            "end": {
              "line": 65,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "Object"
            }
          },
          "defaultValue": "{\"day\":1,\"hour\":1,\"minute\":1,\"second\":1,\"millisecond\":1}",
          "inheritedFrom": "DatetimeFormMixin"
        },
        {
          "name": "hideResetButton",
          "type": "boolean | null | undefined",
          "description": "if true, the reset button is hidden",
          "privacy": "public",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 298,
              "column": 10
            },
            "end": {
              "line": 301,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "DatetimeInputMixin"
        },
        {
          "name": "withTimezone",
          "type": "boolean | null | undefined",
          "description": "if true, timezone inputs are shown",
          "privacy": "public",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 306,
              "column": 10
            },
            "end": {
              "line": 309,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "DatetimeInputMixin"
        },
        {
          "name": "_resetButtonIsInvisible",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 311,
              "column": 10
            },
            "end": {
              "line": 314,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "DatetimeInputMixin"
        },
        {
          "name": "dwellTime",
          "type": "number",
          "description": "dwell time of incrementing inputs by the buttons in milliseconds. It is minimal 15 milliseconds.",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 33,
              "column": 10
            },
            "end": {
              "line": 37,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_dwellTimeChanged\"",
              "attributeType": "Number"
            }
          },
          "defaultValue": "50",
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "dwellDelay",
          "type": "number",
          "description": "delay when incrementing inputs by the buttons in milliseconds. It is minimal 15 milliseconds.",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 43,
              "column": 10
            },
            "end": {
              "line": 47,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_dwellTimeChanged\"",
              "attributeType": "Number"
            }
          },
          "defaultValue": "500",
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "_switchClassSelector",
          "type": "string | null | undefined",
          "description": "class property of switches",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 52,
              "column": 10
            },
            "end": {
              "line": 55,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"switch\"",
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "currentHoveredDayNode",
          "type": "Node | null | undefined",
          "description": "Current hovered day node\nto access: bind the attribute ('current-hovered-day-node') and get its dataset `year`, `month` or `day`-property",
          "privacy": "public",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 262,
              "column": 10
            },
            "end": {
              "line": 266,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "Node"
            }
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "currentActiveDayNode",
          "type": "Node | null | undefined",
          "description": "Node of the last clicked day-field (by clicking or keypress)\nto access: bind the attribute ('current-active-day-node') and get its dataset `year`, `month` or `day`-property",
          "privacy": "public",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 272,
              "column": 10
            },
            "end": {
              "line": 276,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "Node"
            }
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "currentSelectedDayNode",
          "type": "Node | null | undefined",
          "description": "Node of the last selected day\nto access: bind the attribute ('current-selected-day-node') and get its dataset `year`, `month` or `day`-property",
          "privacy": "public",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 282,
              "column": 10
            },
            "end": {
              "line": 286,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "Node"
            }
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "firstDayOfWeek",
          "type": "number | null | undefined",
          "description": "Defines the first day of the week to use. Defaults to `1` (`monday`)\ne.g. when `firstDayOfWeek` is `0` the first day of the week would be `sunday`",
          "privacy": "public",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 300,
              "column": 10
            },
            "end": {
              "line": 303,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "1",
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "native",
          "type": "boolean | null | undefined",
          "description": "Set to `true` to use the native input, if it available",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 173,
              "column": 10
            },
            "end": {
              "line": 176,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "nativeOnMobile",
          "type": "boolean | null | undefined",
          "description": "Set to `true` to use the native input automatically on mobile devices, if it available",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 181,
              "column": 10
            },
            "end": {
              "line": 184,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_nativeOnMobileChanged\"",
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "mobileUserAgentTestString",
          "type": "string | null | undefined",
          "description": "When `nativeOnMobile` is set to `true` this string is used to test the userAgent for a mobile device",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 189,
              "column": 10
            },
            "end": {
              "line": 193,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_nativeOnMobileChanged\"",
              "attributeType": "String"
            }
          },
          "defaultValue": "\"mM]obi|[tT]ablet|[aA]ndroid\"",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "opened",
          "type": "boolean | null | undefined",
          "description": "if `true` the picker is opened",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 198,
              "column": 10
            },
            "end": {
              "line": 203,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "horizontalAlign",
          "type": "string | null | undefined",
          "description": "The orientation against which to align the element horizontally\nrelative to the related input element. Possible values are \"left\", \"right\", \"center\", \"auto\". (comparable to `iron-fit-behavior` and its `no-overlap`-attribute)",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 209,
              "column": 10
            },
            "end": {
              "line": 213,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"auto\"",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "verticalAlign",
          "type": "string | null | undefined",
          "description": "The orientation against which to align the element vertically\nrelative to the related input element. Possible values are \"top\", \"bottom\", \"middle\", \"auto\". (comparable to `iron-fit-behavior` and its `no-overlap`-attribute)",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 219,
              "column": 10
            },
            "end": {
              "line": 223,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"auto\"",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "autoConfirm",
          "type": "boolean | null | undefined",
          "description": "Set to `true` to make the input auto-confirming",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 228,
              "column": 10
            },
            "end": {
              "line": 231,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_autoConfirmChanged\"",
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "noCancelOnEscKey",
          "type": "boolean | null | undefined",
          "description": "Set to `true` to disable canceling the overlay with the ESC key.",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 236,
              "column": 10
            },
            "end": {
              "line": 239,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "noCancelOnOutsideClick",
          "type": "boolean | null | undefined",
          "description": "Set to `true` to disable canceling the dropdown by clicking outside the picker.",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 244,
              "column": 10
            },
            "end": {
              "line": 247,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "noTip",
          "type": "boolean | null | undefined",
          "description": "Set to `true` to disable the tip of the picker",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 252,
              "column": 10
            },
            "end": {
              "line": 255,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "confirmedValue",
          "type": "Object | null | undefined",
          "description": "The confirmed value. When `auto-confirm` is not set, the value will only change, when you confirm.",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 260,
              "column": 10
            },
            "end": {
              "line": 263,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "confirmedDatetime",
          "type": "string | null | undefined",
          "description": "The confirmed datetime. When `auto-confirm` is not set, the datetime will only change, when you confirm.",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 154,
              "column": 10
            },
            "end": {
              "line": 157,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "hideNowButton",
          "type": "boolean | null | undefined",
          "description": "Set to `true` to hide the `now`-button",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 162,
              "column": 10
            },
            "end": {
              "line": 164,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_hasNative",
          "type": "?",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 141,
              "column": 6
            },
            "end": {
              "line": 143,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_attachDom",
          "description": "attach dom with `delegatesFocus: true` so that the element is also focussed while its's children are too, and to autofocus to first tabable",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 103,
              "column": 6
            },
            "end": {
              "line": 112,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom"
            }
          ],
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 283,
              "column": 6
            },
            "end": {
              "line": 287,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "validate",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 384,
              "column": 6
            },
            "end": {
              "line": 391,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_computeInvalid",
          "description": "defines whether the value is set",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 130,
              "column": 6
            },
            "end": {
              "line": 132,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "[Object]"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_validate",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 141,
              "column": 6
            },
            "end": {
              "line": 143,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "Object",
              "description": "value to validate"
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "true, if the value is valid"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_computeValueIsSet",
          "description": "defines whether the value is set",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 149,
              "column": 6
            },
            "end": {
              "line": 151,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "[Object]"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_isSet",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 159,
              "column": 6
            },
            "end": {
              "line": 161,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "Object",
              "description": "value to test"
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "true, if the value is set"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_valueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 474,
              "column": 6
            },
            "end": {
              "line": 483,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_defaultChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 516,
              "column": 6
            },
            "end": {
              "line": 521,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "def"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_createReflectPropertyToValueObserver",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 180,
              "column": 6
            },
            "end": {
              "line": 190,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "prop"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_reflectPropertyToValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 192,
              "column": 6
            },
            "end": {
              "line": 194,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_reflectValueToProperty",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 196,
              "column": 6
            },
            "end": {
              "line": 198,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_localeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 96,
              "column": 6
            },
            "end": {
              "line": 283,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "locale"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "_shouldPropertyChange",
          "description": "overwritten of polymer to handle -0",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 34,
              "column": 6
            },
            "end": {
              "line": 40,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property"
            },
            {
              "name": "value"
            },
            {
              "name": "old"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "now",
          "description": "Sets value to the actual date",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 304,
              "column": 6
            },
            "end": {
              "line": 320,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "setDate",
          "description": "sets date to all necessary properties",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 326,
              "column": 6
            },
            "end": {
              "line": 390,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date",
              "description": "[the date to set]"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "resetDate",
          "description": "resets the date (if `default` is set, it will be used for the new value)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 396,
              "column": 6
            },
            "end": {
              "line": 433,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "Event",
              "description": "[a causing event will not propagated]"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_defaultValueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 435,
              "column": 6
            },
            "end": {
              "line": 442,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "def"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computeDefaultValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 444,
              "column": 6
            },
            "end": {
              "line": 446,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "def"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computeDatetime",
          "description": "modify date components of a date-object. it needs to be applied or called on a date object",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 460,
              "column": 6
            },
            "end": {
              "line": 537,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "year",
              "type": "number"
            },
            {
              "name": "month",
              "type": "number"
            },
            {
              "name": "day",
              "type": "number"
            },
            {
              "name": "hour",
              "type": "number"
            },
            {
              "name": "minute",
              "type": "number"
            },
            {
              "name": "second",
              "type": "number"
            },
            {
              "name": "millisecond",
              "type": "number"
            }
          ],
          "return": {
            "type": "object",
            "desc": "the changed object and the new offset-minutes"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_dateTimeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 539,
              "column": 6
            },
            "end": {
              "line": 566,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "date"
            },
            {
              "name": "time"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_datetimeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 568,
              "column": 6
            },
            "end": {
              "line": 611,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "datetime"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_valueAsNumberChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 613,
              "column": 6
            },
            "end": {
              "line": 620,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_valueAsDateChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 622,
              "column": 6
            },
            "end": {
              "line": 633,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_fromDatetime",
          "description": "compute a date object",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 640,
              "column": 6
            },
            "end": {
              "line": 667,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "datetime"
            }
          ],
          "return": {
            "type": "Date",
            "desc": "date"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_clampChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 669,
              "column": 6
            },
            "end": {
              "line": 677,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "clamp"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_minChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 679,
              "column": 6
            },
            "end": {
              "line": 696,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "min"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_maxChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 698,
              "column": 6
            },
            "end": {
              "line": 715,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "max"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_minMaxValueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 717,
              "column": 6
            },
            "end": {
              "line": 721,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_checkThreshold",
          "description": "test date object against thresholds",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 728,
              "column": 6
            },
            "end": {
              "line": 739,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date"
            }
          ],
          "return": {
            "type": "Date",
            "desc": "ether the threshold when the date is exceeding or the date object itself"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_toDate",
          "description": "get date string from a date object",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 746,
              "column": 6
            },
            "end": {
              "line": 752,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date",
              "description": "the Date to serialize"
            }
          ],
          "return": {
            "type": "String",
            "desc": "date string"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_toTime",
          "description": "get UTC time string from a date object",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 759,
              "column": 6
            },
            "end": {
              "line": 764,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date",
              "description": "the Date to serialize"
            }
          ],
          "return": {
            "type": "String",
            "desc": "date string"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_toUTCDate",
          "description": "get UTC date string from a date object",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 771,
              "column": 6
            },
            "end": {
              "line": 777,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date",
              "description": "the Date to serialize"
            }
          ],
          "return": {
            "type": "String",
            "desc": "date string"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_toUTCTime",
          "description": "get UTC time string from a date object",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 784,
              "column": 6
            },
            "end": {
              "line": 789,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date",
              "description": "the Date to serialize"
            }
          ],
          "return": {
            "type": "String",
            "desc": "time string"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "__toDate",
          "description": "get date string from date components",
          "privacy": "private",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 798,
              "column": 6
            },
            "end": {
              "line": 800,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "year",
              "type": "Number"
            },
            {
              "name": "month",
              "type": "Number"
            },
            {
              "name": "day",
              "type": "Number"
            }
          ],
          "return": {
            "type": "String",
            "desc": "date string"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "__toTime",
          "description": "get time string from date components",
          "privacy": "private",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 810,
              "column": 6
            },
            "end": {
              "line": 812,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hour",
              "type": "Number"
            },
            {
              "name": "minute",
              "type": "Number"
            },
            {
              "name": "second",
              "type": "Number"
            },
            {
              "name": "millisecond",
              "type": "Number"
            }
          ],
          "return": {
            "type": "String",
            "desc": "time string"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_clampUTC",
          "description": "clamp UTC values",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 820,
              "column": 6
            },
            "end": {
              "line": 837,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date",
              "description": "the Date to clamp"
            },
            {
              "name": "clamp",
              "type": "String",
              "description": "the date component to clamp"
            }
          ],
          "return": {
            "type": "Date",
            "desc": "the clamped date"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_pad",
          "description": "pad a string with 0",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 845,
              "column": 6
            },
            "end": {
              "line": 851,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "n",
              "type": "Number",
              "description": "number to pad"
            },
            {
              "name": "padLength",
              "type": "Number",
              "description": "total length of strings"
            }
          ],
          "return": {
            "type": "String",
            "desc": "padded string"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_hour12Changed",
          "description": "`hour12` is the hour in hour12-format, that starts is minimal 1 and maximal 12, midnight is at 12am and noon is 12pm",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 856,
              "column": 6
            },
            "end": {
              "line": 860,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hour12"
            },
            {
              "name": "old"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_isAmChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 862,
              "column": 6
            },
            "end": {
              "line": 866,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "isAm"
            },
            {
              "name": "old"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_ifClamped",
          "description": "clamp to date component",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 871,
              "column": 6
            },
            "end": {
              "line": 876,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "clamp"
            },
            {
              "name": "comp"
            },
            {
              "name": "hidden"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_checkDefaultTimezone",
          "description": "set the default timezone if needed",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 882,
              "column": 6
            },
            "end": {
              "line": 895,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computeTimezoneShift",
          "description": "correct a timezone shift when date changes from winter to summertime (locally)",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 901,
              "column": 6
            },
            "end": {
              "line": 910,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_timezoneChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 912,
              "column": 6
            },
            "end": {
              "line": 932,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "timezone"
            },
            {
              "name": "oldValue"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_offsetMinutesChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 934,
              "column": 6
            },
            "end": {
              "line": 942,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "offsetMinutes"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_timeZoneHoursMinutesChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 944,
              "column": 6
            },
            "end": {
              "line": 963,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hour"
            },
            {
              "name": "minute"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computeTimezone",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 965,
              "column": 6
            },
            "end": {
              "line": 987,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "offsetMinutes"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computeTimezoneOffset",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 989,
              "column": 6
            },
            "end": {
              "line": 1019,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "timezone"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computeMaxDayOfMonth",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 1021,
              "column": 6
            },
            "end": {
              "line": 1029,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "year"
            },
            {
              "name": "month"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computePartsStep",
          "description": "compute the steps for the related inputs. The day-input is the highest modified input allthough if the step is higher than a day in seconds it might also change month- or year-inputs.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 104,
              "column": 6
            },
            "end": {
              "line": 185,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "step"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeFormMixin"
        },
        {
          "name": "_computePartsDisabled",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 187,
              "column": 6
            },
            "end": {
              "line": 205,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "change"
            },
            {
              "name": "disabled"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeFormMixin"
        },
        {
          "name": "_computeOr",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 318,
              "column": 6
            },
            "end": {
              "line": 320,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "a"
            },
            {
              "name": "b"
            }
          ],
          "inheritedFrom": "DatetimeInputMixin"
        },
        {
          "name": "_computePartOrder",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 322,
              "column": 6
            },
            "end": {
              "line": 324,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "first"
            }
          ],
          "inheritedFrom": "DatetimeInputMixin"
        },
        {
          "name": "_computeResetButtonIsInvisible",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 326,
              "column": 6
            },
            "end": {
              "line": 328,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "valueIsSet"
            },
            {
              "name": "defaultValue"
            },
            {
              "name": "valueAsNumber"
            }
          ],
          "inheritedFrom": "DatetimeInputMixin"
        },
        {
          "name": "_orderDateParts",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/date-input.html",
            "start": {
              "line": 62,
              "column": 6
            },
            "end": {
              "line": 117,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "order"
            },
            {
              "name": "clamp"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DateInputPattern"
        },
        {
          "name": "_getDefaultForProp",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 182,
              "column": 6
            },
            "end": {
              "line": 184,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "prop"
            }
          ],
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 289,
              "column": 6
            },
            "end": {
              "line": 293,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_addSwitchListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 89,
              "column": 6
            },
            "end": {
              "line": 104,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "_removeSwitchListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 106,
              "column": 6
            },
            "end": {
              "line": 116,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "_checkKeycodeSwitch",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 118,
              "column": 6
            },
            "end": {
              "line": 126,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "__getEventTarget",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 128,
              "column": 6
            },
            "end": {
              "line": 142,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            },
            {
              "name": "classSelector"
            }
          ],
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "__increm",
          "description": "increment property by being called by an Event on an `switch`-Node",
          "privacy": "private",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 149,
              "column": 6
            },
            "end": {
              "line": 176,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "Event",
              "description": "Event it was called on"
            },
            {
              "name": "once",
              "type": "Boolean",
              "description": "if true, it doesn't setup an intervall to continue incrementing (e.g. keyPressEvents are fired itself repeatedly while the key is pressed)"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "__incremProp",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 178,
              "column": 6
            },
            "end": {
              "line": 180,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "prop"
            },
            {
              "name": "step"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "_stopActiveIncremJob",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 186,
              "column": 6
            },
            "end": {
              "line": 199,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "_dwellTimeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 201,
              "column": 6
            },
            "end": {
              "line": 207,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dwellTime"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "_dwellDelayChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 209,
              "column": 6
            },
            "end": {
              "line": 215,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dwellDelay"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "_onMouseMoveDay",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 320,
              "column": 6
            },
            "end": {
              "line": 333,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_onClickDay",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 335,
              "column": 6
            },
            "end": {
              "line": 361,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "confirm",
          "description": "confirms the input",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 443,
              "column": 6
            },
            "end": {
              "line": 452,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "[type]",
              "description": "Event"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_computeIncremPropTop",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 374,
              "column": 6
            },
            "end": {
              "line": 379,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hideMonth"
            }
          ],
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_setWeekDayCaptions",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 381,
              "column": 6
            },
            "end": {
              "line": 396,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "locale"
            },
            {
              "name": "firstDayOfWeek"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_setMonthSelectorOptions",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 398,
              "column": 6
            },
            "end": {
              "line": 407,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "locale"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "renderCalendar",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 52,
              "column": 6
            },
            "end": {
              "line": 57,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "year"
            },
            {
              "name": "month"
            },
            {
              "name": "day"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerPattern"
        },
        {
          "name": "_clampDay",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 541,
              "column": 6
            },
            "end": {
              "line": 547,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d"
            }
          ],
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_dayDiff",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 549,
              "column": 6
            },
            "end": {
              "line": 551,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "end"
            },
            {
              "name": "start"
            }
          ],
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_checkKeycodeForDates",
          "description": "key press event handler on days area",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 567,
              "column": 6
            },
            "end": {
              "line": 628,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "[type]",
              "description": "Event"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_addEventListenerToNode",
          "description": "Add the event listener to the node if it is a gestures event.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../polymer/lib/mixins/gesture-event-listeners.html",
            "start": {
              "line": 55,
              "column": 6
            },
            "end": {
              "line": 59,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node",
              "type": "!Node",
              "description": "Node to add event listener to"
            },
            {
              "name": "eventName",
              "type": "string",
              "description": "Name of event"
            },
            {
              "name": "handler",
              "type": "function (!Event): void",
              "description": "Listener function to add"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.GestureEventListeners"
        },
        {
          "name": "_removeEventListenerFromNode",
          "description": "Remove the event listener to the node if it is a gestures event.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../polymer/lib/mixins/gesture-event-listeners.html",
            "start": {
              "line": 69,
              "column": 6
            },
            "end": {
              "line": 73,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node",
              "type": "!Node",
              "description": "Node to remove event listener from"
            },
            {
              "name": "eventName",
              "type": "string",
              "description": "Name of event"
            },
            {
              "name": "handler",
              "type": "function (!Event): void",
              "description": "Listener function to remove"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.GestureEventListeners"
        },
        {
          "name": "_addPickerTransitionEndListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 295,
              "column": 6
            },
            "end": {
              "line": 302,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_removePickerTransitionEndListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 304,
              "column": 6
            },
            "end": {
              "line": 306,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_onPickerTransitionEnd",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 308,
              "column": 6
            },
            "end": {
              "line": 313,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_addCancelOnClickListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 315,
              "column": 6
            },
            "end": {
              "line": 322,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_removeCancelOnClickListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 324,
              "column": 6
            },
            "end": {
              "line": 327,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_stopPropagation",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 329,
              "column": 6
            },
            "end": {
              "line": 332,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_addKeyListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 334,
              "column": 6
            },
            "end": {
              "line": 337,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_removeKeyListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 339,
              "column": 6
            },
            "end": {
              "line": 342,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_nativeOnMobileChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 344,
              "column": 6
            },
            "end": {
              "line": 357,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_checkKeycode",
          "description": "key press event handler",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 363,
              "column": 6
            },
            "end": {
              "line": 382,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "[type]",
              "description": "Event"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "open",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 59,
              "column": 6
            },
            "end": {
              "line": 70,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerPattern"
        },
        {
          "name": "close",
          "description": "close the picker",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 415,
              "column": 6
            },
            "end": {
              "line": 423,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "[type]",
              "description": "Event"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "toggle",
          "description": "toggle the picker",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 429,
              "column": 6
            },
            "end": {
              "line": 437,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "[type]",
              "description": "Event"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "cancel",
          "description": "cancels the input",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 458,
              "column": 6
            },
            "end": {
              "line": 472,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "[type]",
              "description": "Event"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_confirmedValueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 295,
              "column": 6
            },
            "end": {
              "line": 303,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "confirmedValue"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_reset",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 493,
              "column": 6
            },
            "end": {
              "line": 498,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_setConfirmedValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 305,
              "column": 6
            },
            "end": {
              "line": 312,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_resetValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 506,
              "column": 6
            },
            "end": {
              "line": 510,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_autoConfirmChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 512,
              "column": 6
            },
            "end": {
              "line": 514,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "autoConfirm"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_computeAnd",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 181,
              "column": 6
            },
            "end": {
              "line": 183,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "a"
            },
            {
              "name": "b"
            }
          ],
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_computeNativeStep",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 185,
              "column": 6
            },
            "end": {
              "line": 204,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "step"
            },
            {
              "name": "clamp"
            }
          ],
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_computeNativeValueAsNumber",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 206,
              "column": 6
            },
            "end": {
              "line": 227,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "native"
            },
            {
              "name": "valueAsNumber"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_reflectNativeValueAsNumber",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 229,
              "column": 6
            },
            "end": {
              "line": 253,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "native"
            },
            {
              "name": "nativeValueAsNumber"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_setDate",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 255,
              "column": 6
            },
            "end": {
              "line": 262,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_confirmedDatetimeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 264,
              "column": 6
            },
            "end": {
              "line": 276,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "confirmedDatetime"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_resetDate",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 314,
              "column": 6
            },
            "end": {
              "line": 317,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_resetConfirmedValues",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 319,
              "column": 6
            },
            "end": {
              "line": 327,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_resetValues",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 329,
              "column": 6
            },
            "end": {
              "line": 336,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_switchAm",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "time-element.html",
            "start": {
              "line": 187,
              "column": 6
            },
            "end": {
              "line": 190,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "TimeElementPattern"
        },
        {
          "name": "_computeMultipleClamp",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "time-element.html",
            "start": {
              "line": 183,
              "column": 6
            },
            "end": {
              "line": 185,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "clamp"
            },
            {
              "name": "prop1"
            },
            {
              "name": "prop2"
            }
          ],
          "inheritedFrom": "TimeElementPattern"
        },
        {
          "name": "_confirmedDateTimeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "time-picker.html",
            "start": {
              "line": 39,
              "column": 6
            },
            "end": {
              "line": 54,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "confirmedDate"
            },
            {
              "name": "confirmedTime"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "TimePickerPattern"
        },
        {
          "name": "_setConfirmedValues",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 72,
              "column": 6
            },
            "end": {
              "line": 83,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerPattern"
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        },
        {
          "url": "demo/datetime-elements.html",
          "description": "datetime elements"
        },
        {
          "url": "demo/form.html",
          "description": "in a form"
        },
        {
          "url": "demo/music-album.html",
          "description": "music album demo"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 131,
          "column": 4
        },
        "end": {
          "line": 144,
          "column": 5
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "DatetimePicker",
      "attributes": [
        {
          "name": "name",
          "description": "name of the input",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 16,
              "column": 10
            },
            "end": {
              "line": 18,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "title",
          "description": "description for the element and can be used as a hint for invalid values",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 23,
              "column": 10
            },
            "end": {
              "line": 26,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "disabled",
          "description": "disables the input",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 31,
              "column": 10
            },
            "end": {
              "line": 35,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "required",
          "description": "required attribute",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 40,
              "column": 10
            },
            "end": {
              "line": 44,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "property-for-value",
          "description": "defines the property that should be used for the value",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 49,
              "column": 10
            },
            "end": {
              "line": 52,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "invalid",
          "description": "required attribute",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 57,
              "column": 10
            },
            "end": {
              "line": 63,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "default",
          "description": "default value of the value, when it does not validate",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 77,
              "column": 10
            },
            "end": {
              "line": 80,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "value",
          "description": "value of the input",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 85,
              "column": 10
            },
            "end": {
              "line": 88,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "locale",
          "description": "The current locale",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 19,
              "column": 10
            },
            "end": {
              "line": 23,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "decimal-separator",
          "description": "locale separator for local decimal values",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 29,
              "column": 10
            },
            "end": {
              "line": 33,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "date-separator",
          "description": "Separator for local date values (date-string is still in ISO-Format)",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 39,
              "column": 10
            },
            "end": {
              "line": 43,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "time-separator",
          "description": "Separator for local time values (time-string is still in ISO-Format)",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 49,
              "column": 10
            },
            "end": {
              "line": 53,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "am-string",
          "description": "locale representation of 'AM'",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 58,
              "column": 10
            },
            "end": {
              "line": 62,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "pm-string",
          "description": "locale representation of 'PM'",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 67,
              "column": 10
            },
            "end": {
              "line": 71,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "date-order",
          "description": "order of date-parts",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 76,
              "column": 10
            },
            "end": {
              "line": 86,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "year",
          "description": "The year of the selected date",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 48,
              "column": 10
            },
            "end": {
              "line": 51,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "month",
          "description": "The month of the selected date (starts with 1)",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 56,
              "column": 10
            },
            "end": {
              "line": 59,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "day",
          "description": "The day of the selected date",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 64,
              "column": 10
            },
            "end": {
              "line": 67,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour",
          "description": "The hour of the selected time",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 72,
              "column": 10
            },
            "end": {
              "line": 75,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour12",
          "description": "hour in 12-hour-format",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 81,
              "column": 10
            },
            "end": {
              "line": 85,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "is-am",
          "description": "true, when A.M. (when `hour` < 12)",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 91,
              "column": 10
            },
            "end": {
              "line": 95,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "minute",
          "description": "The minute of the selected time",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 100,
              "column": 10
            },
            "end": {
              "line": 103,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "second",
          "description": "The second of the selected time",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 108,
              "column": 10
            },
            "end": {
              "line": 111,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "millisecond",
          "description": "The millisecond of the selected time",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 116,
              "column": 10
            },
            "end": {
              "line": 119,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "datetime",
          "description": "the selected date and time (format: iso8601)",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 124,
              "column": 10
            },
            "end": {
              "line": 127,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "date",
          "description": "the selected date (format: iso8601)",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 132,
              "column": 10
            },
            "end": {
              "line": 135,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "time",
          "description": "the selected time (format: iso8601)",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 140,
              "column": 10
            },
            "end": {
              "line": 143,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "value-as-date",
          "description": "The date-object of the selected date",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 148,
              "column": 10
            },
            "end": {
              "line": 152,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Date | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "value-as-number",
          "description": "The value of the selected date",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 157,
              "column": 10
            },
            "end": {
              "line": 161,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "min",
          "description": "The minimal date, could be a number, a date-object or an iso-string in time, date or datetime-notation",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 181,
              "column": 10
            },
            "end": {
              "line": 185,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "max",
          "description": "The maximal date, could be a number, a date-object or an iso-string in time, date or datetime-notation",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 197,
              "column": 10
            },
            "end": {
              "line": 201,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour12-format",
          "description": "when true, 12-hour time format, else 24-hour",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 214,
              "column": 10
            },
            "end": {
              "line": 218,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "clamp",
          "description": "Clamp datetime to a property\npossible values: 'month', 'day', 'hour', 'minute', 'second', 'millisecond' or ''",
          "sourceRange": {
            "start": {
              "line": 44,
              "column": 10
            },
            "end": {
              "line": 48,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "DatetimePickerPattern"
        },
        {
          "name": "timezone",
          "description": "The timezone offset in '±hh:mm' format",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 233,
              "column": 10
            },
            "end": {
              "line": 237,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "offset-minutes",
          "description": "The offset minutes of the set timezone",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 242,
              "column": 10
            },
            "end": {
              "line": 246,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "step",
          "description": "If set the step defines the step a date should be incremented (in seconds). The input for the most inferior standing that would create an integer step is used to increment the value.\nFor example, if the **step** is:\n + **0.05**: the millisecond-input will increment the value by 50 (50 milliseconds), the other inputs behaive as expected\n + **1.05**: the millisecond-input will increment the value by 1050 (1 second and 50 millisecond), the other inputs behaive as expected\n + **2**: the millisecond-input will be disabled, the second-input will increment the value by 2000 (2 seconds), the other inputs behaive as expected\n + **180**: the millisecond-input and the second-input will be disabled, the minute-input will increment the value by 180000 (3 minutes), the other inputs behaive as expected\nIf `step=\"0\"` all inputs will be disabled, else if the step is below _0.001_ the step will be set to **0.001**. The most supirior input that will become the given step is the day-input.",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 33,
              "column": 10
            },
            "end": {
              "line": 36,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeFormMixin"
        },
        {
          "name": "hide-reset-button",
          "description": "if true, the reset button is hidden",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 298,
              "column": 10
            },
            "end": {
              "line": 301,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "DatetimeInputMixin"
        },
        {
          "name": "with-timezone",
          "description": "if true, timezone inputs are shown",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 306,
              "column": 10
            },
            "end": {
              "line": 309,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "DatetimeInputMixin"
        },
        {
          "name": "dwell-time",
          "description": "dwell time of incrementing inputs by the buttons in milliseconds. It is minimal 15 milliseconds.",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 33,
              "column": 10
            },
            "end": {
              "line": 37,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "dwell-delay",
          "description": "delay when incrementing inputs by the buttons in milliseconds. It is minimal 15 milliseconds.",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 43,
              "column": 10
            },
            "end": {
              "line": 47,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "current-hovered-day-node",
          "description": "Current hovered day node\nto access: bind the attribute ('current-hovered-day-node') and get its dataset `year`, `month` or `day`-property",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 262,
              "column": 10
            },
            "end": {
              "line": 266,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Node | null | undefined",
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "current-active-day-node",
          "description": "Node of the last clicked day-field (by clicking or keypress)\nto access: bind the attribute ('current-active-day-node') and get its dataset `year`, `month` or `day`-property",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 272,
              "column": 10
            },
            "end": {
              "line": 276,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Node | null | undefined",
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "current-selected-day-node",
          "description": "Node of the last selected day\nto access: bind the attribute ('current-selected-day-node') and get its dataset `year`, `month` or `day`-property",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 282,
              "column": 10
            },
            "end": {
              "line": 286,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Node | null | undefined",
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "first-day-of-week",
          "description": "Defines the first day of the week to use. Defaults to `1` (`monday`)\ne.g. when `firstDayOfWeek` is `0` the first day of the week would be `sunday`",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 300,
              "column": 10
            },
            "end": {
              "line": 303,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "native",
          "description": "Set to `true` to use the native input, if it available",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 173,
              "column": 10
            },
            "end": {
              "line": 176,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "native-on-mobile",
          "description": "Set to `true` to use the native input automatically on mobile devices, if it available",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 181,
              "column": 10
            },
            "end": {
              "line": 184,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "mobile-user-agent-test-string",
          "description": "When `nativeOnMobile` is set to `true` this string is used to test the userAgent for a mobile device",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 189,
              "column": 10
            },
            "end": {
              "line": 193,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "opened",
          "description": "if `true` the picker is opened",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 198,
              "column": 10
            },
            "end": {
              "line": 203,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "horizontal-align",
          "description": "The orientation against which to align the element horizontally\nrelative to the related input element. Possible values are \"left\", \"right\", \"center\", \"auto\". (comparable to `iron-fit-behavior` and its `no-overlap`-attribute)",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 209,
              "column": 10
            },
            "end": {
              "line": 213,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "vertical-align",
          "description": "The orientation against which to align the element vertically\nrelative to the related input element. Possible values are \"top\", \"bottom\", \"middle\", \"auto\". (comparable to `iron-fit-behavior` and its `no-overlap`-attribute)",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 219,
              "column": 10
            },
            "end": {
              "line": 223,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "auto-confirm",
          "description": "Set to `true` to make the input auto-confirming",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 228,
              "column": 10
            },
            "end": {
              "line": 231,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "no-cancel-on-esc-key",
          "description": "Set to `true` to disable canceling the overlay with the ESC key.",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 236,
              "column": 10
            },
            "end": {
              "line": 239,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "no-cancel-on-outside-click",
          "description": "Set to `true` to disable canceling the dropdown by clicking outside the picker.",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 244,
              "column": 10
            },
            "end": {
              "line": 247,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "no-tip",
          "description": "Set to `true` to disable the tip of the picker",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 252,
              "column": 10
            },
            "end": {
              "line": 255,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "confirmed-value",
          "description": "The confirmed value. When `auto-confirm` is not set, the value will only change, when you confirm.",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 260,
              "column": 10
            },
            "end": {
              "line": 263,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "confirmed-datetime",
          "description": "The confirmed datetime. When `auto-confirm` is not set, the datetime will only change, when you confirm.",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 154,
              "column": 10
            },
            "end": {
              "line": 157,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "hide-now-button",
          "description": "Set to `true` to hide the `now`-button",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 162,
              "column": 10
            },
            "end": {
              "line": 164,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "DatetimePickerMixin"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "input-picker-closed",
          "description": "input-picker-closed\nFired after a picker has been closed.",
          "metadata": {},
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "type": "CustomEvent",
          "name": "input-picker-opened",
          "description": "input-picker-opened\nFired when a picker has been opened.",
          "metadata": {},
          "inheritedFrom": "InputPickerPattern"
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "datetime-picker",
      "mixins": [
        "DatetimePickerPattern"
      ]
    },
    {
      "description": "`<overlay-datetime-picker>` extends `datetime-picker` and behaves simular.\n\n  ```html\n  <overlay-datetime-picker value=\"{{value}}\" ></overlay-datetime-picker>\n  ```\n\n A use case could be for example, if you want on mobile devices use the `native picker` and on desktop devices the polyfill.\n\n ```html\n   <overlay-datetime-picker native-on-mobile></overlay-datetime-picker>\n ```\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--calendar-element`               | Mixin applied to the calendar                  | {}\n`--calendar-cell`                  | Mixin applied to the date cells                | {}\n`--calendar-cell-hovered`          | Mixin applied to hovered date cells            | {}\n`--calendar-cell-size`             | width of a date cell                           | 3em\n`--calendar-cell-border-radius`    | border-radius of a date cell                   | 0.25em\n`--calendar-cell-font-size`        | font-size of a date cell                       | 0.75em\n`--time-element`                   | Mixin applied to the time-element              | {}\n\n Have a look at [input-picker-pattern#input-picker-shared-style](https://github.com/fooloomanzoo/input-picker-pattern#input-picker-shared-style) and [input-picker-pattern#input-shared-style](https://github.com/fooloomanzoo/input-picker-pattern#input-shared-style) to see how to style the element.",
      "summary": "",
      "path": "overlay-datetime-picker.html",
      "properties": [
        {
          "name": "alwaysOnTop",
          "type": "boolean | null | undefined",
          "description": "Set to true to keep overlay always on top.",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/overlay-picker-mixin.html",
            "start": {
              "line": 21,
              "column": 10
            },
            "end": {
              "line": 23,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "OverlayPickerMixin"
        },
        {
          "name": "noOverlap",
          "type": "boolean | null | undefined",
          "description": "Will position the element around the positionTarget without overlapping it.",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/overlay-picker-mixin.html",
            "start": {
              "line": 27,
              "column": 10
            },
            "end": {
              "line": 30,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "OverlayPickerMixin"
        },
        {
          "name": "withBackdrop",
          "type": "boolean | null | undefined",
          "description": "Set to true to display a backdrop behind the overlay. It traps the focus\nwithin the light DOM of the overlay.",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/overlay-picker-mixin.html",
            "start": {
              "line": 35,
              "column": 10
            },
            "end": {
              "line": 38,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "OverlayPickerMixin"
        },
        {
          "name": "noCancelOnOutsideClick",
          "type": "boolean | null | undefined",
          "description": "Set to `true` to disable canceling the dropdown by clicking outside the picker.",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 244,
              "column": 10
            },
            "end": {
              "line": 247,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "dynamicAlign",
          "type": "boolean | null | undefined",
          "description": "If true, it will use `horizontalAlign` and `verticalAlign` values as preferred alignment\nand if there's not enough space, it will pick the values which minimize the cropping.",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/overlay-picker-mixin.html",
            "start": {
              "line": 51,
              "column": 10
            },
            "end": {
              "line": 54,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "OverlayPickerMixin"
        },
        {
          "name": "autoFitOnAttach",
          "type": "boolean | null | undefined",
          "description": "Set to true to auto-fit on attach.",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/overlay-picker-mixin.html",
            "start": {
              "line": 59,
              "column": 10
            },
            "end": {
              "line": 62,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "OverlayPickerMixin"
        },
        {
          "name": "fitInto",
          "type": "Object | null | undefined",
          "description": "The element to fit the overlay into. By default it is the window.",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/overlay-picker-mixin.html",
            "start": {
              "line": 67,
              "column": 10
            },
            "end": {
              "line": 69,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "OverlayPickerMixin"
        },
        {
          "name": "positionTarget",
          "type": "Element | null | undefined",
          "description": "The element that should be used to position the overlay. If not set, it will\ndefault to the polyfill node.",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/overlay-picker-mixin.html",
            "start": {
              "line": 75,
              "column": 10
            },
            "end": {
              "line": 77,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Element"
            }
          },
          "inheritedFrom": "OverlayPickerMixin"
        },
        {
          "name": "_sizingTarget",
          "type": "Element | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/overlay-picker-mixin.html",
            "start": {
              "line": 79,
              "column": 10
            },
            "end": {
              "line": 82,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Element"
            }
          },
          "inheritedFrom": "OverlayPickerMixin"
        },
        {
          "name": "name",
          "type": "string | null | undefined",
          "description": "name of the input",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 16,
              "column": 10
            },
            "end": {
              "line": 18,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "title",
          "type": "string | null | undefined",
          "description": "description for the element and can be used as a hint for invalid values",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 23,
              "column": 10
            },
            "end": {
              "line": 26,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "disabled",
          "type": "boolean | null | undefined",
          "description": "disables the input",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 31,
              "column": 10
            },
            "end": {
              "line": 35,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "required",
          "type": "boolean | null | undefined",
          "description": "required attribute",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 40,
              "column": 10
            },
            "end": {
              "line": 44,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "propertyForValue",
          "type": "string | null | undefined",
          "description": "defines the property that should be used for the value",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 49,
              "column": 10
            },
            "end": {
              "line": 52,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_createReflectPropertyToValueObserver\"",
              "attributeType": "String"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "invalid",
          "type": "boolean | null | undefined",
          "description": "required attribute",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 57,
              "column": 10
            },
            "end": {
              "line": 63,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_valueIsSet",
          "type": "boolean | null | undefined",
          "description": "is true when the value is not undefined",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 68,
              "column": 10
            },
            "end": {
              "line": 72,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "default",
          "type": "Object | null | undefined",
          "description": "default value of the value, when it does not validate",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 77,
              "column": 10
            },
            "end": {
              "line": 80,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_defaultChanged\"",
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "value",
          "type": "Object | null | undefined",
          "description": "value of the input",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 85,
              "column": 10
            },
            "end": {
              "line": 88,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "locale",
          "type": "string | null | undefined",
          "description": "The current locale",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 19,
              "column": 10
            },
            "end": {
              "line": 23,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "decimalSeparator",
          "type": "string",
          "description": "locale separator for local decimal values",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 29,
              "column": 10
            },
            "end": {
              "line": 33,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "dateSeparator",
          "type": "string",
          "description": "Separator for local date values (date-string is still in ISO-Format)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 39,
              "column": 10
            },
            "end": {
              "line": 43,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "timeSeparator",
          "type": "string",
          "description": "Separator for local time values (time-string is still in ISO-Format)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 49,
              "column": 10
            },
            "end": {
              "line": 53,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "amString",
          "type": "string | null | undefined",
          "description": "locale representation of 'AM'",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 58,
              "column": 10
            },
            "end": {
              "line": 62,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "pmString",
          "type": "string | null | undefined",
          "description": "locale representation of 'PM'",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 67,
              "column": 10
            },
            "end": {
              "line": 71,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "dateOrder",
          "type": "Object | null | undefined",
          "description": "order of date-parts",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 76,
              "column": 10
            },
            "end": {
              "line": 86,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Object"
            }
          },
          "defaultValue": "{\"parts\":[],\"timeFirst\":false,\"dateFirst\":true}",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "year",
          "type": "number | null | undefined",
          "description": "The year of the selected date",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 48,
              "column": 10
            },
            "end": {
              "line": 51,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "month",
          "type": "number | null | undefined",
          "description": "The month of the selected date (starts with 1)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 56,
              "column": 10
            },
            "end": {
              "line": 59,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "day",
          "type": "number | null | undefined",
          "description": "The day of the selected date",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 64,
              "column": 10
            },
            "end": {
              "line": 67,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour",
          "type": "number | null | undefined",
          "description": "The hour of the selected time",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 72,
              "column": 10
            },
            "end": {
              "line": 75,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour12",
          "type": "number",
          "description": "hour in 12-hour-format",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 81,
              "column": 10
            },
            "end": {
              "line": 85,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_hour12Changed\"",
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "isAm",
          "type": "boolean",
          "description": "true, when A.M. (when `hour` < 12)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 91,
              "column": 10
            },
            "end": {
              "line": 95,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_isAmChanged\"",
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "minute",
          "type": "number | null | undefined",
          "description": "The minute of the selected time",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 100,
              "column": 10
            },
            "end": {
              "line": 103,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "second",
          "type": "number | null | undefined",
          "description": "The second of the selected time",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 108,
              "column": 10
            },
            "end": {
              "line": 111,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "millisecond",
          "type": "number | null | undefined",
          "description": "The millisecond of the selected time",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 116,
              "column": 10
            },
            "end": {
              "line": 119,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "datetime",
          "type": "string | null | undefined",
          "description": "the selected date and time (format: iso8601)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 124,
              "column": 10
            },
            "end": {
              "line": 127,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "date",
          "type": "string | null | undefined",
          "description": "the selected date (format: iso8601)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 132,
              "column": 10
            },
            "end": {
              "line": 135,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "time",
          "type": "string | null | undefined",
          "description": "the selected time (format: iso8601)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 140,
              "column": 10
            },
            "end": {
              "line": 143,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "valueAsDate",
          "type": "Date | null | undefined",
          "description": "The date-object of the selected date",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 148,
              "column": 10
            },
            "end": {
              "line": 152,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_valueAsDateChanged\"",
              "attributeType": "Date"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "valueAsNumber",
          "type": "number | null | undefined",
          "description": "The value of the selected date",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 157,
              "column": 10
            },
            "end": {
              "line": 161,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_valueAsNumberChanged\"",
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_defaultValue",
          "type": "number | null | undefined",
          "description": "value of the default date",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 173,
              "column": 10
            },
            "end": {
              "line": 176,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "min",
          "type": "Object | null | undefined",
          "description": "The minimal date, could be a number, a date-object or an iso-string in time, date or datetime-notation",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 181,
              "column": 10
            },
            "end": {
              "line": 185,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_minChanged\"",
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_minValue",
          "type": "number | null | undefined",
          "description": "value if the minimum date",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 190,
              "column": 10
            },
            "end": {
              "line": 192,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "max",
          "type": "Object | null | undefined",
          "description": "The maximal date, could be a number, a date-object or an iso-string in time, date or datetime-notation",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 197,
              "column": 10
            },
            "end": {
              "line": 201,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_maxChanged\"",
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_maxValue",
          "type": "number | null | undefined",
          "description": "value if the maximum date",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 206,
              "column": 10
            },
            "end": {
              "line": 208,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour12Format",
          "type": "boolean",
          "description": "when true, 12-hour time format, else 24-hour",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 214,
              "column": 10
            },
            "end": {
              "line": 218,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "clamp",
          "type": "string | null | undefined",
          "description": "Clamp datetime to a property\npossible values: 'month', 'day', 'hour', 'minute', 'second', 'millisecond' or ''",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-picker.html",
            "start": {
              "line": 44,
              "column": 10
            },
            "end": {
              "line": 48,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "defaultValue": "\"millisecond\"",
          "inheritedFrom": "DatetimePickerPattern"
        },
        {
          "name": "timezone",
          "type": "string | null | undefined",
          "description": "The timezone offset in '±hh:mm' format",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 233,
              "column": 10
            },
            "end": {
              "line": 237,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_timezoneChanged\"",
              "attributeType": "String"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "offsetMinutes",
          "type": "number | null | undefined",
          "description": "The offset minutes of the set timezone",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 242,
              "column": 10
            },
            "end": {
              "line": 246,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_offsetMinutesChanged\"",
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_timeZoneHours",
          "type": "number | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 248,
              "column": 10
            },
            "end": {
              "line": 250,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_timeZoneMinutes",
          "type": "number | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 252,
              "column": 10
            },
            "end": {
              "line": 254,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_recentLocalTimezoneOffset",
          "type": "number | null | undefined",
          "description": "The offset minute of the current datetime",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 259,
              "column": 10
            },
            "end": {
              "line": 261,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_timeOnly",
          "type": "boolean | null | undefined",
          "description": "if true perspective starts at 0 (1970-01-01)",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 266,
              "column": 10
            },
            "end": {
              "line": 269,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_maxDayOfMonth",
          "type": "number",
          "description": "exclusive max day of month",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 275,
              "column": 10
            },
            "end": {
              "line": 278,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_dateLocked",
          "type": "boolean | null | undefined",
          "description": "lock to date and ignore time",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 283,
              "column": 10
            },
            "end": {
              "line": 286,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "step",
          "type": "number | null | undefined",
          "description": "If set the step defines the step a date should be incremented (in seconds). The input for the most inferior standing that would create an integer step is used to increment the value.\nFor example, if the **step** is:\n + **0.05**: the millisecond-input will increment the value by 50 (50 milliseconds), the other inputs behaive as expected\n + **1.05**: the millisecond-input will increment the value by 1050 (1 second and 50 millisecond), the other inputs behaive as expected\n + **2**: the millisecond-input will be disabled, the second-input will increment the value by 2000 (2 seconds), the other inputs behaive as expected\n + **180**: the millisecond-input and the second-input will be disabled, the minute-input will increment the value by 180000 (3 minutes), the other inputs behaive as expected\nIf `step=\"0\"` all inputs will be disabled, else if the step is below _0.001_ the step will be set to **0.001**. The most supirior input that will become the given step is the day-input.",
          "privacy": "public",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 33,
              "column": 10
            },
            "end": {
              "line": 36,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeFormMixin"
        },
        {
          "name": "_partsDisabled",
          "type": "Object | null | undefined",
          "description": "date-parts that are disabled",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 41,
              "column": 10
            },
            "end": {
              "line": 47,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Object"
            }
          },
          "defaultValue": "{}",
          "inheritedFrom": "DatetimeFormMixin"
        },
        {
          "name": "_partsStep",
          "type": "Object | null | undefined",
          "description": "the computed steps for the date-parts",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 52,
              "column": 10
            },
            "end": {
              "line": 65,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "Object"
            }
          },
          "defaultValue": "{\"day\":1,\"hour\":1,\"minute\":1,\"second\":1,\"millisecond\":1}",
          "inheritedFrom": "DatetimeFormMixin"
        },
        {
          "name": "hideResetButton",
          "type": "boolean | null | undefined",
          "description": "if true, the reset button is hidden",
          "privacy": "public",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 298,
              "column": 10
            },
            "end": {
              "line": 301,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "DatetimeInputMixin"
        },
        {
          "name": "withTimezone",
          "type": "boolean | null | undefined",
          "description": "if true, timezone inputs are shown",
          "privacy": "public",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 306,
              "column": 10
            },
            "end": {
              "line": 309,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "DatetimeInputMixin"
        },
        {
          "name": "_resetButtonIsInvisible",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 311,
              "column": 10
            },
            "end": {
              "line": 314,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "DatetimeInputMixin"
        },
        {
          "name": "dwellTime",
          "type": "number",
          "description": "dwell time of incrementing inputs by the buttons in milliseconds. It is minimal 15 milliseconds.",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 33,
              "column": 10
            },
            "end": {
              "line": 37,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_dwellTimeChanged\"",
              "attributeType": "Number"
            }
          },
          "defaultValue": "50",
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "dwellDelay",
          "type": "number",
          "description": "delay when incrementing inputs by the buttons in milliseconds. It is minimal 15 milliseconds.",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 43,
              "column": 10
            },
            "end": {
              "line": 47,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_dwellTimeChanged\"",
              "attributeType": "Number"
            }
          },
          "defaultValue": "500",
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "_switchClassSelector",
          "type": "string | null | undefined",
          "description": "class property of switches",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 52,
              "column": 10
            },
            "end": {
              "line": 55,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"switch\"",
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "currentHoveredDayNode",
          "type": "Node | null | undefined",
          "description": "Current hovered day node\nto access: bind the attribute ('current-hovered-day-node') and get its dataset `year`, `month` or `day`-property",
          "privacy": "public",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 262,
              "column": 10
            },
            "end": {
              "line": 266,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "Node"
            }
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "currentActiveDayNode",
          "type": "Node | null | undefined",
          "description": "Node of the last clicked day-field (by clicking or keypress)\nto access: bind the attribute ('current-active-day-node') and get its dataset `year`, `month` or `day`-property",
          "privacy": "public",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 272,
              "column": 10
            },
            "end": {
              "line": 276,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "Node"
            }
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "currentSelectedDayNode",
          "type": "Node | null | undefined",
          "description": "Node of the last selected day\nto access: bind the attribute ('current-selected-day-node') and get its dataset `year`, `month` or `day`-property",
          "privacy": "public",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 282,
              "column": 10
            },
            "end": {
              "line": 286,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "Node"
            }
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "firstDayOfWeek",
          "type": "number | null | undefined",
          "description": "Defines the first day of the week to use. Defaults to `1` (`monday`)\ne.g. when `firstDayOfWeek` is `0` the first day of the week would be `sunday`",
          "privacy": "public",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 300,
              "column": 10
            },
            "end": {
              "line": 303,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "1",
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "native",
          "type": "boolean | null | undefined",
          "description": "Set to `true` to use the native input, if it available",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 173,
              "column": 10
            },
            "end": {
              "line": 176,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "nativeOnMobile",
          "type": "boolean | null | undefined",
          "description": "Set to `true` to use the native input automatically on mobile devices, if it available",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 181,
              "column": 10
            },
            "end": {
              "line": 184,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_nativeOnMobileChanged\"",
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "mobileUserAgentTestString",
          "type": "string | null | undefined",
          "description": "When `nativeOnMobile` is set to `true` this string is used to test the userAgent for a mobile device",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 189,
              "column": 10
            },
            "end": {
              "line": 193,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_nativeOnMobileChanged\"",
              "attributeType": "String"
            }
          },
          "defaultValue": "\"mM]obi|[tT]ablet|[aA]ndroid\"",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "opened",
          "type": "boolean | null | undefined",
          "description": "if `true` the picker is opened",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 198,
              "column": 10
            },
            "end": {
              "line": 203,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "horizontalAlign",
          "type": "string | null | undefined",
          "description": "The orientation against which to align the element horizontally\nrelative to the related input element. Possible values are \"left\", \"right\", \"center\", \"auto\". (comparable to `iron-fit-behavior` and its `no-overlap`-attribute)",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 209,
              "column": 10
            },
            "end": {
              "line": 213,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"auto\"",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "verticalAlign",
          "type": "string | null | undefined",
          "description": "The orientation against which to align the element vertically\nrelative to the related input element. Possible values are \"top\", \"bottom\", \"middle\", \"auto\". (comparable to `iron-fit-behavior` and its `no-overlap`-attribute)",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 219,
              "column": 10
            },
            "end": {
              "line": 223,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"auto\"",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "autoConfirm",
          "type": "boolean | null | undefined",
          "description": "Set to `true` to make the input auto-confirming",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 228,
              "column": 10
            },
            "end": {
              "line": 231,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_autoConfirmChanged\"",
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "noCancelOnEscKey",
          "type": "boolean | null | undefined",
          "description": "Set to `true` to disable canceling the overlay with the ESC key.",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 236,
              "column": 10
            },
            "end": {
              "line": 239,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "noTip",
          "type": "boolean | null | undefined",
          "description": "Set to `true` to disable the tip of the picker",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 252,
              "column": 10
            },
            "end": {
              "line": 255,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "confirmedValue",
          "type": "Object | null | undefined",
          "description": "The confirmed value. When `auto-confirm` is not set, the value will only change, when you confirm.",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 260,
              "column": 10
            },
            "end": {
              "line": 263,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "confirmedDatetime",
          "type": "string | null | undefined",
          "description": "The confirmed datetime. When `auto-confirm` is not set, the datetime will only change, when you confirm.",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 154,
              "column": 10
            },
            "end": {
              "line": 157,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "hideNowButton",
          "type": "boolean | null | undefined",
          "description": "Set to `true` to hide the `now`-button",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 162,
              "column": 10
            },
            "end": {
              "line": 164,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_hasNative",
          "type": "?",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 46,
              "column": 6
            },
            "end": {
              "line": 48,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        }
      ],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 283,
              "column": 6
            },
            "end": {
              "line": 287,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "fit",
          "description": "Positions and fits the overlay into the `fitInto` element.",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/overlay-picker-mixin.html",
            "start": {
              "line": 128,
              "column": 6
            },
            "end": {
              "line": 130,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "OverlayPickerMixin"
        },
        {
          "name": "open",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-picker.html",
            "start": {
              "line": 59,
              "column": 6
            },
            "end": {
              "line": 70,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerPattern"
        },
        {
          "name": "notifyResize",
          "description": "notify manually the overlay to resize",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/overlay-picker-mixin.html",
            "start": {
              "line": 140,
              "column": 6
            },
            "end": {
              "line": 142,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "OverlayPickerMixin"
        },
        {
          "name": "_attachDom",
          "description": "attach dom with `delegatesFocus: true` so that the element is also focussed while its's children are too, and to autofocus to first tabable",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 103,
              "column": 6
            },
            "end": {
              "line": 112,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom"
            }
          ],
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "validate",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 384,
              "column": 6
            },
            "end": {
              "line": 391,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_computeInvalid",
          "description": "defines whether the value is set",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 130,
              "column": 6
            },
            "end": {
              "line": 132,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "[Object]"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_validate",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 141,
              "column": 6
            },
            "end": {
              "line": 143,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "Object",
              "description": "value to validate"
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "true, if the value is valid"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_computeValueIsSet",
          "description": "defines whether the value is set",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 149,
              "column": 6
            },
            "end": {
              "line": 151,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "[Object]"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_isSet",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 159,
              "column": 6
            },
            "end": {
              "line": 161,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "Object",
              "description": "value to test"
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "true, if the value is set"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_valueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 474,
              "column": 6
            },
            "end": {
              "line": 483,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_defaultChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 516,
              "column": 6
            },
            "end": {
              "line": 521,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "def"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_createReflectPropertyToValueObserver",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 180,
              "column": 6
            },
            "end": {
              "line": 190,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "prop"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_reflectPropertyToValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 192,
              "column": 6
            },
            "end": {
              "line": 194,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_reflectValueToProperty",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 196,
              "column": 6
            },
            "end": {
              "line": 198,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_localeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 96,
              "column": 6
            },
            "end": {
              "line": 283,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "locale"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "_shouldPropertyChange",
          "description": "overwritten of polymer to handle -0",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 34,
              "column": 6
            },
            "end": {
              "line": 40,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property"
            },
            {
              "name": "value"
            },
            {
              "name": "old"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "now",
          "description": "Sets value to the actual date",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 304,
              "column": 6
            },
            "end": {
              "line": 320,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "setDate",
          "description": "sets date to all necessary properties",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 326,
              "column": 6
            },
            "end": {
              "line": 390,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date",
              "description": "[the date to set]"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "resetDate",
          "description": "resets the date (if `default` is set, it will be used for the new value)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 396,
              "column": 6
            },
            "end": {
              "line": 433,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "Event",
              "description": "[a causing event will not propagated]"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_defaultValueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 435,
              "column": 6
            },
            "end": {
              "line": 442,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "def"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computeDefaultValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 444,
              "column": 6
            },
            "end": {
              "line": 446,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "def"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computeDatetime",
          "description": "modify date components of a date-object. it needs to be applied or called on a date object",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 460,
              "column": 6
            },
            "end": {
              "line": 537,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "year",
              "type": "number"
            },
            {
              "name": "month",
              "type": "number"
            },
            {
              "name": "day",
              "type": "number"
            },
            {
              "name": "hour",
              "type": "number"
            },
            {
              "name": "minute",
              "type": "number"
            },
            {
              "name": "second",
              "type": "number"
            },
            {
              "name": "millisecond",
              "type": "number"
            }
          ],
          "return": {
            "type": "object",
            "desc": "the changed object and the new offset-minutes"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_dateTimeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 539,
              "column": 6
            },
            "end": {
              "line": 566,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "date"
            },
            {
              "name": "time"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_datetimeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 568,
              "column": 6
            },
            "end": {
              "line": 611,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "datetime"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_valueAsNumberChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 613,
              "column": 6
            },
            "end": {
              "line": 620,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_valueAsDateChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 622,
              "column": 6
            },
            "end": {
              "line": 633,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_fromDatetime",
          "description": "compute a date object",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 640,
              "column": 6
            },
            "end": {
              "line": 667,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "datetime"
            }
          ],
          "return": {
            "type": "Date",
            "desc": "date"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_clampChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 669,
              "column": 6
            },
            "end": {
              "line": 677,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "clamp"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_minChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 679,
              "column": 6
            },
            "end": {
              "line": 696,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "min"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_maxChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 698,
              "column": 6
            },
            "end": {
              "line": 715,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "max"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_minMaxValueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 717,
              "column": 6
            },
            "end": {
              "line": 721,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_checkThreshold",
          "description": "test date object against thresholds",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 728,
              "column": 6
            },
            "end": {
              "line": 739,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date"
            }
          ],
          "return": {
            "type": "Date",
            "desc": "ether the threshold when the date is exceeding or the date object itself"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_toDate",
          "description": "get date string from a date object",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 746,
              "column": 6
            },
            "end": {
              "line": 752,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date",
              "description": "the Date to serialize"
            }
          ],
          "return": {
            "type": "String",
            "desc": "date string"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_toTime",
          "description": "get UTC time string from a date object",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 759,
              "column": 6
            },
            "end": {
              "line": 764,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date",
              "description": "the Date to serialize"
            }
          ],
          "return": {
            "type": "String",
            "desc": "date string"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_toUTCDate",
          "description": "get UTC date string from a date object",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 771,
              "column": 6
            },
            "end": {
              "line": 777,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date",
              "description": "the Date to serialize"
            }
          ],
          "return": {
            "type": "String",
            "desc": "date string"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_toUTCTime",
          "description": "get UTC time string from a date object",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 784,
              "column": 6
            },
            "end": {
              "line": 789,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date",
              "description": "the Date to serialize"
            }
          ],
          "return": {
            "type": "String",
            "desc": "time string"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "__toDate",
          "description": "get date string from date components",
          "privacy": "private",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 798,
              "column": 6
            },
            "end": {
              "line": 800,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "year",
              "type": "Number"
            },
            {
              "name": "month",
              "type": "Number"
            },
            {
              "name": "day",
              "type": "Number"
            }
          ],
          "return": {
            "type": "String",
            "desc": "date string"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "__toTime",
          "description": "get time string from date components",
          "privacy": "private",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 810,
              "column": 6
            },
            "end": {
              "line": 812,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hour",
              "type": "Number"
            },
            {
              "name": "minute",
              "type": "Number"
            },
            {
              "name": "second",
              "type": "Number"
            },
            {
              "name": "millisecond",
              "type": "Number"
            }
          ],
          "return": {
            "type": "String",
            "desc": "time string"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_clampUTC",
          "description": "clamp UTC values",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 820,
              "column": 6
            },
            "end": {
              "line": 837,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date",
              "description": "the Date to clamp"
            },
            {
              "name": "clamp",
              "type": "String",
              "description": "the date component to clamp"
            }
          ],
          "return": {
            "type": "Date",
            "desc": "the clamped date"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_pad",
          "description": "pad a string with 0",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 845,
              "column": 6
            },
            "end": {
              "line": 851,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "n",
              "type": "Number",
              "description": "number to pad"
            },
            {
              "name": "padLength",
              "type": "Number",
              "description": "total length of strings"
            }
          ],
          "return": {
            "type": "String",
            "desc": "padded string"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_hour12Changed",
          "description": "`hour12` is the hour in hour12-format, that starts is minimal 1 and maximal 12, midnight is at 12am and noon is 12pm",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 856,
              "column": 6
            },
            "end": {
              "line": 860,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hour12"
            },
            {
              "name": "old"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_isAmChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 862,
              "column": 6
            },
            "end": {
              "line": 866,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "isAm"
            },
            {
              "name": "old"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_ifClamped",
          "description": "clamp to date component",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 871,
              "column": 6
            },
            "end": {
              "line": 876,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "clamp"
            },
            {
              "name": "comp"
            },
            {
              "name": "hidden"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_checkDefaultTimezone",
          "description": "set the default timezone if needed",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 882,
              "column": 6
            },
            "end": {
              "line": 895,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computeTimezoneShift",
          "description": "correct a timezone shift when date changes from winter to summertime (locally)",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 901,
              "column": 6
            },
            "end": {
              "line": 910,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_timezoneChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 912,
              "column": 6
            },
            "end": {
              "line": 932,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "timezone"
            },
            {
              "name": "oldValue"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_offsetMinutesChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 934,
              "column": 6
            },
            "end": {
              "line": 942,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "offsetMinutes"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_timeZoneHoursMinutesChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 944,
              "column": 6
            },
            "end": {
              "line": 963,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hour"
            },
            {
              "name": "minute"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computeTimezone",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 965,
              "column": 6
            },
            "end": {
              "line": 987,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "offsetMinutes"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computeTimezoneOffset",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 989,
              "column": 6
            },
            "end": {
              "line": 1019,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "timezone"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computeMaxDayOfMonth",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 1021,
              "column": 6
            },
            "end": {
              "line": 1029,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "year"
            },
            {
              "name": "month"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computePartsStep",
          "description": "compute the steps for the related inputs. The day-input is the highest modified input allthough if the step is higher than a day in seconds it might also change month- or year-inputs.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 104,
              "column": 6
            },
            "end": {
              "line": 185,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "step"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeFormMixin"
        },
        {
          "name": "_computePartsDisabled",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 187,
              "column": 6
            },
            "end": {
              "line": 205,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "change"
            },
            {
              "name": "disabled"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeFormMixin"
        },
        {
          "name": "_computeOr",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 318,
              "column": 6
            },
            "end": {
              "line": 320,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "a"
            },
            {
              "name": "b"
            }
          ],
          "inheritedFrom": "DatetimeInputMixin"
        },
        {
          "name": "_computePartOrder",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 322,
              "column": 6
            },
            "end": {
              "line": 324,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "first"
            }
          ],
          "inheritedFrom": "DatetimeInputMixin"
        },
        {
          "name": "_computeResetButtonIsInvisible",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 326,
              "column": 6
            },
            "end": {
              "line": 328,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "valueIsSet"
            },
            {
              "name": "defaultValue"
            },
            {
              "name": "valueAsNumber"
            }
          ],
          "inheritedFrom": "DatetimeInputMixin"
        },
        {
          "name": "_orderDateParts",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/date-input.html",
            "start": {
              "line": 62,
              "column": 6
            },
            "end": {
              "line": 117,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "order"
            },
            {
              "name": "clamp"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DateInputPattern"
        },
        {
          "name": "_getDefaultForProp",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 182,
              "column": 6
            },
            "end": {
              "line": 184,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "prop"
            }
          ],
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 289,
              "column": 6
            },
            "end": {
              "line": 293,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_addSwitchListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 89,
              "column": 6
            },
            "end": {
              "line": 104,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "_removeSwitchListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 106,
              "column": 6
            },
            "end": {
              "line": 116,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "_checkKeycodeSwitch",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 118,
              "column": 6
            },
            "end": {
              "line": 126,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "__getEventTarget",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 128,
              "column": 6
            },
            "end": {
              "line": 142,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            },
            {
              "name": "classSelector"
            }
          ],
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "__increm",
          "description": "increment property by being called by an Event on an `switch`-Node",
          "privacy": "private",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 149,
              "column": 6
            },
            "end": {
              "line": 176,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "Event",
              "description": "Event it was called on"
            },
            {
              "name": "once",
              "type": "Boolean",
              "description": "if true, it doesn't setup an intervall to continue incrementing (e.g. keyPressEvents are fired itself repeatedly while the key is pressed)"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "__incremProp",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 178,
              "column": 6
            },
            "end": {
              "line": 180,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "prop"
            },
            {
              "name": "step"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "_stopActiveIncremJob",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 186,
              "column": 6
            },
            "end": {
              "line": 199,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "_dwellTimeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 201,
              "column": 6
            },
            "end": {
              "line": 207,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dwellTime"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "_dwellDelayChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 209,
              "column": 6
            },
            "end": {
              "line": 215,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dwellDelay"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "_onMouseMoveDay",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 320,
              "column": 6
            },
            "end": {
              "line": 333,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_onClickDay",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 335,
              "column": 6
            },
            "end": {
              "line": 361,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "confirm",
          "description": "confirms the input",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 443,
              "column": 6
            },
            "end": {
              "line": 452,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "[type]",
              "description": "Event"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_computeIncremPropTop",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 374,
              "column": 6
            },
            "end": {
              "line": 379,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hideMonth"
            }
          ],
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_setWeekDayCaptions",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 381,
              "column": 6
            },
            "end": {
              "line": 396,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "locale"
            },
            {
              "name": "firstDayOfWeek"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_setMonthSelectorOptions",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 398,
              "column": 6
            },
            "end": {
              "line": 407,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "locale"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "renderCalendar",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-picker.html",
            "start": {
              "line": 52,
              "column": 6
            },
            "end": {
              "line": 57,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "year"
            },
            {
              "name": "month"
            },
            {
              "name": "day"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerPattern"
        },
        {
          "name": "_clampDay",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 541,
              "column": 6
            },
            "end": {
              "line": 547,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d"
            }
          ],
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_dayDiff",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 549,
              "column": 6
            },
            "end": {
              "line": 551,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "end"
            },
            {
              "name": "start"
            }
          ],
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_checkKeycodeForDates",
          "description": "key press event handler on days area",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 567,
              "column": 6
            },
            "end": {
              "line": 628,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "[type]",
              "description": "Event"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_addEventListenerToNode",
          "description": "Add the event listener to the node if it is a gestures event.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../polymer/lib/mixins/gesture-event-listeners.html",
            "start": {
              "line": 55,
              "column": 6
            },
            "end": {
              "line": 59,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node",
              "type": "!Node",
              "description": "Node to add event listener to"
            },
            {
              "name": "eventName",
              "type": "string",
              "description": "Name of event"
            },
            {
              "name": "handler",
              "type": "function (!Event): void",
              "description": "Listener function to add"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.GestureEventListeners"
        },
        {
          "name": "_removeEventListenerFromNode",
          "description": "Remove the event listener to the node if it is a gestures event.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../polymer/lib/mixins/gesture-event-listeners.html",
            "start": {
              "line": 69,
              "column": 6
            },
            "end": {
              "line": 73,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node",
              "type": "!Node",
              "description": "Node to remove event listener from"
            },
            {
              "name": "eventName",
              "type": "string",
              "description": "Name of event"
            },
            {
              "name": "handler",
              "type": "function (!Event): void",
              "description": "Listener function to remove"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.GestureEventListeners"
        },
        {
          "name": "_addPickerTransitionEndListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 295,
              "column": 6
            },
            "end": {
              "line": 302,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_removePickerTransitionEndListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 304,
              "column": 6
            },
            "end": {
              "line": 306,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_onPickerTransitionEnd",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 308,
              "column": 6
            },
            "end": {
              "line": 313,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_addCancelOnClickListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 315,
              "column": 6
            },
            "end": {
              "line": 322,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_removeCancelOnClickListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 324,
              "column": 6
            },
            "end": {
              "line": 327,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_stopPropagation",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 329,
              "column": 6
            },
            "end": {
              "line": 332,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_addKeyListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 334,
              "column": 6
            },
            "end": {
              "line": 337,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_removeKeyListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 339,
              "column": 6
            },
            "end": {
              "line": 342,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_nativeOnMobileChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 344,
              "column": 6
            },
            "end": {
              "line": 357,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_checkKeycode",
          "description": "key press event handler",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 363,
              "column": 6
            },
            "end": {
              "line": 382,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "[type]",
              "description": "Event"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "close",
          "description": "close the picker",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 415,
              "column": 6
            },
            "end": {
              "line": 423,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "[type]",
              "description": "Event"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "toggle",
          "description": "toggle the picker",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 429,
              "column": 6
            },
            "end": {
              "line": 437,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "[type]",
              "description": "Event"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "cancel",
          "description": "cancels the input",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 458,
              "column": 6
            },
            "end": {
              "line": 472,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "[type]",
              "description": "Event"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_confirmedValueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 295,
              "column": 6
            },
            "end": {
              "line": 303,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "confirmedValue"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_reset",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 493,
              "column": 6
            },
            "end": {
              "line": 498,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_setConfirmedValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 305,
              "column": 6
            },
            "end": {
              "line": 312,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_resetValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 506,
              "column": 6
            },
            "end": {
              "line": 510,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_autoConfirmChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 512,
              "column": 6
            },
            "end": {
              "line": 514,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "autoConfirm"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_computeAnd",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 181,
              "column": 6
            },
            "end": {
              "line": 183,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "a"
            },
            {
              "name": "b"
            }
          ],
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_computeNativeStep",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 185,
              "column": 6
            },
            "end": {
              "line": 204,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "step"
            },
            {
              "name": "clamp"
            }
          ],
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_computeNativeValueAsNumber",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 206,
              "column": 6
            },
            "end": {
              "line": 227,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "native"
            },
            {
              "name": "valueAsNumber"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_reflectNativeValueAsNumber",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 229,
              "column": 6
            },
            "end": {
              "line": 253,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "native"
            },
            {
              "name": "nativeValueAsNumber"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_setDate",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 255,
              "column": 6
            },
            "end": {
              "line": 262,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_confirmedDatetimeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 264,
              "column": 6
            },
            "end": {
              "line": 276,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "confirmedDatetime"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_resetDate",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 314,
              "column": 6
            },
            "end": {
              "line": 317,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_resetConfirmedValues",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 319,
              "column": 6
            },
            "end": {
              "line": 327,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_resetValues",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 329,
              "column": 6
            },
            "end": {
              "line": 336,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_switchAm",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "time-element.html",
            "start": {
              "line": 187,
              "column": 6
            },
            "end": {
              "line": 190,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "TimeElementPattern"
        },
        {
          "name": "_computeMultipleClamp",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "time-element.html",
            "start": {
              "line": 183,
              "column": 6
            },
            "end": {
              "line": 185,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "clamp"
            },
            {
              "name": "prop1"
            },
            {
              "name": "prop2"
            }
          ],
          "inheritedFrom": "TimeElementPattern"
        },
        {
          "name": "_confirmedDateTimeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "time-picker.html",
            "start": {
              "line": 39,
              "column": 6
            },
            "end": {
              "line": 54,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "confirmedDate"
            },
            {
              "name": "confirmedTime"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "TimePickerPattern"
        },
        {
          "name": "_setConfirmedValues",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker.html",
            "start": {
              "line": 72,
              "column": 6
            },
            "end": {
              "line": 83,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerPattern"
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/overlay-elements.html",
          "description": "overlay demo"
        },
        {
          "url": "demo/music-album.html",
          "description": "music album demo"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 40,
          "column": 4
        },
        "end": {
          "line": 49,
          "column": 5
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "OverlayDatetimePicker",
      "attributes": [
        {
          "name": "always-on-top",
          "description": "Set to true to keep overlay always on top.",
          "sourceRange": {
            "file": "../input-picker-pattern/overlay-picker-mixin.html",
            "start": {
              "line": 21,
              "column": 10
            },
            "end": {
              "line": 23,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "OverlayPickerMixin"
        },
        {
          "name": "no-overlap",
          "description": "Will position the element around the positionTarget without overlapping it.",
          "sourceRange": {
            "file": "../input-picker-pattern/overlay-picker-mixin.html",
            "start": {
              "line": 27,
              "column": 10
            },
            "end": {
              "line": 30,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "OverlayPickerMixin"
        },
        {
          "name": "with-backdrop",
          "description": "Set to true to display a backdrop behind the overlay. It traps the focus\nwithin the light DOM of the overlay.",
          "sourceRange": {
            "file": "../input-picker-pattern/overlay-picker-mixin.html",
            "start": {
              "line": 35,
              "column": 10
            },
            "end": {
              "line": 38,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "OverlayPickerMixin"
        },
        {
          "name": "no-cancel-on-outside-click",
          "description": "Set to `true` to disable canceling the dropdown by clicking outside the picker.",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 244,
              "column": 10
            },
            "end": {
              "line": 247,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "dynamic-align",
          "description": "If true, it will use `horizontalAlign` and `verticalAlign` values as preferred alignment\nand if there's not enough space, it will pick the values which minimize the cropping.",
          "sourceRange": {
            "file": "../input-picker-pattern/overlay-picker-mixin.html",
            "start": {
              "line": 51,
              "column": 10
            },
            "end": {
              "line": 54,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "OverlayPickerMixin"
        },
        {
          "name": "auto-fit-on-attach",
          "description": "Set to true to auto-fit on attach.",
          "sourceRange": {
            "file": "../input-picker-pattern/overlay-picker-mixin.html",
            "start": {
              "line": 59,
              "column": 10
            },
            "end": {
              "line": 62,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "OverlayPickerMixin"
        },
        {
          "name": "fit-into",
          "description": "The element to fit the overlay into. By default it is the window.",
          "sourceRange": {
            "file": "../input-picker-pattern/overlay-picker-mixin.html",
            "start": {
              "line": 67,
              "column": 10
            },
            "end": {
              "line": 69,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "OverlayPickerMixin"
        },
        {
          "name": "position-target",
          "description": "The element that should be used to position the overlay. If not set, it will\ndefault to the polyfill node.",
          "sourceRange": {
            "file": "../input-picker-pattern/overlay-picker-mixin.html",
            "start": {
              "line": 75,
              "column": 10
            },
            "end": {
              "line": 77,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Element | null | undefined",
          "inheritedFrom": "OverlayPickerMixin"
        },
        {
          "name": "name",
          "description": "name of the input",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 16,
              "column": 10
            },
            "end": {
              "line": 18,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "title",
          "description": "description for the element and can be used as a hint for invalid values",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 23,
              "column": 10
            },
            "end": {
              "line": 26,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "disabled",
          "description": "disables the input",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 31,
              "column": 10
            },
            "end": {
              "line": 35,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "required",
          "description": "required attribute",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 40,
              "column": 10
            },
            "end": {
              "line": 44,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "property-for-value",
          "description": "defines the property that should be used for the value",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 49,
              "column": 10
            },
            "end": {
              "line": 52,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "invalid",
          "description": "required attribute",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 57,
              "column": 10
            },
            "end": {
              "line": 63,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "default",
          "description": "default value of the value, when it does not validate",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 77,
              "column": 10
            },
            "end": {
              "line": 80,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "value",
          "description": "value of the input",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 85,
              "column": 10
            },
            "end": {
              "line": 88,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "locale",
          "description": "The current locale",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 19,
              "column": 10
            },
            "end": {
              "line": 23,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "decimal-separator",
          "description": "locale separator for local decimal values",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 29,
              "column": 10
            },
            "end": {
              "line": 33,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "date-separator",
          "description": "Separator for local date values (date-string is still in ISO-Format)",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 39,
              "column": 10
            },
            "end": {
              "line": 43,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "time-separator",
          "description": "Separator for local time values (time-string is still in ISO-Format)",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 49,
              "column": 10
            },
            "end": {
              "line": 53,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "am-string",
          "description": "locale representation of 'AM'",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 58,
              "column": 10
            },
            "end": {
              "line": 62,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "pm-string",
          "description": "locale representation of 'PM'",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 67,
              "column": 10
            },
            "end": {
              "line": 71,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "date-order",
          "description": "order of date-parts",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 76,
              "column": 10
            },
            "end": {
              "line": 86,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "year",
          "description": "The year of the selected date",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 48,
              "column": 10
            },
            "end": {
              "line": 51,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "month",
          "description": "The month of the selected date (starts with 1)",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 56,
              "column": 10
            },
            "end": {
              "line": 59,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "day",
          "description": "The day of the selected date",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 64,
              "column": 10
            },
            "end": {
              "line": 67,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour",
          "description": "The hour of the selected time",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 72,
              "column": 10
            },
            "end": {
              "line": 75,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour12",
          "description": "hour in 12-hour-format",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 81,
              "column": 10
            },
            "end": {
              "line": 85,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "is-am",
          "description": "true, when A.M. (when `hour` < 12)",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 91,
              "column": 10
            },
            "end": {
              "line": 95,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "minute",
          "description": "The minute of the selected time",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 100,
              "column": 10
            },
            "end": {
              "line": 103,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "second",
          "description": "The second of the selected time",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 108,
              "column": 10
            },
            "end": {
              "line": 111,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "millisecond",
          "description": "The millisecond of the selected time",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 116,
              "column": 10
            },
            "end": {
              "line": 119,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "datetime",
          "description": "the selected date and time (format: iso8601)",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 124,
              "column": 10
            },
            "end": {
              "line": 127,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "date",
          "description": "the selected date (format: iso8601)",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 132,
              "column": 10
            },
            "end": {
              "line": 135,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "time",
          "description": "the selected time (format: iso8601)",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 140,
              "column": 10
            },
            "end": {
              "line": 143,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "value-as-date",
          "description": "The date-object of the selected date",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 148,
              "column": 10
            },
            "end": {
              "line": 152,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Date | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "value-as-number",
          "description": "The value of the selected date",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 157,
              "column": 10
            },
            "end": {
              "line": 161,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "min",
          "description": "The minimal date, could be a number, a date-object or an iso-string in time, date or datetime-notation",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 181,
              "column": 10
            },
            "end": {
              "line": 185,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "max",
          "description": "The maximal date, could be a number, a date-object or an iso-string in time, date or datetime-notation",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 197,
              "column": 10
            },
            "end": {
              "line": 201,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour12-format",
          "description": "when true, 12-hour time format, else 24-hour",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 214,
              "column": 10
            },
            "end": {
              "line": 218,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "clamp",
          "description": "Clamp datetime to a property\npossible values: 'month', 'day', 'hour', 'minute', 'second', 'millisecond' or ''",
          "sourceRange": {
            "file": "datetime-picker.html",
            "start": {
              "line": 44,
              "column": 10
            },
            "end": {
              "line": 48,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "DatetimePickerPattern"
        },
        {
          "name": "timezone",
          "description": "The timezone offset in '±hh:mm' format",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 233,
              "column": 10
            },
            "end": {
              "line": 237,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "offset-minutes",
          "description": "The offset minutes of the set timezone",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 242,
              "column": 10
            },
            "end": {
              "line": 246,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "step",
          "description": "If set the step defines the step a date should be incremented (in seconds). The input for the most inferior standing that would create an integer step is used to increment the value.\nFor example, if the **step** is:\n + **0.05**: the millisecond-input will increment the value by 50 (50 milliseconds), the other inputs behaive as expected\n + **1.05**: the millisecond-input will increment the value by 1050 (1 second and 50 millisecond), the other inputs behaive as expected\n + **2**: the millisecond-input will be disabled, the second-input will increment the value by 2000 (2 seconds), the other inputs behaive as expected\n + **180**: the millisecond-input and the second-input will be disabled, the minute-input will increment the value by 180000 (3 minutes), the other inputs behaive as expected\nIf `step=\"0\"` all inputs will be disabled, else if the step is below _0.001_ the step will be set to **0.001**. The most supirior input that will become the given step is the day-input.",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 33,
              "column": 10
            },
            "end": {
              "line": 36,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeFormMixin"
        },
        {
          "name": "hide-reset-button",
          "description": "if true, the reset button is hidden",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 298,
              "column": 10
            },
            "end": {
              "line": 301,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "DatetimeInputMixin"
        },
        {
          "name": "with-timezone",
          "description": "if true, timezone inputs are shown",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 306,
              "column": 10
            },
            "end": {
              "line": 309,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "DatetimeInputMixin"
        },
        {
          "name": "dwell-time",
          "description": "dwell time of incrementing inputs by the buttons in milliseconds. It is minimal 15 milliseconds.",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 33,
              "column": 10
            },
            "end": {
              "line": 37,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "dwell-delay",
          "description": "delay when incrementing inputs by the buttons in milliseconds. It is minimal 15 milliseconds.",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 43,
              "column": 10
            },
            "end": {
              "line": 47,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "current-hovered-day-node",
          "description": "Current hovered day node\nto access: bind the attribute ('current-hovered-day-node') and get its dataset `year`, `month` or `day`-property",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 262,
              "column": 10
            },
            "end": {
              "line": 266,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Node | null | undefined",
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "current-active-day-node",
          "description": "Node of the last clicked day-field (by clicking or keypress)\nto access: bind the attribute ('current-active-day-node') and get its dataset `year`, `month` or `day`-property",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 272,
              "column": 10
            },
            "end": {
              "line": 276,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Node | null | undefined",
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "current-selected-day-node",
          "description": "Node of the last selected day\nto access: bind the attribute ('current-selected-day-node') and get its dataset `year`, `month` or `day`-property",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 282,
              "column": 10
            },
            "end": {
              "line": 286,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Node | null | undefined",
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "first-day-of-week",
          "description": "Defines the first day of the week to use. Defaults to `1` (`monday`)\ne.g. when `firstDayOfWeek` is `0` the first day of the week would be `sunday`",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 300,
              "column": 10
            },
            "end": {
              "line": 303,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "native",
          "description": "Set to `true` to use the native input, if it available",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 173,
              "column": 10
            },
            "end": {
              "line": 176,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "native-on-mobile",
          "description": "Set to `true` to use the native input automatically on mobile devices, if it available",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 181,
              "column": 10
            },
            "end": {
              "line": 184,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "mobile-user-agent-test-string",
          "description": "When `nativeOnMobile` is set to `true` this string is used to test the userAgent for a mobile device",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 189,
              "column": 10
            },
            "end": {
              "line": 193,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "opened",
          "description": "if `true` the picker is opened",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 198,
              "column": 10
            },
            "end": {
              "line": 203,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "horizontal-align",
          "description": "The orientation against which to align the element horizontally\nrelative to the related input element. Possible values are \"left\", \"right\", \"center\", \"auto\". (comparable to `iron-fit-behavior` and its `no-overlap`-attribute)",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 209,
              "column": 10
            },
            "end": {
              "line": 213,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "vertical-align",
          "description": "The orientation against which to align the element vertically\nrelative to the related input element. Possible values are \"top\", \"bottom\", \"middle\", \"auto\". (comparable to `iron-fit-behavior` and its `no-overlap`-attribute)",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 219,
              "column": 10
            },
            "end": {
              "line": 223,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "auto-confirm",
          "description": "Set to `true` to make the input auto-confirming",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 228,
              "column": 10
            },
            "end": {
              "line": 231,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "no-cancel-on-esc-key",
          "description": "Set to `true` to disable canceling the overlay with the ESC key.",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 236,
              "column": 10
            },
            "end": {
              "line": 239,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "no-tip",
          "description": "Set to `true` to disable the tip of the picker",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 252,
              "column": 10
            },
            "end": {
              "line": 255,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "confirmed-value",
          "description": "The confirmed value. When `auto-confirm` is not set, the value will only change, when you confirm.",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 260,
              "column": 10
            },
            "end": {
              "line": 263,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "confirmed-datetime",
          "description": "The confirmed datetime. When `auto-confirm` is not set, the datetime will only change, when you confirm.",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 154,
              "column": 10
            },
            "end": {
              "line": 157,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "hide-now-button",
          "description": "Set to `true` to hide the `now`-button",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 162,
              "column": 10
            },
            "end": {
              "line": 164,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "DatetimePickerMixin"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "input-picker-closed",
          "description": "input-picker-closed\nFired after a picker has been closed.",
          "metadata": {},
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "type": "CustomEvent",
          "name": "input-picker-opened",
          "description": "input-picker-opened\nFired when a picker has been opened.",
          "metadata": {},
          "inheritedFrom": "InputPickerPattern"
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "overlay-datetime-picker",
      "mixins": [
        "OverlayPickerMixin",
        "DatetimePickerPattern"
      ]
    },
    {
      "description": "`<overlay-date-picker>` extends `date-picker` in an overlay.\n\n  ```html\n  <overlay-date-picker value=\"{{value}}\" ></overlay-date-picker>\n  ```\n\n A use case could be for example, if you want on mobile devices use the `native picker` and on desktop devices the polyfill.\n\n ```html\n   <overlay-date-picker native-on-mobile></overlay-date-picker>\n ```\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--calendar-element`               | Mixin applied to the calendar                  | {}\n`--calendar-cell`                  | Mixin applied to the date cells                | {}\n`--calendar-cell-hovered`          | Mixin applied to hovered date cells            | {}\n`--calendar-cell-size`             | width of a date cell                           | 3em\n`--calendar-cell-border-radius`    | border-radius of a date cell                   | 0.25em\n`--calendar-cell-font-size`        | font-size of a date cell                       | 0.75em\n\n Have a look at [input-picker-pattern#input-picker-shared-style](https://github.com/fooloomanzoo/input-picker-pattern#input-picker-shared-style) and [input-picker-pattern#input-shared-style](https://github.com/fooloomanzoo/input-picker-pattern#input-shared-style) to see how to style the element.",
      "summary": "",
      "path": "overlay-date-picker.html",
      "properties": [
        {
          "name": "alwaysOnTop",
          "type": "boolean | null | undefined",
          "description": "Set to true to keep overlay always on top.",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/overlay-picker-mixin.html",
            "start": {
              "line": 21,
              "column": 10
            },
            "end": {
              "line": 23,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "OverlayPickerMixin"
        },
        {
          "name": "noOverlap",
          "type": "boolean | null | undefined",
          "description": "Will position the element around the positionTarget without overlapping it.",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/overlay-picker-mixin.html",
            "start": {
              "line": 27,
              "column": 10
            },
            "end": {
              "line": 30,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "OverlayPickerMixin"
        },
        {
          "name": "withBackdrop",
          "type": "boolean | null | undefined",
          "description": "Set to true to display a backdrop behind the overlay. It traps the focus\nwithin the light DOM of the overlay.",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/overlay-picker-mixin.html",
            "start": {
              "line": 35,
              "column": 10
            },
            "end": {
              "line": 38,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "OverlayPickerMixin"
        },
        {
          "name": "noCancelOnOutsideClick",
          "type": "boolean | null | undefined",
          "description": "Set to `true` to disable canceling the dropdown by clicking outside the picker.",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 244,
              "column": 10
            },
            "end": {
              "line": 247,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "dynamicAlign",
          "type": "boolean | null | undefined",
          "description": "If true, it will use `horizontalAlign` and `verticalAlign` values as preferred alignment\nand if there's not enough space, it will pick the values which minimize the cropping.",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/overlay-picker-mixin.html",
            "start": {
              "line": 51,
              "column": 10
            },
            "end": {
              "line": 54,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "OverlayPickerMixin"
        },
        {
          "name": "autoFitOnAttach",
          "type": "boolean | null | undefined",
          "description": "Set to true to auto-fit on attach.",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/overlay-picker-mixin.html",
            "start": {
              "line": 59,
              "column": 10
            },
            "end": {
              "line": 62,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "OverlayPickerMixin"
        },
        {
          "name": "fitInto",
          "type": "Object | null | undefined",
          "description": "The element to fit the overlay into. By default it is the window.",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/overlay-picker-mixin.html",
            "start": {
              "line": 67,
              "column": 10
            },
            "end": {
              "line": 69,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "OverlayPickerMixin"
        },
        {
          "name": "positionTarget",
          "type": "Element | null | undefined",
          "description": "The element that should be used to position the overlay. If not set, it will\ndefault to the polyfill node.",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/overlay-picker-mixin.html",
            "start": {
              "line": 75,
              "column": 10
            },
            "end": {
              "line": 77,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Element"
            }
          },
          "inheritedFrom": "OverlayPickerMixin"
        },
        {
          "name": "_sizingTarget",
          "type": "Element | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/overlay-picker-mixin.html",
            "start": {
              "line": 79,
              "column": 10
            },
            "end": {
              "line": 82,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Element"
            }
          },
          "inheritedFrom": "OverlayPickerMixin"
        },
        {
          "name": "name",
          "type": "string | null | undefined",
          "description": "name of the input",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 16,
              "column": 10
            },
            "end": {
              "line": 18,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "title",
          "type": "string | null | undefined",
          "description": "description for the element and can be used as a hint for invalid values",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 23,
              "column": 10
            },
            "end": {
              "line": 26,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "disabled",
          "type": "boolean | null | undefined",
          "description": "disables the input",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 31,
              "column": 10
            },
            "end": {
              "line": 35,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "required",
          "type": "boolean | null | undefined",
          "description": "required attribute",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 40,
              "column": 10
            },
            "end": {
              "line": 44,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "propertyForValue",
          "type": "string | null | undefined",
          "description": "defines the property that should be used for the value",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 49,
              "column": 10
            },
            "end": {
              "line": 52,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_createReflectPropertyToValueObserver\"",
              "attributeType": "String"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "invalid",
          "type": "boolean | null | undefined",
          "description": "required attribute",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 57,
              "column": 10
            },
            "end": {
              "line": 63,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_valueIsSet",
          "type": "boolean | null | undefined",
          "description": "is true when the value is not undefined",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 68,
              "column": 10
            },
            "end": {
              "line": 72,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "default",
          "type": "Object | null | undefined",
          "description": "default value of the value, when it does not validate",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 77,
              "column": 10
            },
            "end": {
              "line": 80,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_defaultChanged\"",
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "value",
          "type": "Object | null | undefined",
          "description": "value of the input",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 85,
              "column": 10
            },
            "end": {
              "line": 88,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "locale",
          "type": "string | null | undefined",
          "description": "The current locale",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 19,
              "column": 10
            },
            "end": {
              "line": 23,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "decimalSeparator",
          "type": "string",
          "description": "locale separator for local decimal values",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 29,
              "column": 10
            },
            "end": {
              "line": 33,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "dateSeparator",
          "type": "string",
          "description": "Separator for local date values (date-string is still in ISO-Format)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 39,
              "column": 10
            },
            "end": {
              "line": 43,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "timeSeparator",
          "type": "string",
          "description": "Separator for local time values (time-string is still in ISO-Format)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 49,
              "column": 10
            },
            "end": {
              "line": 53,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "amString",
          "type": "string | null | undefined",
          "description": "locale representation of 'AM'",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 58,
              "column": 10
            },
            "end": {
              "line": 62,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "pmString",
          "type": "string | null | undefined",
          "description": "locale representation of 'PM'",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 67,
              "column": 10
            },
            "end": {
              "line": 71,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "dateOrder",
          "type": "Object | null | undefined",
          "description": "order of date-parts",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 76,
              "column": 10
            },
            "end": {
              "line": 86,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Object"
            }
          },
          "defaultValue": "{\"parts\":[],\"timeFirst\":false,\"dateFirst\":true}",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "year",
          "type": "number | null | undefined",
          "description": "The year of the selected date",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 48,
              "column": 10
            },
            "end": {
              "line": 51,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "month",
          "type": "number | null | undefined",
          "description": "The month of the selected date (starts with 1)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 56,
              "column": 10
            },
            "end": {
              "line": 59,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "day",
          "type": "number | null | undefined",
          "description": "The day of the selected date",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 64,
              "column": 10
            },
            "end": {
              "line": 67,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour",
          "type": "number | null | undefined",
          "description": "The hour of the selected time",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 72,
              "column": 10
            },
            "end": {
              "line": 75,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour12",
          "type": "number",
          "description": "hour in 12-hour-format",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 81,
              "column": 10
            },
            "end": {
              "line": 85,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_hour12Changed\"",
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "isAm",
          "type": "boolean",
          "description": "true, when A.M. (when `hour` < 12)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 91,
              "column": 10
            },
            "end": {
              "line": 95,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_isAmChanged\"",
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "minute",
          "type": "number | null | undefined",
          "description": "The minute of the selected time",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 100,
              "column": 10
            },
            "end": {
              "line": 103,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "second",
          "type": "number | null | undefined",
          "description": "The second of the selected time",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 108,
              "column": 10
            },
            "end": {
              "line": 111,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "millisecond",
          "type": "number | null | undefined",
          "description": "The millisecond of the selected time",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 116,
              "column": 10
            },
            "end": {
              "line": 119,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "datetime",
          "type": "string | null | undefined",
          "description": "the selected date and time (format: iso8601)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 124,
              "column": 10
            },
            "end": {
              "line": 127,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "date",
          "type": "string | null | undefined",
          "description": "the selected date (format: iso8601)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 132,
              "column": 10
            },
            "end": {
              "line": 135,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "time",
          "type": "string | null | undefined",
          "description": "the selected time (format: iso8601)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 140,
              "column": 10
            },
            "end": {
              "line": 143,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "valueAsDate",
          "type": "Date | null | undefined",
          "description": "The date-object of the selected date",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 148,
              "column": 10
            },
            "end": {
              "line": 152,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_valueAsDateChanged\"",
              "attributeType": "Date"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "valueAsNumber",
          "type": "number | null | undefined",
          "description": "The value of the selected date",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 157,
              "column": 10
            },
            "end": {
              "line": 161,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_valueAsNumberChanged\"",
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_defaultValue",
          "type": "number | null | undefined",
          "description": "value of the default date",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 173,
              "column": 10
            },
            "end": {
              "line": 176,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "min",
          "type": "Object | null | undefined",
          "description": "The minimal date, could be a number, a date-object or an iso-string in time, date or datetime-notation",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 181,
              "column": 10
            },
            "end": {
              "line": 185,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_minChanged\"",
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_minValue",
          "type": "number | null | undefined",
          "description": "value if the minimum date",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 190,
              "column": 10
            },
            "end": {
              "line": 192,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "max",
          "type": "Object | null | undefined",
          "description": "The maximal date, could be a number, a date-object or an iso-string in time, date or datetime-notation",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 197,
              "column": 10
            },
            "end": {
              "line": 201,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_maxChanged\"",
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_maxValue",
          "type": "number | null | undefined",
          "description": "value if the maximum date",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 206,
              "column": 10
            },
            "end": {
              "line": 208,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour12Format",
          "type": "boolean",
          "description": "when true, 12-hour time format, else 24-hour",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 214,
              "column": 10
            },
            "end": {
              "line": 218,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "clamp",
          "type": "string | null | undefined",
          "description": "Clamp datetime to a property\npossible values:'month', 'day', 'hour', 'minute', 'second', 'millisecond'",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 224,
              "column": 10
            },
            "end": {
              "line": 228,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_clampChanged\"",
              "attributeType": "String"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "timezone",
          "type": "string | null | undefined",
          "description": "The timezone offset in '±hh:mm' format",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 233,
              "column": 10
            },
            "end": {
              "line": 237,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_timezoneChanged\"",
              "attributeType": "String"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "offsetMinutes",
          "type": "number | null | undefined",
          "description": "The offset minutes of the set timezone",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 242,
              "column": 10
            },
            "end": {
              "line": 246,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_offsetMinutesChanged\"",
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_timeZoneHours",
          "type": "number | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 248,
              "column": 10
            },
            "end": {
              "line": 250,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_timeZoneMinutes",
          "type": "number | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 252,
              "column": 10
            },
            "end": {
              "line": 254,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_recentLocalTimezoneOffset",
          "type": "number | null | undefined",
          "description": "The offset minute of the current datetime",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 259,
              "column": 10
            },
            "end": {
              "line": 261,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_timeOnly",
          "type": "boolean | null | undefined",
          "description": "if true perspective starts at 0 (1970-01-01)",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 266,
              "column": 10
            },
            "end": {
              "line": 269,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_maxDayOfMonth",
          "type": "number",
          "description": "exclusive max day of month",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 275,
              "column": 10
            },
            "end": {
              "line": 278,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_dateLocked",
          "type": "boolean | null | undefined",
          "description": "lock to date and ignore time",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 283,
              "column": 10
            },
            "end": {
              "line": 286,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "step",
          "type": "number | null | undefined",
          "description": "If set the step defines the step a date should be incremented (in seconds). The input for the most inferior standing that would create an integer step is used to increment the value.\nFor example, if the **step** is:\n + **0.05**: the millisecond-input will increment the value by 50 (50 milliseconds), the other inputs behaive as expected\n + **1.05**: the millisecond-input will increment the value by 1050 (1 second and 50 millisecond), the other inputs behaive as expected\n + **2**: the millisecond-input will be disabled, the second-input will increment the value by 2000 (2 seconds), the other inputs behaive as expected\n + **180**: the millisecond-input and the second-input will be disabled, the minute-input will increment the value by 180000 (3 minutes), the other inputs behaive as expected\nIf `step=\"0\"` all inputs will be disabled, else if the step is below _0.001_ the step will be set to **0.001**. The most supirior input that will become the given step is the day-input.",
          "privacy": "public",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 33,
              "column": 10
            },
            "end": {
              "line": 36,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeFormMixin"
        },
        {
          "name": "_partsDisabled",
          "type": "Object | null | undefined",
          "description": "date-parts that are disabled",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 41,
              "column": 10
            },
            "end": {
              "line": 47,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Object"
            }
          },
          "defaultValue": "{}",
          "inheritedFrom": "DatetimeFormMixin"
        },
        {
          "name": "_partsStep",
          "type": "Object | null | undefined",
          "description": "the computed steps for the date-parts",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 52,
              "column": 10
            },
            "end": {
              "line": 65,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "Object"
            }
          },
          "defaultValue": "{\"day\":1,\"hour\":1,\"minute\":1,\"second\":1,\"millisecond\":1}",
          "inheritedFrom": "DatetimeFormMixin"
        },
        {
          "name": "hideResetButton",
          "type": "boolean | null | undefined",
          "description": "if true, the reset button is hidden",
          "privacy": "public",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 298,
              "column": 10
            },
            "end": {
              "line": 301,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "DatetimeInputMixin"
        },
        {
          "name": "withTimezone",
          "type": "boolean | null | undefined",
          "description": "if true, timezone inputs are shown",
          "privacy": "public",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 306,
              "column": 10
            },
            "end": {
              "line": 309,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "DatetimeInputMixin"
        },
        {
          "name": "_resetButtonIsInvisible",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 311,
              "column": 10
            },
            "end": {
              "line": 314,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "DatetimeInputMixin"
        },
        {
          "name": "dwellTime",
          "type": "number",
          "description": "dwell time of incrementing inputs by the buttons in milliseconds. It is minimal 15 milliseconds.",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 33,
              "column": 10
            },
            "end": {
              "line": 37,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_dwellTimeChanged\"",
              "attributeType": "Number"
            }
          },
          "defaultValue": "50",
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "dwellDelay",
          "type": "number",
          "description": "delay when incrementing inputs by the buttons in milliseconds. It is minimal 15 milliseconds.",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 43,
              "column": 10
            },
            "end": {
              "line": 47,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_dwellTimeChanged\"",
              "attributeType": "Number"
            }
          },
          "defaultValue": "500",
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "_switchClassSelector",
          "type": "string | null | undefined",
          "description": "class property of switches",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 52,
              "column": 10
            },
            "end": {
              "line": 55,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"switch\"",
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "currentHoveredDayNode",
          "type": "Node | null | undefined",
          "description": "Current hovered day node\nto access: bind the attribute ('current-hovered-day-node') and get its dataset `year`, `month` or `day`-property",
          "privacy": "public",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 262,
              "column": 10
            },
            "end": {
              "line": 266,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "Node"
            }
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "currentActiveDayNode",
          "type": "Node | null | undefined",
          "description": "Node of the last clicked day-field (by clicking or keypress)\nto access: bind the attribute ('current-active-day-node') and get its dataset `year`, `month` or `day`-property",
          "privacy": "public",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 272,
              "column": 10
            },
            "end": {
              "line": 276,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "Node"
            }
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "currentSelectedDayNode",
          "type": "Node | null | undefined",
          "description": "Node of the last selected day\nto access: bind the attribute ('current-selected-day-node') and get its dataset `year`, `month` or `day`-property",
          "privacy": "public",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 282,
              "column": 10
            },
            "end": {
              "line": 286,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "Node"
            }
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "firstDayOfWeek",
          "type": "number | null | undefined",
          "description": "Defines the first day of the week to use. Defaults to `1` (`monday`)\ne.g. when `firstDayOfWeek` is `0` the first day of the week would be `sunday`",
          "privacy": "public",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 300,
              "column": 10
            },
            "end": {
              "line": 303,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "1",
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "native",
          "type": "boolean | null | undefined",
          "description": "Set to `true` to use the native input, if it available",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 173,
              "column": 10
            },
            "end": {
              "line": 176,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "nativeOnMobile",
          "type": "boolean | null | undefined",
          "description": "Set to `true` to use the native input automatically on mobile devices, if it available",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 181,
              "column": 10
            },
            "end": {
              "line": 184,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_nativeOnMobileChanged\"",
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "mobileUserAgentTestString",
          "type": "string | null | undefined",
          "description": "When `nativeOnMobile` is set to `true` this string is used to test the userAgent for a mobile device",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 189,
              "column": 10
            },
            "end": {
              "line": 193,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_nativeOnMobileChanged\"",
              "attributeType": "String"
            }
          },
          "defaultValue": "\"mM]obi|[tT]ablet|[aA]ndroid\"",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "opened",
          "type": "boolean | null | undefined",
          "description": "if `true` the picker is opened",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 198,
              "column": 10
            },
            "end": {
              "line": 203,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "horizontalAlign",
          "type": "string | null | undefined",
          "description": "The orientation against which to align the element horizontally\nrelative to the related input element. Possible values are \"left\", \"right\", \"center\", \"auto\". (comparable to `iron-fit-behavior` and its `no-overlap`-attribute)",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 209,
              "column": 10
            },
            "end": {
              "line": 213,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"auto\"",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "verticalAlign",
          "type": "string | null | undefined",
          "description": "The orientation against which to align the element vertically\nrelative to the related input element. Possible values are \"top\", \"bottom\", \"middle\", \"auto\". (comparable to `iron-fit-behavior` and its `no-overlap`-attribute)",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 219,
              "column": 10
            },
            "end": {
              "line": 223,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"auto\"",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "autoConfirm",
          "type": "boolean | null | undefined",
          "description": "Set to `true` to make the input auto-confirming",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 228,
              "column": 10
            },
            "end": {
              "line": 231,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_autoConfirmChanged\"",
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "noCancelOnEscKey",
          "type": "boolean | null | undefined",
          "description": "Set to `true` to disable canceling the overlay with the ESC key.",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 236,
              "column": 10
            },
            "end": {
              "line": 239,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "noTip",
          "type": "boolean | null | undefined",
          "description": "Set to `true` to disable the tip of the picker",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 252,
              "column": 10
            },
            "end": {
              "line": 255,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "confirmedValue",
          "type": "Object | null | undefined",
          "description": "The confirmed value. When `auto-confirm` is not set, the value will only change, when you confirm.",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 260,
              "column": 10
            },
            "end": {
              "line": 263,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "confirmedDatetime",
          "type": "string | null | undefined",
          "description": "The confirmed datetime. When `auto-confirm` is not set, the datetime will only change, when you confirm.",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 154,
              "column": 10
            },
            "end": {
              "line": 157,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "hideNowButton",
          "type": "boolean | null | undefined",
          "description": "Set to `true` to hide the `now`-button",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 162,
              "column": 10
            },
            "end": {
              "line": 164,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_hasNative",
          "type": "?",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 45,
              "column": 6
            },
            "end": {
              "line": 47,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        }
      ],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 283,
              "column": 6
            },
            "end": {
              "line": 287,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "fit",
          "description": "Positions and fits the overlay into the `fitInto` element.",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/overlay-picker-mixin.html",
            "start": {
              "line": 128,
              "column": 6
            },
            "end": {
              "line": 130,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "OverlayPickerMixin"
        },
        {
          "name": "open",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "date-picker.html",
            "start": {
              "line": 45,
              "column": 6
            },
            "end": {
              "line": 54,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatePickerPattern"
        },
        {
          "name": "notifyResize",
          "description": "notify manually the overlay to resize",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/overlay-picker-mixin.html",
            "start": {
              "line": 140,
              "column": 6
            },
            "end": {
              "line": 142,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "OverlayPickerMixin"
        },
        {
          "name": "_attachDom",
          "description": "attach dom with `delegatesFocus: true` so that the element is also focussed while its's children are too, and to autofocus to first tabable",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 103,
              "column": 6
            },
            "end": {
              "line": 112,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom"
            }
          ],
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "validate",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 384,
              "column": 6
            },
            "end": {
              "line": 391,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_computeInvalid",
          "description": "defines whether the value is set",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 130,
              "column": 6
            },
            "end": {
              "line": 132,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "[Object]"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_validate",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 141,
              "column": 6
            },
            "end": {
              "line": 143,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "Object",
              "description": "value to validate"
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "true, if the value is valid"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_computeValueIsSet",
          "description": "defines whether the value is set",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 149,
              "column": 6
            },
            "end": {
              "line": 151,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "[Object]"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_isSet",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 159,
              "column": 6
            },
            "end": {
              "line": 161,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "Object",
              "description": "value to test"
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "true, if the value is set"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_valueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 474,
              "column": 6
            },
            "end": {
              "line": 483,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_defaultChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 516,
              "column": 6
            },
            "end": {
              "line": 521,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "def"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_createReflectPropertyToValueObserver",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 180,
              "column": 6
            },
            "end": {
              "line": 190,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "prop"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_reflectPropertyToValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 192,
              "column": 6
            },
            "end": {
              "line": 194,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_reflectValueToProperty",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 196,
              "column": 6
            },
            "end": {
              "line": 198,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_localeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 96,
              "column": 6
            },
            "end": {
              "line": 283,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "locale"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "_shouldPropertyChange",
          "description": "overwritten of polymer to handle -0",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 34,
              "column": 6
            },
            "end": {
              "line": 40,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property"
            },
            {
              "name": "value"
            },
            {
              "name": "old"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "now",
          "description": "Sets value to the actual date",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 304,
              "column": 6
            },
            "end": {
              "line": 320,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "setDate",
          "description": "sets date to all necessary properties",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 326,
              "column": 6
            },
            "end": {
              "line": 390,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date",
              "description": "[the date to set]"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "resetDate",
          "description": "resets the date (if `default` is set, it will be used for the new value)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 396,
              "column": 6
            },
            "end": {
              "line": 433,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "Event",
              "description": "[a causing event will not propagated]"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_defaultValueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 435,
              "column": 6
            },
            "end": {
              "line": 442,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "def"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computeDefaultValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 444,
              "column": 6
            },
            "end": {
              "line": 446,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "def"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computeDatetime",
          "description": "modify date components of a date-object. it needs to be applied or called on a date object",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 460,
              "column": 6
            },
            "end": {
              "line": 537,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "year",
              "type": "number"
            },
            {
              "name": "month",
              "type": "number"
            },
            {
              "name": "day",
              "type": "number"
            },
            {
              "name": "hour",
              "type": "number"
            },
            {
              "name": "minute",
              "type": "number"
            },
            {
              "name": "second",
              "type": "number"
            },
            {
              "name": "millisecond",
              "type": "number"
            }
          ],
          "return": {
            "type": "object",
            "desc": "the changed object and the new offset-minutes"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_dateTimeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 539,
              "column": 6
            },
            "end": {
              "line": 566,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "date"
            },
            {
              "name": "time"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_datetimeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 568,
              "column": 6
            },
            "end": {
              "line": 611,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "datetime"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_valueAsNumberChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 613,
              "column": 6
            },
            "end": {
              "line": 620,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_valueAsDateChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 622,
              "column": 6
            },
            "end": {
              "line": 633,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_fromDatetime",
          "description": "compute a date object",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 640,
              "column": 6
            },
            "end": {
              "line": 667,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "datetime"
            }
          ],
          "return": {
            "type": "Date",
            "desc": "date"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_clampChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 669,
              "column": 6
            },
            "end": {
              "line": 677,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "clamp"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_minChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 679,
              "column": 6
            },
            "end": {
              "line": 696,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "min"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_maxChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 698,
              "column": 6
            },
            "end": {
              "line": 715,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "max"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_minMaxValueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 717,
              "column": 6
            },
            "end": {
              "line": 721,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_checkThreshold",
          "description": "test date object against thresholds",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 728,
              "column": 6
            },
            "end": {
              "line": 739,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date"
            }
          ],
          "return": {
            "type": "Date",
            "desc": "ether the threshold when the date is exceeding or the date object itself"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_toDate",
          "description": "get date string from a date object",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 746,
              "column": 6
            },
            "end": {
              "line": 752,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date",
              "description": "the Date to serialize"
            }
          ],
          "return": {
            "type": "String",
            "desc": "date string"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_toTime",
          "description": "get UTC time string from a date object",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 759,
              "column": 6
            },
            "end": {
              "line": 764,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date",
              "description": "the Date to serialize"
            }
          ],
          "return": {
            "type": "String",
            "desc": "date string"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_toUTCDate",
          "description": "get UTC date string from a date object",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 771,
              "column": 6
            },
            "end": {
              "line": 777,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date",
              "description": "the Date to serialize"
            }
          ],
          "return": {
            "type": "String",
            "desc": "date string"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_toUTCTime",
          "description": "get UTC time string from a date object",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 784,
              "column": 6
            },
            "end": {
              "line": 789,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date",
              "description": "the Date to serialize"
            }
          ],
          "return": {
            "type": "String",
            "desc": "time string"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "__toDate",
          "description": "get date string from date components",
          "privacy": "private",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 798,
              "column": 6
            },
            "end": {
              "line": 800,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "year",
              "type": "Number"
            },
            {
              "name": "month",
              "type": "Number"
            },
            {
              "name": "day",
              "type": "Number"
            }
          ],
          "return": {
            "type": "String",
            "desc": "date string"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "__toTime",
          "description": "get time string from date components",
          "privacy": "private",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 810,
              "column": 6
            },
            "end": {
              "line": 812,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hour",
              "type": "Number"
            },
            {
              "name": "minute",
              "type": "Number"
            },
            {
              "name": "second",
              "type": "Number"
            },
            {
              "name": "millisecond",
              "type": "Number"
            }
          ],
          "return": {
            "type": "String",
            "desc": "time string"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_clampUTC",
          "description": "clamp UTC values",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 820,
              "column": 6
            },
            "end": {
              "line": 837,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date",
              "description": "the Date to clamp"
            },
            {
              "name": "clamp",
              "type": "String",
              "description": "the date component to clamp"
            }
          ],
          "return": {
            "type": "Date",
            "desc": "the clamped date"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_pad",
          "description": "pad a string with 0",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 845,
              "column": 6
            },
            "end": {
              "line": 851,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "n",
              "type": "Number",
              "description": "number to pad"
            },
            {
              "name": "padLength",
              "type": "Number",
              "description": "total length of strings"
            }
          ],
          "return": {
            "type": "String",
            "desc": "padded string"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_hour12Changed",
          "description": "`hour12` is the hour in hour12-format, that starts is minimal 1 and maximal 12, midnight is at 12am and noon is 12pm",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 856,
              "column": 6
            },
            "end": {
              "line": 860,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hour12"
            },
            {
              "name": "old"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_isAmChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 862,
              "column": 6
            },
            "end": {
              "line": 866,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "isAm"
            },
            {
              "name": "old"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_ifClamped",
          "description": "clamp to date component",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 871,
              "column": 6
            },
            "end": {
              "line": 876,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "clamp"
            },
            {
              "name": "comp"
            },
            {
              "name": "hidden"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_checkDefaultTimezone",
          "description": "set the default timezone if needed",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 882,
              "column": 6
            },
            "end": {
              "line": 895,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computeTimezoneShift",
          "description": "correct a timezone shift when date changes from winter to summertime (locally)",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 901,
              "column": 6
            },
            "end": {
              "line": 910,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_timezoneChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 912,
              "column": 6
            },
            "end": {
              "line": 932,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "timezone"
            },
            {
              "name": "oldValue"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_offsetMinutesChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 934,
              "column": 6
            },
            "end": {
              "line": 942,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "offsetMinutes"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_timeZoneHoursMinutesChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 944,
              "column": 6
            },
            "end": {
              "line": 963,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hour"
            },
            {
              "name": "minute"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computeTimezone",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 965,
              "column": 6
            },
            "end": {
              "line": 987,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "offsetMinutes"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computeTimezoneOffset",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 989,
              "column": 6
            },
            "end": {
              "line": 1019,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "timezone"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computeMaxDayOfMonth",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 1021,
              "column": 6
            },
            "end": {
              "line": 1029,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "year"
            },
            {
              "name": "month"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computePartsStep",
          "description": "compute the steps for the related inputs. The day-input is the highest modified input allthough if the step is higher than a day in seconds it might also change month- or year-inputs.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 104,
              "column": 6
            },
            "end": {
              "line": 185,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "step"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeFormMixin"
        },
        {
          "name": "_computePartsDisabled",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 187,
              "column": 6
            },
            "end": {
              "line": 205,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "change"
            },
            {
              "name": "disabled"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeFormMixin"
        },
        {
          "name": "_computeOr",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 318,
              "column": 6
            },
            "end": {
              "line": 320,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "a"
            },
            {
              "name": "b"
            }
          ],
          "inheritedFrom": "DatetimeInputMixin"
        },
        {
          "name": "_computePartOrder",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 322,
              "column": 6
            },
            "end": {
              "line": 324,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "first"
            }
          ],
          "inheritedFrom": "DatetimeInputMixin"
        },
        {
          "name": "_computeResetButtonIsInvisible",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 326,
              "column": 6
            },
            "end": {
              "line": 328,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "valueIsSet"
            },
            {
              "name": "defaultValue"
            },
            {
              "name": "valueAsNumber"
            }
          ],
          "inheritedFrom": "DatetimeInputMixin"
        },
        {
          "name": "_orderDateParts",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/date-input.html",
            "start": {
              "line": 62,
              "column": 6
            },
            "end": {
              "line": 117,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "order"
            },
            {
              "name": "clamp"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DateInputPattern"
        },
        {
          "name": "_getDefaultForProp",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 630,
              "column": 6
            },
            "end": {
              "line": 640,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "prop"
            }
          ],
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 289,
              "column": 6
            },
            "end": {
              "line": 293,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_addSwitchListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 89,
              "column": 6
            },
            "end": {
              "line": 104,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "_removeSwitchListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 106,
              "column": 6
            },
            "end": {
              "line": 116,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "_checkKeycodeSwitch",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 118,
              "column": 6
            },
            "end": {
              "line": 126,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "__getEventTarget",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 128,
              "column": 6
            },
            "end": {
              "line": 142,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            },
            {
              "name": "classSelector"
            }
          ],
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "__increm",
          "description": "increment property by being called by an Event on an `switch`-Node",
          "privacy": "private",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 149,
              "column": 6
            },
            "end": {
              "line": 176,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "Event",
              "description": "Event it was called on"
            },
            {
              "name": "once",
              "type": "Boolean",
              "description": "if true, it doesn't setup an intervall to continue incrementing (e.g. keyPressEvents are fired itself repeatedly while the key is pressed)"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "__incremProp",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 178,
              "column": 6
            },
            "end": {
              "line": 180,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "prop"
            },
            {
              "name": "step"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "_stopActiveIncremJob",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 186,
              "column": 6
            },
            "end": {
              "line": 199,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "_dwellTimeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 201,
              "column": 6
            },
            "end": {
              "line": 207,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dwellTime"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "_dwellDelayChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 209,
              "column": 6
            },
            "end": {
              "line": 215,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dwellDelay"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "_onMouseMoveDay",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 320,
              "column": 6
            },
            "end": {
              "line": 333,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_onClickDay",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 335,
              "column": 6
            },
            "end": {
              "line": 361,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "confirm",
          "description": "confirms the input",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 443,
              "column": 6
            },
            "end": {
              "line": 452,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "[type]",
              "description": "Event"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_computeIncremPropTop",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 374,
              "column": 6
            },
            "end": {
              "line": 379,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hideMonth"
            }
          ],
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_setWeekDayCaptions",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 381,
              "column": 6
            },
            "end": {
              "line": 396,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "locale"
            },
            {
              "name": "firstDayOfWeek"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_setMonthSelectorOptions",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 398,
              "column": 6
            },
            "end": {
              "line": 407,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "locale"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "renderCalendar",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "date-picker.html",
            "start": {
              "line": 38,
              "column": 6
            },
            "end": {
              "line": 43,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "year"
            },
            {
              "name": "month"
            },
            {
              "name": "day"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatePickerPattern"
        },
        {
          "name": "_clampDay",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 541,
              "column": 6
            },
            "end": {
              "line": 547,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d"
            }
          ],
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_dayDiff",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 549,
              "column": 6
            },
            "end": {
              "line": 551,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "end"
            },
            {
              "name": "start"
            }
          ],
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_checkKeycodeForDates",
          "description": "key press event handler on days area",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 567,
              "column": 6
            },
            "end": {
              "line": 628,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "[type]",
              "description": "Event"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_addEventListenerToNode",
          "description": "Add the event listener to the node if it is a gestures event.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../polymer/lib/mixins/gesture-event-listeners.html",
            "start": {
              "line": 55,
              "column": 6
            },
            "end": {
              "line": 59,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node",
              "type": "!Node",
              "description": "Node to add event listener to"
            },
            {
              "name": "eventName",
              "type": "string",
              "description": "Name of event"
            },
            {
              "name": "handler",
              "type": "function (!Event): void",
              "description": "Listener function to add"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.GestureEventListeners"
        },
        {
          "name": "_removeEventListenerFromNode",
          "description": "Remove the event listener to the node if it is a gestures event.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../polymer/lib/mixins/gesture-event-listeners.html",
            "start": {
              "line": 69,
              "column": 6
            },
            "end": {
              "line": 73,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node",
              "type": "!Node",
              "description": "Node to remove event listener from"
            },
            {
              "name": "eventName",
              "type": "string",
              "description": "Name of event"
            },
            {
              "name": "handler",
              "type": "function (!Event): void",
              "description": "Listener function to remove"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.GestureEventListeners"
        },
        {
          "name": "_addPickerTransitionEndListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 295,
              "column": 6
            },
            "end": {
              "line": 302,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_removePickerTransitionEndListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 304,
              "column": 6
            },
            "end": {
              "line": 306,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_onPickerTransitionEnd",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 308,
              "column": 6
            },
            "end": {
              "line": 313,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_addCancelOnClickListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 315,
              "column": 6
            },
            "end": {
              "line": 322,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_removeCancelOnClickListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 324,
              "column": 6
            },
            "end": {
              "line": 327,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_stopPropagation",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 329,
              "column": 6
            },
            "end": {
              "line": 332,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_addKeyListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 334,
              "column": 6
            },
            "end": {
              "line": 337,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_removeKeyListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 339,
              "column": 6
            },
            "end": {
              "line": 342,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_nativeOnMobileChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 344,
              "column": 6
            },
            "end": {
              "line": 357,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_checkKeycode",
          "description": "key press event handler",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 363,
              "column": 6
            },
            "end": {
              "line": 382,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "[type]",
              "description": "Event"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "close",
          "description": "close the picker",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 415,
              "column": 6
            },
            "end": {
              "line": 423,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "[type]",
              "description": "Event"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "toggle",
          "description": "toggle the picker",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 429,
              "column": 6
            },
            "end": {
              "line": 437,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "[type]",
              "description": "Event"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "cancel",
          "description": "cancels the input",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 458,
              "column": 6
            },
            "end": {
              "line": 472,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "[type]",
              "description": "Event"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_confirmedValueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 295,
              "column": 6
            },
            "end": {
              "line": 303,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "confirmedValue"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_reset",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 493,
              "column": 6
            },
            "end": {
              "line": 498,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_setConfirmedValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 305,
              "column": 6
            },
            "end": {
              "line": 312,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_resetValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 506,
              "column": 6
            },
            "end": {
              "line": 510,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_autoConfirmChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 512,
              "column": 6
            },
            "end": {
              "line": 514,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "autoConfirm"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_computeAnd",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 181,
              "column": 6
            },
            "end": {
              "line": 183,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "a"
            },
            {
              "name": "b"
            }
          ],
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_computeNativeStep",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 185,
              "column": 6
            },
            "end": {
              "line": 204,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "step"
            },
            {
              "name": "clamp"
            }
          ],
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_computeNativeValueAsNumber",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 206,
              "column": 6
            },
            "end": {
              "line": 227,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "native"
            },
            {
              "name": "valueAsNumber"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_reflectNativeValueAsNumber",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 229,
              "column": 6
            },
            "end": {
              "line": 253,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "native"
            },
            {
              "name": "nativeValueAsNumber"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_setDate",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 255,
              "column": 6
            },
            "end": {
              "line": 262,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_confirmedDatetimeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 264,
              "column": 6
            },
            "end": {
              "line": 276,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "confirmedDatetime"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_resetDate",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 314,
              "column": 6
            },
            "end": {
              "line": 317,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_resetConfirmedValues",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 319,
              "column": 6
            },
            "end": {
              "line": 327,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_resetValues",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 329,
              "column": 6
            },
            "end": {
              "line": 336,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/overlay-elements.html",
          "description": "overlay demo"
        },
        {
          "url": "demo/music-album.html",
          "description": "music album demo"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 39,
          "column": 4
        },
        "end": {
          "line": 48,
          "column": 5
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "OverlayDatePicker",
      "attributes": [
        {
          "name": "always-on-top",
          "description": "Set to true to keep overlay always on top.",
          "sourceRange": {
            "file": "../input-picker-pattern/overlay-picker-mixin.html",
            "start": {
              "line": 21,
              "column": 10
            },
            "end": {
              "line": 23,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "OverlayPickerMixin"
        },
        {
          "name": "no-overlap",
          "description": "Will position the element around the positionTarget without overlapping it.",
          "sourceRange": {
            "file": "../input-picker-pattern/overlay-picker-mixin.html",
            "start": {
              "line": 27,
              "column": 10
            },
            "end": {
              "line": 30,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "OverlayPickerMixin"
        },
        {
          "name": "with-backdrop",
          "description": "Set to true to display a backdrop behind the overlay. It traps the focus\nwithin the light DOM of the overlay.",
          "sourceRange": {
            "file": "../input-picker-pattern/overlay-picker-mixin.html",
            "start": {
              "line": 35,
              "column": 10
            },
            "end": {
              "line": 38,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "OverlayPickerMixin"
        },
        {
          "name": "no-cancel-on-outside-click",
          "description": "Set to `true` to disable canceling the dropdown by clicking outside the picker.",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 244,
              "column": 10
            },
            "end": {
              "line": 247,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "dynamic-align",
          "description": "If true, it will use `horizontalAlign` and `verticalAlign` values as preferred alignment\nand if there's not enough space, it will pick the values which minimize the cropping.",
          "sourceRange": {
            "file": "../input-picker-pattern/overlay-picker-mixin.html",
            "start": {
              "line": 51,
              "column": 10
            },
            "end": {
              "line": 54,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "OverlayPickerMixin"
        },
        {
          "name": "auto-fit-on-attach",
          "description": "Set to true to auto-fit on attach.",
          "sourceRange": {
            "file": "../input-picker-pattern/overlay-picker-mixin.html",
            "start": {
              "line": 59,
              "column": 10
            },
            "end": {
              "line": 62,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "OverlayPickerMixin"
        },
        {
          "name": "fit-into",
          "description": "The element to fit the overlay into. By default it is the window.",
          "sourceRange": {
            "file": "../input-picker-pattern/overlay-picker-mixin.html",
            "start": {
              "line": 67,
              "column": 10
            },
            "end": {
              "line": 69,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "OverlayPickerMixin"
        },
        {
          "name": "position-target",
          "description": "The element that should be used to position the overlay. If not set, it will\ndefault to the polyfill node.",
          "sourceRange": {
            "file": "../input-picker-pattern/overlay-picker-mixin.html",
            "start": {
              "line": 75,
              "column": 10
            },
            "end": {
              "line": 77,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Element | null | undefined",
          "inheritedFrom": "OverlayPickerMixin"
        },
        {
          "name": "name",
          "description": "name of the input",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 16,
              "column": 10
            },
            "end": {
              "line": 18,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "title",
          "description": "description for the element and can be used as a hint for invalid values",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 23,
              "column": 10
            },
            "end": {
              "line": 26,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "disabled",
          "description": "disables the input",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 31,
              "column": 10
            },
            "end": {
              "line": 35,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "required",
          "description": "required attribute",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 40,
              "column": 10
            },
            "end": {
              "line": 44,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "property-for-value",
          "description": "defines the property that should be used for the value",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 49,
              "column": 10
            },
            "end": {
              "line": 52,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "invalid",
          "description": "required attribute",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 57,
              "column": 10
            },
            "end": {
              "line": 63,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "default",
          "description": "default value of the value, when it does not validate",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 77,
              "column": 10
            },
            "end": {
              "line": 80,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "value",
          "description": "value of the input",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 85,
              "column": 10
            },
            "end": {
              "line": 88,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "locale",
          "description": "The current locale",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 19,
              "column": 10
            },
            "end": {
              "line": 23,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "decimal-separator",
          "description": "locale separator for local decimal values",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 29,
              "column": 10
            },
            "end": {
              "line": 33,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "date-separator",
          "description": "Separator for local date values (date-string is still in ISO-Format)",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 39,
              "column": 10
            },
            "end": {
              "line": 43,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "time-separator",
          "description": "Separator for local time values (time-string is still in ISO-Format)",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 49,
              "column": 10
            },
            "end": {
              "line": 53,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "am-string",
          "description": "locale representation of 'AM'",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 58,
              "column": 10
            },
            "end": {
              "line": 62,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "pm-string",
          "description": "locale representation of 'PM'",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 67,
              "column": 10
            },
            "end": {
              "line": 71,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "date-order",
          "description": "order of date-parts",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 76,
              "column": 10
            },
            "end": {
              "line": 86,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "year",
          "description": "The year of the selected date",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 48,
              "column": 10
            },
            "end": {
              "line": 51,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "month",
          "description": "The month of the selected date (starts with 1)",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 56,
              "column": 10
            },
            "end": {
              "line": 59,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "day",
          "description": "The day of the selected date",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 64,
              "column": 10
            },
            "end": {
              "line": 67,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour",
          "description": "The hour of the selected time",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 72,
              "column": 10
            },
            "end": {
              "line": 75,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour12",
          "description": "hour in 12-hour-format",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 81,
              "column": 10
            },
            "end": {
              "line": 85,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "is-am",
          "description": "true, when A.M. (when `hour` < 12)",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 91,
              "column": 10
            },
            "end": {
              "line": 95,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "minute",
          "description": "The minute of the selected time",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 100,
              "column": 10
            },
            "end": {
              "line": 103,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "second",
          "description": "The second of the selected time",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 108,
              "column": 10
            },
            "end": {
              "line": 111,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "millisecond",
          "description": "The millisecond of the selected time",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 116,
              "column": 10
            },
            "end": {
              "line": 119,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "datetime",
          "description": "the selected date and time (format: iso8601)",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 124,
              "column": 10
            },
            "end": {
              "line": 127,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "date",
          "description": "the selected date (format: iso8601)",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 132,
              "column": 10
            },
            "end": {
              "line": 135,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "time",
          "description": "the selected time (format: iso8601)",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 140,
              "column": 10
            },
            "end": {
              "line": 143,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "value-as-date",
          "description": "The date-object of the selected date",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 148,
              "column": 10
            },
            "end": {
              "line": 152,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Date | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "value-as-number",
          "description": "The value of the selected date",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 157,
              "column": 10
            },
            "end": {
              "line": 161,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "min",
          "description": "The minimal date, could be a number, a date-object or an iso-string in time, date or datetime-notation",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 181,
              "column": 10
            },
            "end": {
              "line": 185,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "max",
          "description": "The maximal date, could be a number, a date-object or an iso-string in time, date or datetime-notation",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 197,
              "column": 10
            },
            "end": {
              "line": 201,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour12-format",
          "description": "when true, 12-hour time format, else 24-hour",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 214,
              "column": 10
            },
            "end": {
              "line": 218,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "clamp",
          "description": "Clamp datetime to a property\npossible values:'month', 'day', 'hour', 'minute', 'second', 'millisecond'",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 224,
              "column": 10
            },
            "end": {
              "line": 228,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "timezone",
          "description": "The timezone offset in '±hh:mm' format",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 233,
              "column": 10
            },
            "end": {
              "line": 237,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "offset-minutes",
          "description": "The offset minutes of the set timezone",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 242,
              "column": 10
            },
            "end": {
              "line": 246,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "step",
          "description": "If set the step defines the step a date should be incremented (in seconds). The input for the most inferior standing that would create an integer step is used to increment the value.\nFor example, if the **step** is:\n + **0.05**: the millisecond-input will increment the value by 50 (50 milliseconds), the other inputs behaive as expected\n + **1.05**: the millisecond-input will increment the value by 1050 (1 second and 50 millisecond), the other inputs behaive as expected\n + **2**: the millisecond-input will be disabled, the second-input will increment the value by 2000 (2 seconds), the other inputs behaive as expected\n + **180**: the millisecond-input and the second-input will be disabled, the minute-input will increment the value by 180000 (3 minutes), the other inputs behaive as expected\nIf `step=\"0\"` all inputs will be disabled, else if the step is below _0.001_ the step will be set to **0.001**. The most supirior input that will become the given step is the day-input.",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 33,
              "column": 10
            },
            "end": {
              "line": 36,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeFormMixin"
        },
        {
          "name": "hide-reset-button",
          "description": "if true, the reset button is hidden",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 298,
              "column": 10
            },
            "end": {
              "line": 301,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "DatetimeInputMixin"
        },
        {
          "name": "with-timezone",
          "description": "if true, timezone inputs are shown",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 306,
              "column": 10
            },
            "end": {
              "line": 309,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "DatetimeInputMixin"
        },
        {
          "name": "dwell-time",
          "description": "dwell time of incrementing inputs by the buttons in milliseconds. It is minimal 15 milliseconds.",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 33,
              "column": 10
            },
            "end": {
              "line": 37,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "dwell-delay",
          "description": "delay when incrementing inputs by the buttons in milliseconds. It is minimal 15 milliseconds.",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 43,
              "column": 10
            },
            "end": {
              "line": 47,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "current-hovered-day-node",
          "description": "Current hovered day node\nto access: bind the attribute ('current-hovered-day-node') and get its dataset `year`, `month` or `day`-property",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 262,
              "column": 10
            },
            "end": {
              "line": 266,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Node | null | undefined",
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "current-active-day-node",
          "description": "Node of the last clicked day-field (by clicking or keypress)\nto access: bind the attribute ('current-active-day-node') and get its dataset `year`, `month` or `day`-property",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 272,
              "column": 10
            },
            "end": {
              "line": 276,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Node | null | undefined",
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "current-selected-day-node",
          "description": "Node of the last selected day\nto access: bind the attribute ('current-selected-day-node') and get its dataset `year`, `month` or `day`-property",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 282,
              "column": 10
            },
            "end": {
              "line": 286,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Node | null | undefined",
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "first-day-of-week",
          "description": "Defines the first day of the week to use. Defaults to `1` (`monday`)\ne.g. when `firstDayOfWeek` is `0` the first day of the week would be `sunday`",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 300,
              "column": 10
            },
            "end": {
              "line": 303,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "native",
          "description": "Set to `true` to use the native input, if it available",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 173,
              "column": 10
            },
            "end": {
              "line": 176,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "native-on-mobile",
          "description": "Set to `true` to use the native input automatically on mobile devices, if it available",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 181,
              "column": 10
            },
            "end": {
              "line": 184,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "mobile-user-agent-test-string",
          "description": "When `nativeOnMobile` is set to `true` this string is used to test the userAgent for a mobile device",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 189,
              "column": 10
            },
            "end": {
              "line": 193,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "opened",
          "description": "if `true` the picker is opened",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 198,
              "column": 10
            },
            "end": {
              "line": 203,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "horizontal-align",
          "description": "The orientation against which to align the element horizontally\nrelative to the related input element. Possible values are \"left\", \"right\", \"center\", \"auto\". (comparable to `iron-fit-behavior` and its `no-overlap`-attribute)",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 209,
              "column": 10
            },
            "end": {
              "line": 213,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "vertical-align",
          "description": "The orientation against which to align the element vertically\nrelative to the related input element. Possible values are \"top\", \"bottom\", \"middle\", \"auto\". (comparable to `iron-fit-behavior` and its `no-overlap`-attribute)",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 219,
              "column": 10
            },
            "end": {
              "line": 223,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "auto-confirm",
          "description": "Set to `true` to make the input auto-confirming",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 228,
              "column": 10
            },
            "end": {
              "line": 231,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "no-cancel-on-esc-key",
          "description": "Set to `true` to disable canceling the overlay with the ESC key.",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 236,
              "column": 10
            },
            "end": {
              "line": 239,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "no-tip",
          "description": "Set to `true` to disable the tip of the picker",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 252,
              "column": 10
            },
            "end": {
              "line": 255,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "confirmed-value",
          "description": "The confirmed value. When `auto-confirm` is not set, the value will only change, when you confirm.",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 260,
              "column": 10
            },
            "end": {
              "line": 263,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "confirmed-datetime",
          "description": "The confirmed datetime. When `auto-confirm` is not set, the datetime will only change, when you confirm.",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 154,
              "column": 10
            },
            "end": {
              "line": 157,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "hide-now-button",
          "description": "Set to `true` to hide the `now`-button",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 162,
              "column": 10
            },
            "end": {
              "line": 164,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "DatetimePickerMixin"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "input-picker-closed",
          "description": "input-picker-closed\nFired after a picker has been closed.",
          "metadata": {},
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "type": "CustomEvent",
          "name": "input-picker-opened",
          "description": "input-picker-opened\nFired when a picker has been opened.",
          "metadata": {},
          "inheritedFrom": "InputPickerPattern"
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "overlay-date-picker",
      "mixins": [
        "OverlayPickerMixin",
        "DatePickerPattern"
      ]
    },
    {
      "description": "`<overlay-time-picker>` extends `time-picker` in an overlay.\n\n  ```html\n  <overlay-time-picker value=\"{{value}}\"></overlay-time-picker>\n  ```\n\n A use case could be for example, if you want on mobile devices use the `native picker` and on desktop devices the polyfill.\n\n ```html\n   <overlay-time-picker native-on-mobile></overlay-time-picker>\n ```\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--time-element` | Mixin applied to the time-element | {}\n\n Have a look at [input-picker-pattern#input-picker-shared-style](https://github.com/fooloomanzoo/input-picker-pattern#input-picker-shared-style) and [input-picker-pattern#input-shared-style](https://github.com/fooloomanzoo/input-picker-pattern#input-shared-style) to see how to style the element.",
      "summary": "",
      "path": "overlay-time-picker.html",
      "properties": [
        {
          "name": "alwaysOnTop",
          "type": "boolean | null | undefined",
          "description": "Set to true to keep overlay always on top.",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/overlay-picker-mixin.html",
            "start": {
              "line": 21,
              "column": 10
            },
            "end": {
              "line": 23,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "OverlayPickerMixin"
        },
        {
          "name": "noOverlap",
          "type": "boolean | null | undefined",
          "description": "Will position the element around the positionTarget without overlapping it.",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/overlay-picker-mixin.html",
            "start": {
              "line": 27,
              "column": 10
            },
            "end": {
              "line": 30,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "OverlayPickerMixin"
        },
        {
          "name": "withBackdrop",
          "type": "boolean | null | undefined",
          "description": "Set to true to display a backdrop behind the overlay. It traps the focus\nwithin the light DOM of the overlay.",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/overlay-picker-mixin.html",
            "start": {
              "line": 35,
              "column": 10
            },
            "end": {
              "line": 38,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "OverlayPickerMixin"
        },
        {
          "name": "noCancelOnOutsideClick",
          "type": "boolean | null | undefined",
          "description": "Set to `true` to disable canceling the dropdown by clicking outside the picker.",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 244,
              "column": 10
            },
            "end": {
              "line": 247,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "dynamicAlign",
          "type": "boolean | null | undefined",
          "description": "If true, it will use `horizontalAlign` and `verticalAlign` values as preferred alignment\nand if there's not enough space, it will pick the values which minimize the cropping.",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/overlay-picker-mixin.html",
            "start": {
              "line": 51,
              "column": 10
            },
            "end": {
              "line": 54,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "OverlayPickerMixin"
        },
        {
          "name": "autoFitOnAttach",
          "type": "boolean | null | undefined",
          "description": "Set to true to auto-fit on attach.",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/overlay-picker-mixin.html",
            "start": {
              "line": 59,
              "column": 10
            },
            "end": {
              "line": 62,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "OverlayPickerMixin"
        },
        {
          "name": "fitInto",
          "type": "Object | null | undefined",
          "description": "The element to fit the overlay into. By default it is the window.",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/overlay-picker-mixin.html",
            "start": {
              "line": 67,
              "column": 10
            },
            "end": {
              "line": 69,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "OverlayPickerMixin"
        },
        {
          "name": "positionTarget",
          "type": "Element | null | undefined",
          "description": "The element that should be used to position the overlay. If not set, it will\ndefault to the polyfill node.",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/overlay-picker-mixin.html",
            "start": {
              "line": 75,
              "column": 10
            },
            "end": {
              "line": 77,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Element"
            }
          },
          "inheritedFrom": "OverlayPickerMixin"
        },
        {
          "name": "_sizingTarget",
          "type": "Element | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/overlay-picker-mixin.html",
            "start": {
              "line": 79,
              "column": 10
            },
            "end": {
              "line": 82,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Element"
            }
          },
          "inheritedFrom": "OverlayPickerMixin"
        },
        {
          "name": "name",
          "type": "string | null | undefined",
          "description": "name of the input",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 16,
              "column": 10
            },
            "end": {
              "line": 18,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "title",
          "type": "string | null | undefined",
          "description": "description for the element and can be used as a hint for invalid values",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 23,
              "column": 10
            },
            "end": {
              "line": 26,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "disabled",
          "type": "boolean | null | undefined",
          "description": "disables the input",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 31,
              "column": 10
            },
            "end": {
              "line": 35,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "required",
          "type": "boolean | null | undefined",
          "description": "required attribute",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 40,
              "column": 10
            },
            "end": {
              "line": 44,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "propertyForValue",
          "type": "string | null | undefined",
          "description": "defines the property that should be used for the value",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 49,
              "column": 10
            },
            "end": {
              "line": 52,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_createReflectPropertyToValueObserver\"",
              "attributeType": "String"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "invalid",
          "type": "boolean | null | undefined",
          "description": "required attribute",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 57,
              "column": 10
            },
            "end": {
              "line": 63,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_valueIsSet",
          "type": "boolean | null | undefined",
          "description": "is true when the value is not undefined",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 68,
              "column": 10
            },
            "end": {
              "line": 72,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "default",
          "type": "Object | null | undefined",
          "description": "default value of the value, when it does not validate",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 77,
              "column": 10
            },
            "end": {
              "line": 80,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_defaultChanged\"",
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "value",
          "type": "Object | null | undefined",
          "description": "value of the input",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 85,
              "column": 10
            },
            "end": {
              "line": 88,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "locale",
          "type": "string | null | undefined",
          "description": "The current locale",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 19,
              "column": 10
            },
            "end": {
              "line": 23,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "decimalSeparator",
          "type": "string",
          "description": "locale separator for local decimal values",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 29,
              "column": 10
            },
            "end": {
              "line": 33,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "dateSeparator",
          "type": "string",
          "description": "Separator for local date values (date-string is still in ISO-Format)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 39,
              "column": 10
            },
            "end": {
              "line": 43,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "timeSeparator",
          "type": "string",
          "description": "Separator for local time values (time-string is still in ISO-Format)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 49,
              "column": 10
            },
            "end": {
              "line": 53,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "amString",
          "type": "string | null | undefined",
          "description": "locale representation of 'AM'",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 58,
              "column": 10
            },
            "end": {
              "line": 62,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "pmString",
          "type": "string | null | undefined",
          "description": "locale representation of 'PM'",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 67,
              "column": 10
            },
            "end": {
              "line": 71,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "dateOrder",
          "type": "Object | null | undefined",
          "description": "order of date-parts",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 76,
              "column": 10
            },
            "end": {
              "line": 86,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Object"
            }
          },
          "defaultValue": "{\"parts\":[],\"timeFirst\":false,\"dateFirst\":true}",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "year",
          "type": "number | null | undefined",
          "description": "The year of the selected date",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 48,
              "column": 10
            },
            "end": {
              "line": 51,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "month",
          "type": "number | null | undefined",
          "description": "The month of the selected date (starts with 1)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 56,
              "column": 10
            },
            "end": {
              "line": 59,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "day",
          "type": "number | null | undefined",
          "description": "The day of the selected date",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 64,
              "column": 10
            },
            "end": {
              "line": 67,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour",
          "type": "number | null | undefined",
          "description": "The hour of the selected time",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 72,
              "column": 10
            },
            "end": {
              "line": 75,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour12",
          "type": "number",
          "description": "hour in 12-hour-format",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 81,
              "column": 10
            },
            "end": {
              "line": 85,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_hour12Changed\"",
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "isAm",
          "type": "boolean",
          "description": "true, when A.M. (when `hour` < 12)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 91,
              "column": 10
            },
            "end": {
              "line": 95,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_isAmChanged\"",
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "minute",
          "type": "number | null | undefined",
          "description": "The minute of the selected time",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 100,
              "column": 10
            },
            "end": {
              "line": 103,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "second",
          "type": "number | null | undefined",
          "description": "The second of the selected time",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 108,
              "column": 10
            },
            "end": {
              "line": 111,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "millisecond",
          "type": "number | null | undefined",
          "description": "The millisecond of the selected time",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 116,
              "column": 10
            },
            "end": {
              "line": 119,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "datetime",
          "type": "string | null | undefined",
          "description": "the selected date and time (format: iso8601)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 124,
              "column": 10
            },
            "end": {
              "line": 127,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "date",
          "type": "string | null | undefined",
          "description": "the selected date (format: iso8601)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 132,
              "column": 10
            },
            "end": {
              "line": 135,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "time",
          "type": "string | null | undefined",
          "description": "the selected time (format: iso8601)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 140,
              "column": 10
            },
            "end": {
              "line": 143,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "valueAsDate",
          "type": "Date | null | undefined",
          "description": "The date-object of the selected date",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 148,
              "column": 10
            },
            "end": {
              "line": 152,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_valueAsDateChanged\"",
              "attributeType": "Date"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "valueAsNumber",
          "type": "number | null | undefined",
          "description": "The value of the selected date",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 157,
              "column": 10
            },
            "end": {
              "line": 161,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_valueAsNumberChanged\"",
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_defaultValue",
          "type": "number | null | undefined",
          "description": "value of the default date",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 173,
              "column": 10
            },
            "end": {
              "line": 176,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "min",
          "type": "Object | null | undefined",
          "description": "The minimal date, could be a number, a date-object or an iso-string in time, date or datetime-notation",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 181,
              "column": 10
            },
            "end": {
              "line": 185,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_minChanged\"",
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_minValue",
          "type": "number | null | undefined",
          "description": "value if the minimum date",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 190,
              "column": 10
            },
            "end": {
              "line": 192,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "max",
          "type": "Object | null | undefined",
          "description": "The maximal date, could be a number, a date-object or an iso-string in time, date or datetime-notation",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 197,
              "column": 10
            },
            "end": {
              "line": 201,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_maxChanged\"",
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_maxValue",
          "type": "number | null | undefined",
          "description": "value if the maximum date",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 206,
              "column": 10
            },
            "end": {
              "line": 208,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour12Format",
          "type": "boolean",
          "description": "when true, 12-hour time format, else 24-hour",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 214,
              "column": 10
            },
            "end": {
              "line": 218,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "clamp",
          "type": "string | null | undefined",
          "description": "Clamp datetime to a property\npossible values:'month', 'day', 'hour', 'minute', 'second', 'millisecond'",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 224,
              "column": 10
            },
            "end": {
              "line": 228,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_clampChanged\"",
              "attributeType": "String"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "timezone",
          "type": "string | null | undefined",
          "description": "The timezone offset in '±hh:mm' format",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 233,
              "column": 10
            },
            "end": {
              "line": 237,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_timezoneChanged\"",
              "attributeType": "String"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "offsetMinutes",
          "type": "number | null | undefined",
          "description": "The offset minutes of the set timezone",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 242,
              "column": 10
            },
            "end": {
              "line": 246,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_offsetMinutesChanged\"",
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_timeZoneHours",
          "type": "number | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 248,
              "column": 10
            },
            "end": {
              "line": 250,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_timeZoneMinutes",
          "type": "number | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 252,
              "column": 10
            },
            "end": {
              "line": 254,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_recentLocalTimezoneOffset",
          "type": "number | null | undefined",
          "description": "The offset minute of the current datetime",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 259,
              "column": 10
            },
            "end": {
              "line": 261,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_timeOnly",
          "type": "boolean | null | undefined",
          "description": "if true perspective starts at 0 (1970-01-01)",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 266,
              "column": 10
            },
            "end": {
              "line": 269,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_maxDayOfMonth",
          "type": "number",
          "description": "exclusive max day of month",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 275,
              "column": 10
            },
            "end": {
              "line": 278,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_dateLocked",
          "type": "boolean | null | undefined",
          "description": "lock to date and ignore time",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 283,
              "column": 10
            },
            "end": {
              "line": 286,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "step",
          "type": "number | null | undefined",
          "description": "If set the step defines the step a date should be incremented (in seconds). The input for the most inferior standing that would create an integer step is used to increment the value.\nFor example, if the **step** is:\n + **0.05**: the millisecond-input will increment the value by 50 (50 milliseconds), the other inputs behaive as expected\n + **1.05**: the millisecond-input will increment the value by 1050 (1 second and 50 millisecond), the other inputs behaive as expected\n + **2**: the millisecond-input will be disabled, the second-input will increment the value by 2000 (2 seconds), the other inputs behaive as expected\n + **180**: the millisecond-input and the second-input will be disabled, the minute-input will increment the value by 180000 (3 minutes), the other inputs behaive as expected\nIf `step=\"0\"` all inputs will be disabled, else if the step is below _0.001_ the step will be set to **0.001**. The most supirior input that will become the given step is the day-input.",
          "privacy": "public",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 33,
              "column": 10
            },
            "end": {
              "line": 36,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeFormMixin"
        },
        {
          "name": "_partsDisabled",
          "type": "Object | null | undefined",
          "description": "date-parts that are disabled",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 41,
              "column": 10
            },
            "end": {
              "line": 47,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Object"
            }
          },
          "defaultValue": "{}",
          "inheritedFrom": "DatetimeFormMixin"
        },
        {
          "name": "_partsStep",
          "type": "Object | null | undefined",
          "description": "the computed steps for the date-parts",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 52,
              "column": 10
            },
            "end": {
              "line": 65,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "Object"
            }
          },
          "defaultValue": "{\"day\":1,\"hour\":1,\"minute\":1,\"second\":1,\"millisecond\":1}",
          "inheritedFrom": "DatetimeFormMixin"
        },
        {
          "name": "hideResetButton",
          "type": "boolean | null | undefined",
          "description": "if true, the reset button is hidden",
          "privacy": "public",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 298,
              "column": 10
            },
            "end": {
              "line": 301,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "DatetimeInputMixin"
        },
        {
          "name": "withTimezone",
          "type": "boolean | null | undefined",
          "description": "if true, timezone inputs are shown",
          "privacy": "public",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 306,
              "column": 10
            },
            "end": {
              "line": 309,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "DatetimeInputMixin"
        },
        {
          "name": "_resetButtonIsInvisible",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 311,
              "column": 10
            },
            "end": {
              "line": 314,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "DatetimeInputMixin"
        },
        {
          "name": "dwellTime",
          "type": "number",
          "description": "dwell time of incrementing inputs by the buttons in milliseconds. It is minimal 15 milliseconds.",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 33,
              "column": 10
            },
            "end": {
              "line": 37,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_dwellTimeChanged\"",
              "attributeType": "Number"
            }
          },
          "defaultValue": "50",
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "dwellDelay",
          "type": "number",
          "description": "delay when incrementing inputs by the buttons in milliseconds. It is minimal 15 milliseconds.",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 43,
              "column": 10
            },
            "end": {
              "line": 47,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_dwellTimeChanged\"",
              "attributeType": "Number"
            }
          },
          "defaultValue": "500",
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "_switchClassSelector",
          "type": "string | null | undefined",
          "description": "class property of switches",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 52,
              "column": 10
            },
            "end": {
              "line": 55,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"switch\"",
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "native",
          "type": "boolean | null | undefined",
          "description": "Set to `true` to use the native input, if it available",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 173,
              "column": 10
            },
            "end": {
              "line": 176,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "nativeOnMobile",
          "type": "boolean | null | undefined",
          "description": "Set to `true` to use the native input automatically on mobile devices, if it available",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 181,
              "column": 10
            },
            "end": {
              "line": 184,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_nativeOnMobileChanged\"",
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "mobileUserAgentTestString",
          "type": "string | null | undefined",
          "description": "When `nativeOnMobile` is set to `true` this string is used to test the userAgent for a mobile device",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 189,
              "column": 10
            },
            "end": {
              "line": 193,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_nativeOnMobileChanged\"",
              "attributeType": "String"
            }
          },
          "defaultValue": "\"mM]obi|[tT]ablet|[aA]ndroid\"",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "opened",
          "type": "boolean | null | undefined",
          "description": "if `true` the picker is opened",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 198,
              "column": 10
            },
            "end": {
              "line": 203,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "horizontalAlign",
          "type": "string | null | undefined",
          "description": "The orientation against which to align the element horizontally\nrelative to the related input element. Possible values are \"left\", \"right\", \"center\", \"auto\". (comparable to `iron-fit-behavior` and its `no-overlap`-attribute)",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 209,
              "column": 10
            },
            "end": {
              "line": 213,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"auto\"",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "verticalAlign",
          "type": "string | null | undefined",
          "description": "The orientation against which to align the element vertically\nrelative to the related input element. Possible values are \"top\", \"bottom\", \"middle\", \"auto\". (comparable to `iron-fit-behavior` and its `no-overlap`-attribute)",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 219,
              "column": 10
            },
            "end": {
              "line": 223,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"auto\"",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "autoConfirm",
          "type": "boolean | null | undefined",
          "description": "Set to `true` to make the input auto-confirming",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 228,
              "column": 10
            },
            "end": {
              "line": 231,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_autoConfirmChanged\"",
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "noCancelOnEscKey",
          "type": "boolean | null | undefined",
          "description": "Set to `true` to disable canceling the overlay with the ESC key.",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 236,
              "column": 10
            },
            "end": {
              "line": 239,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "noTip",
          "type": "boolean | null | undefined",
          "description": "Set to `true` to disable the tip of the picker",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 252,
              "column": 10
            },
            "end": {
              "line": 255,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "confirmedValue",
          "type": "Object | null | undefined",
          "description": "The confirmed value. When `auto-confirm` is not set, the value will only change, when you confirm.",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 260,
              "column": 10
            },
            "end": {
              "line": 263,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "confirmedDatetime",
          "type": "string | null | undefined",
          "description": "The confirmed datetime. When `auto-confirm` is not set, the datetime will only change, when you confirm.",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 154,
              "column": 10
            },
            "end": {
              "line": 157,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "hideNowButton",
          "type": "boolean | null | undefined",
          "description": "Set to `true` to hide the `now`-button",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 162,
              "column": 10
            },
            "end": {
              "line": 164,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_hasNative",
          "type": "?",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 40,
              "column": 6
            },
            "end": {
              "line": 42,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        }
      ],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 283,
              "column": 6
            },
            "end": {
              "line": 287,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "fit",
          "description": "Positions and fits the overlay into the `fitInto` element.",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/overlay-picker-mixin.html",
            "start": {
              "line": 128,
              "column": 6
            },
            "end": {
              "line": 130,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "OverlayPickerMixin"
        },
        {
          "name": "open",
          "description": "open the picker",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 396,
              "column": 6
            },
            "end": {
              "line": 409,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "notifyResize",
          "description": "notify manually the overlay to resize",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/overlay-picker-mixin.html",
            "start": {
              "line": 140,
              "column": 6
            },
            "end": {
              "line": 142,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "OverlayPickerMixin"
        },
        {
          "name": "_attachDom",
          "description": "attach dom with `delegatesFocus: true` so that the element is also focussed while its's children are too, and to autofocus to first tabable",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 103,
              "column": 6
            },
            "end": {
              "line": 112,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom"
            }
          ],
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "validate",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 384,
              "column": 6
            },
            "end": {
              "line": 391,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_computeInvalid",
          "description": "defines whether the value is set",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 130,
              "column": 6
            },
            "end": {
              "line": 132,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "[Object]"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_validate",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 141,
              "column": 6
            },
            "end": {
              "line": 143,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "Object",
              "description": "value to validate"
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "true, if the value is valid"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_computeValueIsSet",
          "description": "defines whether the value is set",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 149,
              "column": 6
            },
            "end": {
              "line": 151,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "[Object]"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_isSet",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 159,
              "column": 6
            },
            "end": {
              "line": 161,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "Object",
              "description": "value to test"
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "true, if the value is set"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_valueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 474,
              "column": 6
            },
            "end": {
              "line": 483,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_defaultChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 516,
              "column": 6
            },
            "end": {
              "line": 521,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "def"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_createReflectPropertyToValueObserver",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 180,
              "column": 6
            },
            "end": {
              "line": 190,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "prop"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_reflectPropertyToValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 192,
              "column": 6
            },
            "end": {
              "line": 194,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_reflectValueToProperty",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 196,
              "column": 6
            },
            "end": {
              "line": 198,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_localeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 96,
              "column": 6
            },
            "end": {
              "line": 283,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "locale"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "_shouldPropertyChange",
          "description": "overwritten of polymer to handle -0",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 34,
              "column": 6
            },
            "end": {
              "line": 40,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property"
            },
            {
              "name": "value"
            },
            {
              "name": "old"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "now",
          "description": "Sets value to the actual date",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 304,
              "column": 6
            },
            "end": {
              "line": 320,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "setDate",
          "description": "sets date to all necessary properties",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 326,
              "column": 6
            },
            "end": {
              "line": 390,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date",
              "description": "[the date to set]"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "resetDate",
          "description": "resets the date (if `default` is set, it will be used for the new value)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 396,
              "column": 6
            },
            "end": {
              "line": 433,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "Event",
              "description": "[a causing event will not propagated]"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_defaultValueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 435,
              "column": 6
            },
            "end": {
              "line": 442,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "def"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computeDefaultValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 444,
              "column": 6
            },
            "end": {
              "line": 446,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "def"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computeDatetime",
          "description": "modify date components of a date-object. it needs to be applied or called on a date object",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 460,
              "column": 6
            },
            "end": {
              "line": 537,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "year",
              "type": "number"
            },
            {
              "name": "month",
              "type": "number"
            },
            {
              "name": "day",
              "type": "number"
            },
            {
              "name": "hour",
              "type": "number"
            },
            {
              "name": "minute",
              "type": "number"
            },
            {
              "name": "second",
              "type": "number"
            },
            {
              "name": "millisecond",
              "type": "number"
            }
          ],
          "return": {
            "type": "object",
            "desc": "the changed object and the new offset-minutes"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_dateTimeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 539,
              "column": 6
            },
            "end": {
              "line": 566,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "date"
            },
            {
              "name": "time"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_datetimeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 568,
              "column": 6
            },
            "end": {
              "line": 611,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "datetime"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_valueAsNumberChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 613,
              "column": 6
            },
            "end": {
              "line": 620,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_valueAsDateChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 622,
              "column": 6
            },
            "end": {
              "line": 633,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_fromDatetime",
          "description": "compute a date object",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 640,
              "column": 6
            },
            "end": {
              "line": 667,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "datetime"
            }
          ],
          "return": {
            "type": "Date",
            "desc": "date"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_clampChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 669,
              "column": 6
            },
            "end": {
              "line": 677,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "clamp"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_minChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 679,
              "column": 6
            },
            "end": {
              "line": 696,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "min"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_maxChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 698,
              "column": 6
            },
            "end": {
              "line": 715,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "max"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_minMaxValueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 717,
              "column": 6
            },
            "end": {
              "line": 721,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_checkThreshold",
          "description": "test date object against thresholds",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 728,
              "column": 6
            },
            "end": {
              "line": 739,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date"
            }
          ],
          "return": {
            "type": "Date",
            "desc": "ether the threshold when the date is exceeding or the date object itself"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_toDate",
          "description": "get date string from a date object",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 746,
              "column": 6
            },
            "end": {
              "line": 752,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date",
              "description": "the Date to serialize"
            }
          ],
          "return": {
            "type": "String",
            "desc": "date string"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_toTime",
          "description": "get UTC time string from a date object",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 759,
              "column": 6
            },
            "end": {
              "line": 764,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date",
              "description": "the Date to serialize"
            }
          ],
          "return": {
            "type": "String",
            "desc": "date string"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_toUTCDate",
          "description": "get UTC date string from a date object",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 771,
              "column": 6
            },
            "end": {
              "line": 777,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date",
              "description": "the Date to serialize"
            }
          ],
          "return": {
            "type": "String",
            "desc": "date string"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_toUTCTime",
          "description": "get UTC time string from a date object",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 784,
              "column": 6
            },
            "end": {
              "line": 789,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date",
              "description": "the Date to serialize"
            }
          ],
          "return": {
            "type": "String",
            "desc": "time string"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "__toDate",
          "description": "get date string from date components",
          "privacy": "private",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 798,
              "column": 6
            },
            "end": {
              "line": 800,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "year",
              "type": "Number"
            },
            {
              "name": "month",
              "type": "Number"
            },
            {
              "name": "day",
              "type": "Number"
            }
          ],
          "return": {
            "type": "String",
            "desc": "date string"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "__toTime",
          "description": "get time string from date components",
          "privacy": "private",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 810,
              "column": 6
            },
            "end": {
              "line": 812,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hour",
              "type": "Number"
            },
            {
              "name": "minute",
              "type": "Number"
            },
            {
              "name": "second",
              "type": "Number"
            },
            {
              "name": "millisecond",
              "type": "Number"
            }
          ],
          "return": {
            "type": "String",
            "desc": "time string"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_clampUTC",
          "description": "clamp UTC values",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 820,
              "column": 6
            },
            "end": {
              "line": 837,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date",
              "description": "the Date to clamp"
            },
            {
              "name": "clamp",
              "type": "String",
              "description": "the date component to clamp"
            }
          ],
          "return": {
            "type": "Date",
            "desc": "the clamped date"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_pad",
          "description": "pad a string with 0",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 845,
              "column": 6
            },
            "end": {
              "line": 851,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "n",
              "type": "Number",
              "description": "number to pad"
            },
            {
              "name": "padLength",
              "type": "Number",
              "description": "total length of strings"
            }
          ],
          "return": {
            "type": "String",
            "desc": "padded string"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_hour12Changed",
          "description": "`hour12` is the hour in hour12-format, that starts is minimal 1 and maximal 12, midnight is at 12am and noon is 12pm",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 856,
              "column": 6
            },
            "end": {
              "line": 860,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hour12"
            },
            {
              "name": "old"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_isAmChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 862,
              "column": 6
            },
            "end": {
              "line": 866,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "isAm"
            },
            {
              "name": "old"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_ifClamped",
          "description": "clamp to date component",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 871,
              "column": 6
            },
            "end": {
              "line": 876,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "clamp"
            },
            {
              "name": "comp"
            },
            {
              "name": "hidden"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_checkDefaultTimezone",
          "description": "set the default timezone if needed",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 882,
              "column": 6
            },
            "end": {
              "line": 895,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computeTimezoneShift",
          "description": "correct a timezone shift when date changes from winter to summertime (locally)",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 901,
              "column": 6
            },
            "end": {
              "line": 910,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_timezoneChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 912,
              "column": 6
            },
            "end": {
              "line": 932,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "timezone"
            },
            {
              "name": "oldValue"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_offsetMinutesChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 934,
              "column": 6
            },
            "end": {
              "line": 942,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "offsetMinutes"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_timeZoneHoursMinutesChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 944,
              "column": 6
            },
            "end": {
              "line": 963,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hour"
            },
            {
              "name": "minute"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computeTimezone",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 965,
              "column": 6
            },
            "end": {
              "line": 987,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "offsetMinutes"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computeTimezoneOffset",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 989,
              "column": 6
            },
            "end": {
              "line": 1019,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "timezone"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computeMaxDayOfMonth",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 1021,
              "column": 6
            },
            "end": {
              "line": 1029,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "year"
            },
            {
              "name": "month"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computePartsStep",
          "description": "compute the steps for the related inputs. The day-input is the highest modified input allthough if the step is higher than a day in seconds it might also change month- or year-inputs.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 104,
              "column": 6
            },
            "end": {
              "line": 185,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "step"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeFormMixin"
        },
        {
          "name": "_computePartsDisabled",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 187,
              "column": 6
            },
            "end": {
              "line": 205,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "change"
            },
            {
              "name": "disabled"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeFormMixin"
        },
        {
          "name": "_computeOr",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 318,
              "column": 6
            },
            "end": {
              "line": 320,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "a"
            },
            {
              "name": "b"
            }
          ],
          "inheritedFrom": "DatetimeInputMixin"
        },
        {
          "name": "_computePartOrder",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 322,
              "column": 6
            },
            "end": {
              "line": 324,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "first"
            }
          ],
          "inheritedFrom": "DatetimeInputMixin"
        },
        {
          "name": "_computeResetButtonIsInvisible",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 326,
              "column": 6
            },
            "end": {
              "line": 328,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "valueIsSet"
            },
            {
              "name": "defaultValue"
            },
            {
              "name": "valueAsNumber"
            }
          ],
          "inheritedFrom": "DatetimeInputMixin"
        },
        {
          "name": "_switchAm",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "time-element.html",
            "start": {
              "line": 187,
              "column": 6
            },
            "end": {
              "line": 190,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "TimeElementPattern"
        },
        {
          "name": "_computeMultipleClamp",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "time-element.html",
            "start": {
              "line": 183,
              "column": 6
            },
            "end": {
              "line": 185,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "clamp"
            },
            {
              "name": "prop1"
            },
            {
              "name": "prop2"
            }
          ],
          "inheritedFrom": "TimeElementPattern"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 289,
              "column": 6
            },
            "end": {
              "line": 293,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_addSwitchListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 89,
              "column": 6
            },
            "end": {
              "line": 104,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "_removeSwitchListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 106,
              "column": 6
            },
            "end": {
              "line": 116,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "_checkKeycodeSwitch",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 118,
              "column": 6
            },
            "end": {
              "line": 126,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "__getEventTarget",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 128,
              "column": 6
            },
            "end": {
              "line": 142,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            },
            {
              "name": "classSelector"
            }
          ],
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "__increm",
          "description": "increment property by being called by an Event on an `switch`-Node",
          "privacy": "private",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 149,
              "column": 6
            },
            "end": {
              "line": 176,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "Event",
              "description": "Event it was called on"
            },
            {
              "name": "once",
              "type": "Boolean",
              "description": "if true, it doesn't setup an intervall to continue incrementing (e.g. keyPressEvents are fired itself repeatedly while the key is pressed)"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "__incremProp",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 178,
              "column": 6
            },
            "end": {
              "line": 180,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "prop"
            },
            {
              "name": "step"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "_getDefaultForProp",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 182,
              "column": 6
            },
            "end": {
              "line": 184,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "prop"
            }
          ],
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "_stopActiveIncremJob",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 186,
              "column": 6
            },
            "end": {
              "line": 199,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "_dwellTimeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 201,
              "column": 6
            },
            "end": {
              "line": 207,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dwellTime"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "_dwellDelayChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 209,
              "column": 6
            },
            "end": {
              "line": 215,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dwellDelay"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "_addEventListenerToNode",
          "description": "Add the event listener to the node if it is a gestures event.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../polymer/lib/mixins/gesture-event-listeners.html",
            "start": {
              "line": 55,
              "column": 6
            },
            "end": {
              "line": 59,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node",
              "type": "!Node",
              "description": "Node to add event listener to"
            },
            {
              "name": "eventName",
              "type": "string",
              "description": "Name of event"
            },
            {
              "name": "handler",
              "type": "function (!Event): void",
              "description": "Listener function to add"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.GestureEventListeners"
        },
        {
          "name": "_removeEventListenerFromNode",
          "description": "Remove the event listener to the node if it is a gestures event.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../polymer/lib/mixins/gesture-event-listeners.html",
            "start": {
              "line": 69,
              "column": 6
            },
            "end": {
              "line": 73,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node",
              "type": "!Node",
              "description": "Node to remove event listener from"
            },
            {
              "name": "eventName",
              "type": "string",
              "description": "Name of event"
            },
            {
              "name": "handler",
              "type": "function (!Event): void",
              "description": "Listener function to remove"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.GestureEventListeners"
        },
        {
          "name": "_addPickerTransitionEndListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 295,
              "column": 6
            },
            "end": {
              "line": 302,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_removePickerTransitionEndListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 304,
              "column": 6
            },
            "end": {
              "line": 306,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_onPickerTransitionEnd",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 308,
              "column": 6
            },
            "end": {
              "line": 313,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_addCancelOnClickListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 315,
              "column": 6
            },
            "end": {
              "line": 322,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_removeCancelOnClickListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 324,
              "column": 6
            },
            "end": {
              "line": 327,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_stopPropagation",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 329,
              "column": 6
            },
            "end": {
              "line": 332,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_addKeyListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 334,
              "column": 6
            },
            "end": {
              "line": 337,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_removeKeyListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 339,
              "column": 6
            },
            "end": {
              "line": 342,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_nativeOnMobileChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 344,
              "column": 6
            },
            "end": {
              "line": 357,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_checkKeycode",
          "description": "key press event handler",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 363,
              "column": 6
            },
            "end": {
              "line": 382,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "[type]",
              "description": "Event"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "close",
          "description": "close the picker",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 415,
              "column": 6
            },
            "end": {
              "line": 423,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "[type]",
              "description": "Event"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "toggle",
          "description": "toggle the picker",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 429,
              "column": 6
            },
            "end": {
              "line": 437,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "[type]",
              "description": "Event"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "confirm",
          "description": "confirms the input",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 443,
              "column": 6
            },
            "end": {
              "line": 452,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "[type]",
              "description": "Event"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "cancel",
          "description": "cancels the input",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 458,
              "column": 6
            },
            "end": {
              "line": 472,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "[type]",
              "description": "Event"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_confirmedValueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 295,
              "column": 6
            },
            "end": {
              "line": 303,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "confirmedValue"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_reset",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 493,
              "column": 6
            },
            "end": {
              "line": 498,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_setConfirmedValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 305,
              "column": 6
            },
            "end": {
              "line": 312,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_resetValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 506,
              "column": 6
            },
            "end": {
              "line": 510,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_autoConfirmChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 512,
              "column": 6
            },
            "end": {
              "line": 514,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "autoConfirm"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_computeAnd",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 181,
              "column": 6
            },
            "end": {
              "line": 183,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "a"
            },
            {
              "name": "b"
            }
          ],
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_computeNativeStep",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 185,
              "column": 6
            },
            "end": {
              "line": 204,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "step"
            },
            {
              "name": "clamp"
            }
          ],
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_computeNativeValueAsNumber",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 206,
              "column": 6
            },
            "end": {
              "line": 227,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "native"
            },
            {
              "name": "valueAsNumber"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_reflectNativeValueAsNumber",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 229,
              "column": 6
            },
            "end": {
              "line": 253,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "native"
            },
            {
              "name": "nativeValueAsNumber"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_setDate",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 255,
              "column": 6
            },
            "end": {
              "line": 262,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_confirmedDatetimeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 264,
              "column": 6
            },
            "end": {
              "line": 276,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "confirmedDatetime"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_resetDate",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 314,
              "column": 6
            },
            "end": {
              "line": 317,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_resetConfirmedValues",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 319,
              "column": 6
            },
            "end": {
              "line": 327,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_resetValues",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 329,
              "column": 6
            },
            "end": {
              "line": 336,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_confirmedDateTimeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "time-picker.html",
            "start": {
              "line": 39,
              "column": 6
            },
            "end": {
              "line": 54,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "confirmedDate"
            },
            {
              "name": "confirmedTime"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "TimePickerPattern"
        },
        {
          "name": "_setConfirmedValues",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "time-picker.html",
            "start": {
              "line": 56,
              "column": 6
            },
            "end": {
              "line": 76,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "TimePickerPattern"
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/overlay-elements.html",
          "description": "overlay demo"
        },
        {
          "url": "demo/music-album.html",
          "description": "music album demo"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 34,
          "column": 4
        },
        "end": {
          "line": 43,
          "column": 5
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "OverlayTimePicker",
      "attributes": [
        {
          "name": "always-on-top",
          "description": "Set to true to keep overlay always on top.",
          "sourceRange": {
            "file": "../input-picker-pattern/overlay-picker-mixin.html",
            "start": {
              "line": 21,
              "column": 10
            },
            "end": {
              "line": 23,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "OverlayPickerMixin"
        },
        {
          "name": "no-overlap",
          "description": "Will position the element around the positionTarget without overlapping it.",
          "sourceRange": {
            "file": "../input-picker-pattern/overlay-picker-mixin.html",
            "start": {
              "line": 27,
              "column": 10
            },
            "end": {
              "line": 30,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "OverlayPickerMixin"
        },
        {
          "name": "with-backdrop",
          "description": "Set to true to display a backdrop behind the overlay. It traps the focus\nwithin the light DOM of the overlay.",
          "sourceRange": {
            "file": "../input-picker-pattern/overlay-picker-mixin.html",
            "start": {
              "line": 35,
              "column": 10
            },
            "end": {
              "line": 38,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "OverlayPickerMixin"
        },
        {
          "name": "no-cancel-on-outside-click",
          "description": "Set to `true` to disable canceling the dropdown by clicking outside the picker.",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 244,
              "column": 10
            },
            "end": {
              "line": 247,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "dynamic-align",
          "description": "If true, it will use `horizontalAlign` and `verticalAlign` values as preferred alignment\nand if there's not enough space, it will pick the values which minimize the cropping.",
          "sourceRange": {
            "file": "../input-picker-pattern/overlay-picker-mixin.html",
            "start": {
              "line": 51,
              "column": 10
            },
            "end": {
              "line": 54,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "OverlayPickerMixin"
        },
        {
          "name": "auto-fit-on-attach",
          "description": "Set to true to auto-fit on attach.",
          "sourceRange": {
            "file": "../input-picker-pattern/overlay-picker-mixin.html",
            "start": {
              "line": 59,
              "column": 10
            },
            "end": {
              "line": 62,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "OverlayPickerMixin"
        },
        {
          "name": "fit-into",
          "description": "The element to fit the overlay into. By default it is the window.",
          "sourceRange": {
            "file": "../input-picker-pattern/overlay-picker-mixin.html",
            "start": {
              "line": 67,
              "column": 10
            },
            "end": {
              "line": 69,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "OverlayPickerMixin"
        },
        {
          "name": "position-target",
          "description": "The element that should be used to position the overlay. If not set, it will\ndefault to the polyfill node.",
          "sourceRange": {
            "file": "../input-picker-pattern/overlay-picker-mixin.html",
            "start": {
              "line": 75,
              "column": 10
            },
            "end": {
              "line": 77,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Element | null | undefined",
          "inheritedFrom": "OverlayPickerMixin"
        },
        {
          "name": "name",
          "description": "name of the input",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 16,
              "column": 10
            },
            "end": {
              "line": 18,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "title",
          "description": "description for the element and can be used as a hint for invalid values",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 23,
              "column": 10
            },
            "end": {
              "line": 26,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "disabled",
          "description": "disables the input",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 31,
              "column": 10
            },
            "end": {
              "line": 35,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "required",
          "description": "required attribute",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 40,
              "column": 10
            },
            "end": {
              "line": 44,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "property-for-value",
          "description": "defines the property that should be used for the value",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 49,
              "column": 10
            },
            "end": {
              "line": 52,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "invalid",
          "description": "required attribute",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 57,
              "column": 10
            },
            "end": {
              "line": 63,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "default",
          "description": "default value of the value, when it does not validate",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 77,
              "column": 10
            },
            "end": {
              "line": 80,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "value",
          "description": "value of the input",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 85,
              "column": 10
            },
            "end": {
              "line": 88,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "locale",
          "description": "The current locale",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 19,
              "column": 10
            },
            "end": {
              "line": 23,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "decimal-separator",
          "description": "locale separator for local decimal values",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 29,
              "column": 10
            },
            "end": {
              "line": 33,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "date-separator",
          "description": "Separator for local date values (date-string is still in ISO-Format)",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 39,
              "column": 10
            },
            "end": {
              "line": 43,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "time-separator",
          "description": "Separator for local time values (time-string is still in ISO-Format)",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 49,
              "column": 10
            },
            "end": {
              "line": 53,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "am-string",
          "description": "locale representation of 'AM'",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 58,
              "column": 10
            },
            "end": {
              "line": 62,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "pm-string",
          "description": "locale representation of 'PM'",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 67,
              "column": 10
            },
            "end": {
              "line": 71,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "date-order",
          "description": "order of date-parts",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 76,
              "column": 10
            },
            "end": {
              "line": 86,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "year",
          "description": "The year of the selected date",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 48,
              "column": 10
            },
            "end": {
              "line": 51,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "month",
          "description": "The month of the selected date (starts with 1)",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 56,
              "column": 10
            },
            "end": {
              "line": 59,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "day",
          "description": "The day of the selected date",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 64,
              "column": 10
            },
            "end": {
              "line": 67,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour",
          "description": "The hour of the selected time",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 72,
              "column": 10
            },
            "end": {
              "line": 75,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour12",
          "description": "hour in 12-hour-format",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 81,
              "column": 10
            },
            "end": {
              "line": 85,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "is-am",
          "description": "true, when A.M. (when `hour` < 12)",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 91,
              "column": 10
            },
            "end": {
              "line": 95,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "minute",
          "description": "The minute of the selected time",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 100,
              "column": 10
            },
            "end": {
              "line": 103,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "second",
          "description": "The second of the selected time",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 108,
              "column": 10
            },
            "end": {
              "line": 111,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "millisecond",
          "description": "The millisecond of the selected time",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 116,
              "column": 10
            },
            "end": {
              "line": 119,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "datetime",
          "description": "the selected date and time (format: iso8601)",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 124,
              "column": 10
            },
            "end": {
              "line": 127,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "date",
          "description": "the selected date (format: iso8601)",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 132,
              "column": 10
            },
            "end": {
              "line": 135,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "time",
          "description": "the selected time (format: iso8601)",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 140,
              "column": 10
            },
            "end": {
              "line": 143,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "value-as-date",
          "description": "The date-object of the selected date",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 148,
              "column": 10
            },
            "end": {
              "line": 152,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Date | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "value-as-number",
          "description": "The value of the selected date",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 157,
              "column": 10
            },
            "end": {
              "line": 161,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "min",
          "description": "The minimal date, could be a number, a date-object or an iso-string in time, date or datetime-notation",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 181,
              "column": 10
            },
            "end": {
              "line": 185,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "max",
          "description": "The maximal date, could be a number, a date-object or an iso-string in time, date or datetime-notation",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 197,
              "column": 10
            },
            "end": {
              "line": 201,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour12-format",
          "description": "when true, 12-hour time format, else 24-hour",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 214,
              "column": 10
            },
            "end": {
              "line": 218,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "clamp",
          "description": "Clamp datetime to a property\npossible values:'month', 'day', 'hour', 'minute', 'second', 'millisecond'",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 224,
              "column": 10
            },
            "end": {
              "line": 228,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "timezone",
          "description": "The timezone offset in '±hh:mm' format",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 233,
              "column": 10
            },
            "end": {
              "line": 237,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "offset-minutes",
          "description": "The offset minutes of the set timezone",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 242,
              "column": 10
            },
            "end": {
              "line": 246,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "step",
          "description": "If set the step defines the step a date should be incremented (in seconds). The input for the most inferior standing that would create an integer step is used to increment the value.\nFor example, if the **step** is:\n + **0.05**: the millisecond-input will increment the value by 50 (50 milliseconds), the other inputs behaive as expected\n + **1.05**: the millisecond-input will increment the value by 1050 (1 second and 50 millisecond), the other inputs behaive as expected\n + **2**: the millisecond-input will be disabled, the second-input will increment the value by 2000 (2 seconds), the other inputs behaive as expected\n + **180**: the millisecond-input and the second-input will be disabled, the minute-input will increment the value by 180000 (3 minutes), the other inputs behaive as expected\nIf `step=\"0\"` all inputs will be disabled, else if the step is below _0.001_ the step will be set to **0.001**. The most supirior input that will become the given step is the day-input.",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 33,
              "column": 10
            },
            "end": {
              "line": 36,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeFormMixin"
        },
        {
          "name": "hide-reset-button",
          "description": "if true, the reset button is hidden",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 298,
              "column": 10
            },
            "end": {
              "line": 301,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "DatetimeInputMixin"
        },
        {
          "name": "with-timezone",
          "description": "if true, timezone inputs are shown",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 306,
              "column": 10
            },
            "end": {
              "line": 309,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "DatetimeInputMixin"
        },
        {
          "name": "dwell-time",
          "description": "dwell time of incrementing inputs by the buttons in milliseconds. It is minimal 15 milliseconds.",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 33,
              "column": 10
            },
            "end": {
              "line": 37,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "dwell-delay",
          "description": "delay when incrementing inputs by the buttons in milliseconds. It is minimal 15 milliseconds.",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 43,
              "column": 10
            },
            "end": {
              "line": 47,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "native",
          "description": "Set to `true` to use the native input, if it available",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 173,
              "column": 10
            },
            "end": {
              "line": 176,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "native-on-mobile",
          "description": "Set to `true` to use the native input automatically on mobile devices, if it available",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 181,
              "column": 10
            },
            "end": {
              "line": 184,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "mobile-user-agent-test-string",
          "description": "When `nativeOnMobile` is set to `true` this string is used to test the userAgent for a mobile device",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 189,
              "column": 10
            },
            "end": {
              "line": 193,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "opened",
          "description": "if `true` the picker is opened",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 198,
              "column": 10
            },
            "end": {
              "line": 203,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "horizontal-align",
          "description": "The orientation against which to align the element horizontally\nrelative to the related input element. Possible values are \"left\", \"right\", \"center\", \"auto\". (comparable to `iron-fit-behavior` and its `no-overlap`-attribute)",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 209,
              "column": 10
            },
            "end": {
              "line": 213,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "vertical-align",
          "description": "The orientation against which to align the element vertically\nrelative to the related input element. Possible values are \"top\", \"bottom\", \"middle\", \"auto\". (comparable to `iron-fit-behavior` and its `no-overlap`-attribute)",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 219,
              "column": 10
            },
            "end": {
              "line": 223,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "auto-confirm",
          "description": "Set to `true` to make the input auto-confirming",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 228,
              "column": 10
            },
            "end": {
              "line": 231,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "no-cancel-on-esc-key",
          "description": "Set to `true` to disable canceling the overlay with the ESC key.",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 236,
              "column": 10
            },
            "end": {
              "line": 239,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "no-tip",
          "description": "Set to `true` to disable the tip of the picker",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 252,
              "column": 10
            },
            "end": {
              "line": 255,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "confirmed-value",
          "description": "The confirmed value. When `auto-confirm` is not set, the value will only change, when you confirm.",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 260,
              "column": 10
            },
            "end": {
              "line": 263,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "confirmed-datetime",
          "description": "The confirmed datetime. When `auto-confirm` is not set, the datetime will only change, when you confirm.",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 154,
              "column": 10
            },
            "end": {
              "line": 157,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "hide-now-button",
          "description": "Set to `true` to hide the `now`-button",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 162,
              "column": 10
            },
            "end": {
              "line": 164,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "DatetimePickerMixin"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "input-picker-closed",
          "description": "input-picker-closed\nFired after a picker has been closed.",
          "metadata": {},
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "type": "CustomEvent",
          "name": "input-picker-opened",
          "description": "input-picker-opened\nFired when a picker has been opened.",
          "metadata": {},
          "inheritedFrom": "InputPickerPattern"
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "overlay-time-picker",
      "mixins": [
        "OverlayPickerMixin",
        "TimePickerPattern"
      ]
    }
  ],
  "mixins": [
    {
      "description": "mixin to extend an element with a test for an expected input type and implement a polyfill, when wanted or needed",
      "summary": "",
      "path": "datetime-picker-mixin.html",
      "properties": [
        {
          "name": "name",
          "type": "string | null | undefined",
          "description": "name of the input",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 16,
              "column": 10
            },
            "end": {
              "line": 18,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "title",
          "type": "string | null | undefined",
          "description": "description for the element and can be used as a hint for invalid values",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 23,
              "column": 10
            },
            "end": {
              "line": 26,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "disabled",
          "type": "boolean | null | undefined",
          "description": "disables the input",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 31,
              "column": 10
            },
            "end": {
              "line": 35,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "required",
          "type": "boolean | null | undefined",
          "description": "required attribute",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 40,
              "column": 10
            },
            "end": {
              "line": 44,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "propertyForValue",
          "type": "string | null | undefined",
          "description": "defines the property that should be used for the value",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 49,
              "column": 10
            },
            "end": {
              "line": 52,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_createReflectPropertyToValueObserver\"",
              "attributeType": "String"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "invalid",
          "type": "boolean | null | undefined",
          "description": "required attribute",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 57,
              "column": 10
            },
            "end": {
              "line": 63,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_valueIsSet",
          "type": "boolean | null | undefined",
          "description": "is true when the value is not undefined",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 68,
              "column": 10
            },
            "end": {
              "line": 72,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "default",
          "type": "Object | null | undefined",
          "description": "default value of the value, when it does not validate",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 77,
              "column": 10
            },
            "end": {
              "line": 80,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_defaultChanged\"",
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "value",
          "type": "Object | null | undefined",
          "description": "value of the input",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 85,
              "column": 10
            },
            "end": {
              "line": 88,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "locale",
          "type": "string | null | undefined",
          "description": "The current locale",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 19,
              "column": 10
            },
            "end": {
              "line": 23,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "decimalSeparator",
          "type": "string",
          "description": "locale separator for local decimal values",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 29,
              "column": 10
            },
            "end": {
              "line": 33,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "dateSeparator",
          "type": "string",
          "description": "Separator for local date values (date-string is still in ISO-Format)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 39,
              "column": 10
            },
            "end": {
              "line": 43,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "timeSeparator",
          "type": "string",
          "description": "Separator for local time values (time-string is still in ISO-Format)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 49,
              "column": 10
            },
            "end": {
              "line": 53,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "amString",
          "type": "string | null | undefined",
          "description": "locale representation of 'AM'",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 58,
              "column": 10
            },
            "end": {
              "line": 62,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "pmString",
          "type": "string | null | undefined",
          "description": "locale representation of 'PM'",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 67,
              "column": 10
            },
            "end": {
              "line": 71,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "dateOrder",
          "type": "Object | null | undefined",
          "description": "order of date-parts",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 76,
              "column": 10
            },
            "end": {
              "line": 86,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Object"
            }
          },
          "defaultValue": "{\"parts\":[],\"timeFirst\":false,\"dateFirst\":true}",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "year",
          "type": "number | null | undefined",
          "description": "The year of the selected date",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 48,
              "column": 10
            },
            "end": {
              "line": 51,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "month",
          "type": "number | null | undefined",
          "description": "The month of the selected date (starts with 1)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 56,
              "column": 10
            },
            "end": {
              "line": 59,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "day",
          "type": "number | null | undefined",
          "description": "The day of the selected date",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 64,
              "column": 10
            },
            "end": {
              "line": 67,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour",
          "type": "number | null | undefined",
          "description": "The hour of the selected time",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 72,
              "column": 10
            },
            "end": {
              "line": 75,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour12",
          "type": "number",
          "description": "hour in 12-hour-format",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 81,
              "column": 10
            },
            "end": {
              "line": 85,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_hour12Changed\"",
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "isAm",
          "type": "boolean",
          "description": "true, when A.M. (when `hour` < 12)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 91,
              "column": 10
            },
            "end": {
              "line": 95,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_isAmChanged\"",
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "minute",
          "type": "number | null | undefined",
          "description": "The minute of the selected time",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 100,
              "column": 10
            },
            "end": {
              "line": 103,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "second",
          "type": "number | null | undefined",
          "description": "The second of the selected time",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 108,
              "column": 10
            },
            "end": {
              "line": 111,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "millisecond",
          "type": "number | null | undefined",
          "description": "The millisecond of the selected time",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 116,
              "column": 10
            },
            "end": {
              "line": 119,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "datetime",
          "type": "string | null | undefined",
          "description": "the selected date and time (format: iso8601)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 124,
              "column": 10
            },
            "end": {
              "line": 127,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "date",
          "type": "string | null | undefined",
          "description": "the selected date (format: iso8601)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 132,
              "column": 10
            },
            "end": {
              "line": 135,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "time",
          "type": "string | null | undefined",
          "description": "the selected time (format: iso8601)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 140,
              "column": 10
            },
            "end": {
              "line": 143,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "valueAsDate",
          "type": "Date | null | undefined",
          "description": "The date-object of the selected date",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 148,
              "column": 10
            },
            "end": {
              "line": 152,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_valueAsDateChanged\"",
              "attributeType": "Date"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "valueAsNumber",
          "type": "number | null | undefined",
          "description": "The value of the selected date",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 157,
              "column": 10
            },
            "end": {
              "line": 161,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_valueAsNumberChanged\"",
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_defaultValue",
          "type": "number | null | undefined",
          "description": "value of the default date",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 173,
              "column": 10
            },
            "end": {
              "line": 176,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "min",
          "type": "Object | null | undefined",
          "description": "The minimal date, could be a number, a date-object or an iso-string in time, date or datetime-notation",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 181,
              "column": 10
            },
            "end": {
              "line": 185,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_minChanged\"",
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_minValue",
          "type": "number | null | undefined",
          "description": "value if the minimum date",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 190,
              "column": 10
            },
            "end": {
              "line": 192,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "max",
          "type": "Object | null | undefined",
          "description": "The maximal date, could be a number, a date-object or an iso-string in time, date or datetime-notation",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 197,
              "column": 10
            },
            "end": {
              "line": 201,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_maxChanged\"",
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_maxValue",
          "type": "number | null | undefined",
          "description": "value if the maximum date",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 206,
              "column": 10
            },
            "end": {
              "line": 208,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour12Format",
          "type": "boolean",
          "description": "when true, 12-hour time format, else 24-hour",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 214,
              "column": 10
            },
            "end": {
              "line": 218,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "clamp",
          "type": "string | null | undefined",
          "description": "Clamp datetime to a property\npossible values:'month', 'day', 'hour', 'minute', 'second', 'millisecond'",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 224,
              "column": 10
            },
            "end": {
              "line": 228,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_clampChanged\"",
              "attributeType": "String"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "timezone",
          "type": "string | null | undefined",
          "description": "The timezone offset in '±hh:mm' format",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 233,
              "column": 10
            },
            "end": {
              "line": 237,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_timezoneChanged\"",
              "attributeType": "String"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "offsetMinutes",
          "type": "number | null | undefined",
          "description": "The offset minutes of the set timezone",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 242,
              "column": 10
            },
            "end": {
              "line": 246,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_offsetMinutesChanged\"",
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_timeZoneHours",
          "type": "number | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 248,
              "column": 10
            },
            "end": {
              "line": 250,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_timeZoneMinutes",
          "type": "number | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 252,
              "column": 10
            },
            "end": {
              "line": 254,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_recentLocalTimezoneOffset",
          "type": "number | null | undefined",
          "description": "The offset minute of the current datetime",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 259,
              "column": 10
            },
            "end": {
              "line": 261,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_timeOnly",
          "type": "boolean | null | undefined",
          "description": "if true perspective starts at 0 (1970-01-01)",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 266,
              "column": 10
            },
            "end": {
              "line": 269,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_maxDayOfMonth",
          "type": "number",
          "description": "exclusive max day of month",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 275,
              "column": 10
            },
            "end": {
              "line": 278,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_dateLocked",
          "type": "boolean | null | undefined",
          "description": "lock to date and ignore time",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 283,
              "column": 10
            },
            "end": {
              "line": 286,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "step",
          "type": "number | null | undefined",
          "description": "If set the step defines the step a date should be incremented (in seconds). The input for the most inferior standing that would create an integer step is used to increment the value.\nFor example, if the **step** is:\n + **0.05**: the millisecond-input will increment the value by 50 (50 milliseconds), the other inputs behaive as expected\n + **1.05**: the millisecond-input will increment the value by 1050 (1 second and 50 millisecond), the other inputs behaive as expected\n + **2**: the millisecond-input will be disabled, the second-input will increment the value by 2000 (2 seconds), the other inputs behaive as expected\n + **180**: the millisecond-input and the second-input will be disabled, the minute-input will increment the value by 180000 (3 minutes), the other inputs behaive as expected\nIf `step=\"0\"` all inputs will be disabled, else if the step is below _0.001_ the step will be set to **0.001**. The most supirior input that will become the given step is the day-input.",
          "privacy": "public",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 33,
              "column": 10
            },
            "end": {
              "line": 36,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeFormMixin"
        },
        {
          "name": "_partsDisabled",
          "type": "Object | null | undefined",
          "description": "date-parts that are disabled",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 41,
              "column": 10
            },
            "end": {
              "line": 47,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Object"
            }
          },
          "defaultValue": "{}",
          "inheritedFrom": "DatetimeFormMixin"
        },
        {
          "name": "_partsStep",
          "type": "Object | null | undefined",
          "description": "the computed steps for the date-parts",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 52,
              "column": 10
            },
            "end": {
              "line": 65,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "Object"
            }
          },
          "defaultValue": "{\"day\":1,\"hour\":1,\"minute\":1,\"second\":1,\"millisecond\":1}",
          "inheritedFrom": "DatetimeFormMixin"
        },
        {
          "name": "hideResetButton",
          "type": "boolean | null | undefined",
          "description": "if true, the reset button is hidden",
          "privacy": "public",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 298,
              "column": 10
            },
            "end": {
              "line": 301,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "DatetimeInputMixin"
        },
        {
          "name": "withTimezone",
          "type": "boolean | null | undefined",
          "description": "if true, timezone inputs are shown",
          "privacy": "public",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 306,
              "column": 10
            },
            "end": {
              "line": 309,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "DatetimeInputMixin"
        },
        {
          "name": "_resetButtonIsInvisible",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 311,
              "column": 10
            },
            "end": {
              "line": 314,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "DatetimeInputMixin"
        },
        {
          "name": "native",
          "type": "boolean | null | undefined",
          "description": "Set to `true` to use the native input, if it available",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 173,
              "column": 10
            },
            "end": {
              "line": 176,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "nativeOnMobile",
          "type": "boolean | null | undefined",
          "description": "Set to `true` to use the native input automatically on mobile devices, if it available",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 181,
              "column": 10
            },
            "end": {
              "line": 184,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_nativeOnMobileChanged\"",
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "mobileUserAgentTestString",
          "type": "string | null | undefined",
          "description": "When `nativeOnMobile` is set to `true` this string is used to test the userAgent for a mobile device",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 189,
              "column": 10
            },
            "end": {
              "line": 193,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_nativeOnMobileChanged\"",
              "attributeType": "String"
            }
          },
          "defaultValue": "\"mM]obi|[tT]ablet|[aA]ndroid\"",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "opened",
          "type": "boolean | null | undefined",
          "description": "if `true` the picker is opened",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 198,
              "column": 10
            },
            "end": {
              "line": 203,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "horizontalAlign",
          "type": "string | null | undefined",
          "description": "The orientation against which to align the element horizontally\nrelative to the related input element. Possible values are \"left\", \"right\", \"center\", \"auto\". (comparable to `iron-fit-behavior` and its `no-overlap`-attribute)",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 209,
              "column": 10
            },
            "end": {
              "line": 213,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"auto\"",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "verticalAlign",
          "type": "string | null | undefined",
          "description": "The orientation against which to align the element vertically\nrelative to the related input element. Possible values are \"top\", \"bottom\", \"middle\", \"auto\". (comparable to `iron-fit-behavior` and its `no-overlap`-attribute)",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 219,
              "column": 10
            },
            "end": {
              "line": 223,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"auto\"",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "autoConfirm",
          "type": "boolean | null | undefined",
          "description": "Set to `true` to make the input auto-confirming",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 228,
              "column": 10
            },
            "end": {
              "line": 231,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_autoConfirmChanged\"",
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "noCancelOnEscKey",
          "type": "boolean | null | undefined",
          "description": "Set to `true` to disable canceling the overlay with the ESC key.",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 236,
              "column": 10
            },
            "end": {
              "line": 239,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "noCancelOnOutsideClick",
          "type": "boolean | null | undefined",
          "description": "Set to `true` to disable canceling the dropdown by clicking outside the picker.",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 244,
              "column": 10
            },
            "end": {
              "line": 247,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "noTip",
          "type": "boolean | null | undefined",
          "description": "Set to `true` to disable the tip of the picker",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 252,
              "column": 10
            },
            "end": {
              "line": 255,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "confirmedValue",
          "type": "Object | null | undefined",
          "description": "The confirmed value. When `auto-confirm` is not set, the value will only change, when you confirm.",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 260,
              "column": 10
            },
            "end": {
              "line": 263,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "confirmedDatetime",
          "type": "string | null | undefined",
          "description": "The confirmed datetime. When `auto-confirm` is not set, the datetime will only change, when you confirm.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 154,
              "column": 10
            },
            "end": {
              "line": 157,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          }
        },
        {
          "name": "hideNowButton",
          "type": "boolean | null | undefined",
          "description": "Set to `true` to hide the `now`-button",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 162,
              "column": 10
            },
            "end": {
              "line": 164,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_attachDom",
          "description": "attach dom with `delegatesFocus: true` so that the element is also focussed while its's children are too, and to autofocus to first tabable",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 103,
              "column": 6
            },
            "end": {
              "line": 112,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom"
            }
          ],
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 283,
              "column": 6
            },
            "end": {
              "line": 287,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "validate",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 384,
              "column": 6
            },
            "end": {
              "line": 391,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_computeInvalid",
          "description": "defines whether the value is set",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 130,
              "column": 6
            },
            "end": {
              "line": 132,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "[Object]"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_validate",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 141,
              "column": 6
            },
            "end": {
              "line": 143,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "Object",
              "description": "value to validate"
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "true, if the value is valid"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_computeValueIsSet",
          "description": "defines whether the value is set",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 149,
              "column": 6
            },
            "end": {
              "line": 151,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "[Object]"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_isSet",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 159,
              "column": 6
            },
            "end": {
              "line": 161,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "Object",
              "description": "value to test"
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "true, if the value is set"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_valueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 474,
              "column": 6
            },
            "end": {
              "line": 483,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_defaultChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 516,
              "column": 6
            },
            "end": {
              "line": 521,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "def"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_createReflectPropertyToValueObserver",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 180,
              "column": 6
            },
            "end": {
              "line": 190,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "prop"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_reflectPropertyToValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 192,
              "column": 6
            },
            "end": {
              "line": 194,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_reflectValueToProperty",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 196,
              "column": 6
            },
            "end": {
              "line": 198,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_localeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 96,
              "column": 6
            },
            "end": {
              "line": 283,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "locale"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "_shouldPropertyChange",
          "description": "overwritten of polymer to handle -0",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 34,
              "column": 6
            },
            "end": {
              "line": 40,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property"
            },
            {
              "name": "value"
            },
            {
              "name": "old"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "now",
          "description": "Sets value to the actual date",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 304,
              "column": 6
            },
            "end": {
              "line": 320,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "setDate",
          "description": "sets date to all necessary properties",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 326,
              "column": 6
            },
            "end": {
              "line": 390,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date",
              "description": "[the date to set]"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "resetDate",
          "description": "resets the date (if `default` is set, it will be used for the new value)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 396,
              "column": 6
            },
            "end": {
              "line": 433,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "Event",
              "description": "[a causing event will not propagated]"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_defaultValueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 435,
              "column": 6
            },
            "end": {
              "line": 442,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "def"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computeDefaultValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 444,
              "column": 6
            },
            "end": {
              "line": 446,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "def"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computeDatetime",
          "description": "modify date components of a date-object. it needs to be applied or called on a date object",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 460,
              "column": 6
            },
            "end": {
              "line": 537,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "year",
              "type": "number"
            },
            {
              "name": "month",
              "type": "number"
            },
            {
              "name": "day",
              "type": "number"
            },
            {
              "name": "hour",
              "type": "number"
            },
            {
              "name": "minute",
              "type": "number"
            },
            {
              "name": "second",
              "type": "number"
            },
            {
              "name": "millisecond",
              "type": "number"
            }
          ],
          "return": {
            "type": "object",
            "desc": "the changed object and the new offset-minutes"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_dateTimeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 539,
              "column": 6
            },
            "end": {
              "line": 566,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "date"
            },
            {
              "name": "time"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_datetimeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 568,
              "column": 6
            },
            "end": {
              "line": 611,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "datetime"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_valueAsNumberChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 613,
              "column": 6
            },
            "end": {
              "line": 620,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_valueAsDateChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 622,
              "column": 6
            },
            "end": {
              "line": 633,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_fromDatetime",
          "description": "compute a date object",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 640,
              "column": 6
            },
            "end": {
              "line": 667,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "datetime"
            }
          ],
          "return": {
            "type": "Date",
            "desc": "date"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_clampChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 669,
              "column": 6
            },
            "end": {
              "line": 677,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "clamp"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_minChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 679,
              "column": 6
            },
            "end": {
              "line": 696,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "min"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_maxChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 698,
              "column": 6
            },
            "end": {
              "line": 715,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "max"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_minMaxValueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 717,
              "column": 6
            },
            "end": {
              "line": 721,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_checkThreshold",
          "description": "test date object against thresholds",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 728,
              "column": 6
            },
            "end": {
              "line": 739,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date"
            }
          ],
          "return": {
            "type": "Date",
            "desc": "ether the threshold when the date is exceeding or the date object itself"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_toDate",
          "description": "get date string from a date object",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 746,
              "column": 6
            },
            "end": {
              "line": 752,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date",
              "description": "the Date to serialize"
            }
          ],
          "return": {
            "type": "String",
            "desc": "date string"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_toTime",
          "description": "get UTC time string from a date object",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 759,
              "column": 6
            },
            "end": {
              "line": 764,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date",
              "description": "the Date to serialize"
            }
          ],
          "return": {
            "type": "String",
            "desc": "date string"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_toUTCDate",
          "description": "get UTC date string from a date object",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 771,
              "column": 6
            },
            "end": {
              "line": 777,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date",
              "description": "the Date to serialize"
            }
          ],
          "return": {
            "type": "String",
            "desc": "date string"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_toUTCTime",
          "description": "get UTC time string from a date object",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 784,
              "column": 6
            },
            "end": {
              "line": 789,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date",
              "description": "the Date to serialize"
            }
          ],
          "return": {
            "type": "String",
            "desc": "time string"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "__toDate",
          "description": "get date string from date components",
          "privacy": "private",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 798,
              "column": 6
            },
            "end": {
              "line": 800,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "year",
              "type": "Number"
            },
            {
              "name": "month",
              "type": "Number"
            },
            {
              "name": "day",
              "type": "Number"
            }
          ],
          "return": {
            "type": "String",
            "desc": "date string"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "__toTime",
          "description": "get time string from date components",
          "privacy": "private",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 810,
              "column": 6
            },
            "end": {
              "line": 812,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hour",
              "type": "Number"
            },
            {
              "name": "minute",
              "type": "Number"
            },
            {
              "name": "second",
              "type": "Number"
            },
            {
              "name": "millisecond",
              "type": "Number"
            }
          ],
          "return": {
            "type": "String",
            "desc": "time string"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_clampUTC",
          "description": "clamp UTC values",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 820,
              "column": 6
            },
            "end": {
              "line": 837,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date",
              "description": "the Date to clamp"
            },
            {
              "name": "clamp",
              "type": "String",
              "description": "the date component to clamp"
            }
          ],
          "return": {
            "type": "Date",
            "desc": "the clamped date"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_pad",
          "description": "pad a string with 0",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 845,
              "column": 6
            },
            "end": {
              "line": 851,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "n",
              "type": "Number",
              "description": "number to pad"
            },
            {
              "name": "padLength",
              "type": "Number",
              "description": "total length of strings"
            }
          ],
          "return": {
            "type": "String",
            "desc": "padded string"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_hour12Changed",
          "description": "`hour12` is the hour in hour12-format, that starts is minimal 1 and maximal 12, midnight is at 12am and noon is 12pm",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 856,
              "column": 6
            },
            "end": {
              "line": 860,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hour12"
            },
            {
              "name": "old"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_isAmChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 862,
              "column": 6
            },
            "end": {
              "line": 866,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "isAm"
            },
            {
              "name": "old"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_ifClamped",
          "description": "clamp to date component",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 871,
              "column": 6
            },
            "end": {
              "line": 876,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "clamp"
            },
            {
              "name": "comp"
            },
            {
              "name": "hidden"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_checkDefaultTimezone",
          "description": "set the default timezone if needed",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 882,
              "column": 6
            },
            "end": {
              "line": 895,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computeTimezoneShift",
          "description": "correct a timezone shift when date changes from winter to summertime (locally)",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 901,
              "column": 6
            },
            "end": {
              "line": 910,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_timezoneChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 912,
              "column": 6
            },
            "end": {
              "line": 932,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "timezone"
            },
            {
              "name": "oldValue"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_offsetMinutesChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 934,
              "column": 6
            },
            "end": {
              "line": 942,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "offsetMinutes"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_timeZoneHoursMinutesChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 944,
              "column": 6
            },
            "end": {
              "line": 963,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hour"
            },
            {
              "name": "minute"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computeTimezone",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 965,
              "column": 6
            },
            "end": {
              "line": 987,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "offsetMinutes"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computeTimezoneOffset",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 989,
              "column": 6
            },
            "end": {
              "line": 1019,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "timezone"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computeMaxDayOfMonth",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 1021,
              "column": 6
            },
            "end": {
              "line": 1029,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "year"
            },
            {
              "name": "month"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computePartsStep",
          "description": "compute the steps for the related inputs. The day-input is the highest modified input allthough if the step is higher than a day in seconds it might also change month- or year-inputs.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 104,
              "column": 6
            },
            "end": {
              "line": 185,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "step"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeFormMixin"
        },
        {
          "name": "_computePartsDisabled",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 187,
              "column": 6
            },
            "end": {
              "line": 205,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "change"
            },
            {
              "name": "disabled"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeFormMixin"
        },
        {
          "name": "_computeOr",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 318,
              "column": 6
            },
            "end": {
              "line": 320,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "a"
            },
            {
              "name": "b"
            }
          ],
          "inheritedFrom": "DatetimeInputMixin"
        },
        {
          "name": "_computePartOrder",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 322,
              "column": 6
            },
            "end": {
              "line": 324,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "first"
            }
          ],
          "inheritedFrom": "DatetimeInputMixin"
        },
        {
          "name": "_computeResetButtonIsInvisible",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 326,
              "column": 6
            },
            "end": {
              "line": 328,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "valueIsSet"
            },
            {
              "name": "defaultValue"
            },
            {
              "name": "valueAsNumber"
            }
          ],
          "inheritedFrom": "DatetimeInputMixin"
        },
        {
          "name": "_addEventListenerToNode",
          "description": "Add the event listener to the node if it is a gestures event.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../polymer/lib/mixins/gesture-event-listeners.html",
            "start": {
              "line": 55,
              "column": 6
            },
            "end": {
              "line": 59,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node",
              "type": "!Node",
              "description": "Node to add event listener to"
            },
            {
              "name": "eventName",
              "type": "string",
              "description": "Name of event"
            },
            {
              "name": "handler",
              "type": "function (!Event): void",
              "description": "Listener function to add"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.GestureEventListeners"
        },
        {
          "name": "_removeEventListenerFromNode",
          "description": "Remove the event listener to the node if it is a gestures event.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../polymer/lib/mixins/gesture-event-listeners.html",
            "start": {
              "line": 69,
              "column": 6
            },
            "end": {
              "line": 73,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node",
              "type": "!Node",
              "description": "Node to remove event listener from"
            },
            {
              "name": "eventName",
              "type": "string",
              "description": "Name of event"
            },
            {
              "name": "handler",
              "type": "function (!Event): void",
              "description": "Listener function to remove"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.GestureEventListeners"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 289,
              "column": 6
            },
            "end": {
              "line": 293,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_addPickerTransitionEndListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 295,
              "column": 6
            },
            "end": {
              "line": 302,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_removePickerTransitionEndListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 304,
              "column": 6
            },
            "end": {
              "line": 306,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_onPickerTransitionEnd",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 308,
              "column": 6
            },
            "end": {
              "line": 313,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_addCancelOnClickListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 315,
              "column": 6
            },
            "end": {
              "line": 322,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_removeCancelOnClickListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 324,
              "column": 6
            },
            "end": {
              "line": 327,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_stopPropagation",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 329,
              "column": 6
            },
            "end": {
              "line": 332,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_addKeyListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 334,
              "column": 6
            },
            "end": {
              "line": 337,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_removeKeyListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 339,
              "column": 6
            },
            "end": {
              "line": 342,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_nativeOnMobileChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 344,
              "column": 6
            },
            "end": {
              "line": 357,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_checkKeycode",
          "description": "key press event handler",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 363,
              "column": 6
            },
            "end": {
              "line": 382,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "[type]",
              "description": "Event"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "open",
          "description": "open the picker",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 396,
              "column": 6
            },
            "end": {
              "line": 409,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "close",
          "description": "close the picker",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 415,
              "column": 6
            },
            "end": {
              "line": 423,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "[type]",
              "description": "Event"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "toggle",
          "description": "toggle the picker",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 429,
              "column": 6
            },
            "end": {
              "line": 437,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "[type]",
              "description": "Event"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "confirm",
          "description": "confirms the input",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 443,
              "column": 6
            },
            "end": {
              "line": 452,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "[type]",
              "description": "Event"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "cancel",
          "description": "cancels the input",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 458,
              "column": 6
            },
            "end": {
              "line": 472,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "[type]",
              "description": "Event"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_confirmedValueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 295,
              "column": 6
            },
            "end": {
              "line": 303,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "confirmedValue"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_reset",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 493,
              "column": 6
            },
            "end": {
              "line": 498,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_setConfirmedValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 305,
              "column": 6
            },
            "end": {
              "line": 312,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_resetValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 506,
              "column": 6
            },
            "end": {
              "line": 510,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_autoConfirmChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 512,
              "column": 6
            },
            "end": {
              "line": 514,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "autoConfirm"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_computeAnd",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 181,
              "column": 6
            },
            "end": {
              "line": 183,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "a"
            },
            {
              "name": "b"
            }
          ]
        },
        {
          "name": "_computeNativeStep",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 185,
              "column": 6
            },
            "end": {
              "line": 204,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "step"
            },
            {
              "name": "clamp"
            }
          ]
        },
        {
          "name": "_computeNativeValueAsNumber",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 206,
              "column": 6
            },
            "end": {
              "line": 227,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "native"
            },
            {
              "name": "valueAsNumber"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_reflectNativeValueAsNumber",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 229,
              "column": 6
            },
            "end": {
              "line": 253,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "native"
            },
            {
              "name": "nativeValueAsNumber"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_setDate",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 255,
              "column": 6
            },
            "end": {
              "line": 262,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_confirmedDatetimeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 264,
              "column": 6
            },
            "end": {
              "line": 276,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "confirmedDatetime"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_resetDate",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 314,
              "column": 6
            },
            "end": {
              "line": 317,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_resetConfirmedValues",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 319,
              "column": 6
            },
            "end": {
              "line": 327,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_resetValues",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 329,
              "column": 6
            },
            "end": {
              "line": 336,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 20,
          "column": 2
        },
        "end": {
          "line": 338,
          "column": 3
        }
      },
      "privacy": "public",
      "name": "DatetimePickerMixin",
      "attributes": [
        {
          "name": "name",
          "description": "name of the input",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 16,
              "column": 10
            },
            "end": {
              "line": 18,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "title",
          "description": "description for the element and can be used as a hint for invalid values",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 23,
              "column": 10
            },
            "end": {
              "line": 26,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "disabled",
          "description": "disables the input",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 31,
              "column": 10
            },
            "end": {
              "line": 35,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "required",
          "description": "required attribute",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 40,
              "column": 10
            },
            "end": {
              "line": 44,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "property-for-value",
          "description": "defines the property that should be used for the value",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 49,
              "column": 10
            },
            "end": {
              "line": 52,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "invalid",
          "description": "required attribute",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 57,
              "column": 10
            },
            "end": {
              "line": 63,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "default",
          "description": "default value of the value, when it does not validate",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 77,
              "column": 10
            },
            "end": {
              "line": 80,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "value",
          "description": "value of the input",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 85,
              "column": 10
            },
            "end": {
              "line": 88,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "locale",
          "description": "The current locale",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 19,
              "column": 10
            },
            "end": {
              "line": 23,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "decimal-separator",
          "description": "locale separator for local decimal values",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 29,
              "column": 10
            },
            "end": {
              "line": 33,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "date-separator",
          "description": "Separator for local date values (date-string is still in ISO-Format)",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 39,
              "column": 10
            },
            "end": {
              "line": 43,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "time-separator",
          "description": "Separator for local time values (time-string is still in ISO-Format)",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 49,
              "column": 10
            },
            "end": {
              "line": 53,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "am-string",
          "description": "locale representation of 'AM'",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 58,
              "column": 10
            },
            "end": {
              "line": 62,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "pm-string",
          "description": "locale representation of 'PM'",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 67,
              "column": 10
            },
            "end": {
              "line": 71,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "date-order",
          "description": "order of date-parts",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 76,
              "column": 10
            },
            "end": {
              "line": 86,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "year",
          "description": "The year of the selected date",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 48,
              "column": 10
            },
            "end": {
              "line": 51,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "month",
          "description": "The month of the selected date (starts with 1)",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 56,
              "column": 10
            },
            "end": {
              "line": 59,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "day",
          "description": "The day of the selected date",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 64,
              "column": 10
            },
            "end": {
              "line": 67,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour",
          "description": "The hour of the selected time",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 72,
              "column": 10
            },
            "end": {
              "line": 75,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour12",
          "description": "hour in 12-hour-format",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 81,
              "column": 10
            },
            "end": {
              "line": 85,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "is-am",
          "description": "true, when A.M. (when `hour` < 12)",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 91,
              "column": 10
            },
            "end": {
              "line": 95,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "minute",
          "description": "The minute of the selected time",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 100,
              "column": 10
            },
            "end": {
              "line": 103,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "second",
          "description": "The second of the selected time",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 108,
              "column": 10
            },
            "end": {
              "line": 111,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "millisecond",
          "description": "The millisecond of the selected time",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 116,
              "column": 10
            },
            "end": {
              "line": 119,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "datetime",
          "description": "the selected date and time (format: iso8601)",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 124,
              "column": 10
            },
            "end": {
              "line": 127,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "date",
          "description": "the selected date (format: iso8601)",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 132,
              "column": 10
            },
            "end": {
              "line": 135,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "time",
          "description": "the selected time (format: iso8601)",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 140,
              "column": 10
            },
            "end": {
              "line": 143,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "value-as-date",
          "description": "The date-object of the selected date",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 148,
              "column": 10
            },
            "end": {
              "line": 152,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Date | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "value-as-number",
          "description": "The value of the selected date",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 157,
              "column": 10
            },
            "end": {
              "line": 161,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "min",
          "description": "The minimal date, could be a number, a date-object or an iso-string in time, date or datetime-notation",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 181,
              "column": 10
            },
            "end": {
              "line": 185,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "max",
          "description": "The maximal date, could be a number, a date-object or an iso-string in time, date or datetime-notation",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 197,
              "column": 10
            },
            "end": {
              "line": 201,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour12-format",
          "description": "when true, 12-hour time format, else 24-hour",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 214,
              "column": 10
            },
            "end": {
              "line": 218,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "clamp",
          "description": "Clamp datetime to a property\npossible values:'month', 'day', 'hour', 'minute', 'second', 'millisecond'",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 224,
              "column": 10
            },
            "end": {
              "line": 228,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "timezone",
          "description": "The timezone offset in '±hh:mm' format",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 233,
              "column": 10
            },
            "end": {
              "line": 237,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "offset-minutes",
          "description": "The offset minutes of the set timezone",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 242,
              "column": 10
            },
            "end": {
              "line": 246,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "step",
          "description": "If set the step defines the step a date should be incremented (in seconds). The input for the most inferior standing that would create an integer step is used to increment the value.\nFor example, if the **step** is:\n + **0.05**: the millisecond-input will increment the value by 50 (50 milliseconds), the other inputs behaive as expected\n + **1.05**: the millisecond-input will increment the value by 1050 (1 second and 50 millisecond), the other inputs behaive as expected\n + **2**: the millisecond-input will be disabled, the second-input will increment the value by 2000 (2 seconds), the other inputs behaive as expected\n + **180**: the millisecond-input and the second-input will be disabled, the minute-input will increment the value by 180000 (3 minutes), the other inputs behaive as expected\nIf `step=\"0\"` all inputs will be disabled, else if the step is below _0.001_ the step will be set to **0.001**. The most supirior input that will become the given step is the day-input.",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 33,
              "column": 10
            },
            "end": {
              "line": 36,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeFormMixin"
        },
        {
          "name": "hide-reset-button",
          "description": "if true, the reset button is hidden",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 298,
              "column": 10
            },
            "end": {
              "line": 301,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "DatetimeInputMixin"
        },
        {
          "name": "with-timezone",
          "description": "if true, timezone inputs are shown",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 306,
              "column": 10
            },
            "end": {
              "line": 309,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "DatetimeInputMixin"
        },
        {
          "name": "native",
          "description": "Set to `true` to use the native input, if it available",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 173,
              "column": 10
            },
            "end": {
              "line": 176,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "native-on-mobile",
          "description": "Set to `true` to use the native input automatically on mobile devices, if it available",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 181,
              "column": 10
            },
            "end": {
              "line": 184,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "mobile-user-agent-test-string",
          "description": "When `nativeOnMobile` is set to `true` this string is used to test the userAgent for a mobile device",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 189,
              "column": 10
            },
            "end": {
              "line": 193,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "opened",
          "description": "if `true` the picker is opened",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 198,
              "column": 10
            },
            "end": {
              "line": 203,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "horizontal-align",
          "description": "The orientation against which to align the element horizontally\nrelative to the related input element. Possible values are \"left\", \"right\", \"center\", \"auto\". (comparable to `iron-fit-behavior` and its `no-overlap`-attribute)",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 209,
              "column": 10
            },
            "end": {
              "line": 213,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "vertical-align",
          "description": "The orientation against which to align the element vertically\nrelative to the related input element. Possible values are \"top\", \"bottom\", \"middle\", \"auto\". (comparable to `iron-fit-behavior` and its `no-overlap`-attribute)",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 219,
              "column": 10
            },
            "end": {
              "line": 223,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "auto-confirm",
          "description": "Set to `true` to make the input auto-confirming",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 228,
              "column": 10
            },
            "end": {
              "line": 231,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "no-cancel-on-esc-key",
          "description": "Set to `true` to disable canceling the overlay with the ESC key.",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 236,
              "column": 10
            },
            "end": {
              "line": 239,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "no-cancel-on-outside-click",
          "description": "Set to `true` to disable canceling the dropdown by clicking outside the picker.",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 244,
              "column": 10
            },
            "end": {
              "line": 247,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "no-tip",
          "description": "Set to `true` to disable the tip of the picker",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 252,
              "column": 10
            },
            "end": {
              "line": 255,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "confirmed-value",
          "description": "The confirmed value. When `auto-confirm` is not set, the value will only change, when you confirm.",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 260,
              "column": 10
            },
            "end": {
              "line": 263,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "confirmed-datetime",
          "description": "The confirmed datetime. When `auto-confirm` is not set, the datetime will only change, when you confirm.",
          "sourceRange": {
            "start": {
              "line": 154,
              "column": 10
            },
            "end": {
              "line": 157,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "hide-now-button",
          "description": "Set to `true` to hide the `now`-button",
          "sourceRange": {
            "start": {
              "line": 162,
              "column": 10
            },
            "end": {
              "line": 164,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "input-picker-closed",
          "description": "input-picker-closed\nFired after a picker has been closed.",
          "metadata": {},
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "type": "CustomEvent",
          "name": "input-picker-opened",
          "description": "input-picker-opened\nFired when a picker has been opened.",
          "metadata": {},
          "inheritedFrom": "InputPickerPattern"
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "mixins": [
        "DatetimeInputMixin",
        "InputPickerPattern"
      ]
    },
    {
      "description": "Mixin for calendar-element",
      "summary": "",
      "path": "calendar-element.html",
      "properties": [
        {
          "name": "dwellTime",
          "type": "number",
          "description": "dwell time of incrementing inputs by the buttons in milliseconds. It is minimal 15 milliseconds.",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 33,
              "column": 10
            },
            "end": {
              "line": 37,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_dwellTimeChanged\"",
              "attributeType": "Number"
            }
          },
          "defaultValue": "50",
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "dwellDelay",
          "type": "number",
          "description": "delay when incrementing inputs by the buttons in milliseconds. It is minimal 15 milliseconds.",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 43,
              "column": 10
            },
            "end": {
              "line": 47,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_dwellTimeChanged\"",
              "attributeType": "Number"
            }
          },
          "defaultValue": "500",
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "_switchClassSelector",
          "type": "string | null | undefined",
          "description": "class property of switches",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 52,
              "column": 10
            },
            "end": {
              "line": 55,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"switch\"",
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "name",
          "type": "string | null | undefined",
          "description": "name of the input",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 16,
              "column": 10
            },
            "end": {
              "line": 18,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "title",
          "type": "string | null | undefined",
          "description": "description for the element and can be used as a hint for invalid values",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 23,
              "column": 10
            },
            "end": {
              "line": 26,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "disabled",
          "type": "boolean | null | undefined",
          "description": "disables the input",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 31,
              "column": 10
            },
            "end": {
              "line": 35,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "required",
          "type": "boolean | null | undefined",
          "description": "required attribute",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 40,
              "column": 10
            },
            "end": {
              "line": 44,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "propertyForValue",
          "type": "string | null | undefined",
          "description": "defines the property that should be used for the value",
          "privacy": "public",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 69,
              "column": 10
            },
            "end": {
              "line": 72,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"valueAsNumber\"",
          "inheritedFrom": "DatetimeFormMixin"
        },
        {
          "name": "invalid",
          "type": "boolean | null | undefined",
          "description": "required attribute",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 57,
              "column": 10
            },
            "end": {
              "line": 63,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_valueIsSet",
          "type": "boolean | null | undefined",
          "description": "is true when the value is not undefined",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 68,
              "column": 10
            },
            "end": {
              "line": 72,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "default",
          "type": "Object | null | undefined",
          "description": "The default value of the input, could be a number, a date-object or an iso-string in time, date or datetime-notation",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 166,
              "column": 10
            },
            "end": {
              "line": 168,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "value",
          "type": "Object | null | undefined",
          "description": "value of the input",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 85,
              "column": 10
            },
            "end": {
              "line": 88,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "locale",
          "type": "string | null | undefined",
          "description": "The current locale",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 19,
              "column": 10
            },
            "end": {
              "line": 23,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "decimalSeparator",
          "type": "string",
          "description": "locale separator for local decimal values",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 29,
              "column": 10
            },
            "end": {
              "line": 33,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "dateSeparator",
          "type": "string",
          "description": "Separator for local date values (date-string is still in ISO-Format)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 39,
              "column": 10
            },
            "end": {
              "line": 43,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "timeSeparator",
          "type": "string",
          "description": "Separator for local time values (time-string is still in ISO-Format)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 49,
              "column": 10
            },
            "end": {
              "line": 53,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "amString",
          "type": "string | null | undefined",
          "description": "locale representation of 'AM'",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 58,
              "column": 10
            },
            "end": {
              "line": 62,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "pmString",
          "type": "string | null | undefined",
          "description": "locale representation of 'PM'",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 67,
              "column": 10
            },
            "end": {
              "line": 71,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "dateOrder",
          "type": "Object | null | undefined",
          "description": "order of date-parts",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 76,
              "column": 10
            },
            "end": {
              "line": 86,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Object"
            }
          },
          "defaultValue": "{\"parts\":[],\"timeFirst\":false,\"dateFirst\":true}",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "year",
          "type": "number | null | undefined",
          "description": "The year of the selected date",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 48,
              "column": 10
            },
            "end": {
              "line": 51,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "month",
          "type": "number | null | undefined",
          "description": "The month of the selected date (starts with 1)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 56,
              "column": 10
            },
            "end": {
              "line": 59,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "day",
          "type": "number | null | undefined",
          "description": "The day of the selected date",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 64,
              "column": 10
            },
            "end": {
              "line": 67,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour",
          "type": "number | null | undefined",
          "description": "The hour of the selected time",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 72,
              "column": 10
            },
            "end": {
              "line": 75,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour12",
          "type": "number",
          "description": "hour in 12-hour-format",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 81,
              "column": 10
            },
            "end": {
              "line": 85,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_hour12Changed\"",
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "isAm",
          "type": "boolean",
          "description": "true, when A.M. (when `hour` < 12)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 91,
              "column": 10
            },
            "end": {
              "line": 95,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_isAmChanged\"",
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "minute",
          "type": "number | null | undefined",
          "description": "The minute of the selected time",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 100,
              "column": 10
            },
            "end": {
              "line": 103,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "second",
          "type": "number | null | undefined",
          "description": "The second of the selected time",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 108,
              "column": 10
            },
            "end": {
              "line": 111,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "millisecond",
          "type": "number | null | undefined",
          "description": "The millisecond of the selected time",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 116,
              "column": 10
            },
            "end": {
              "line": 119,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "datetime",
          "type": "string | null | undefined",
          "description": "the selected date and time (format: iso8601)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 124,
              "column": 10
            },
            "end": {
              "line": 127,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "date",
          "type": "string | null | undefined",
          "description": "the selected date (format: iso8601)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 132,
              "column": 10
            },
            "end": {
              "line": 135,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "time",
          "type": "string | null | undefined",
          "description": "the selected time (format: iso8601)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 140,
              "column": 10
            },
            "end": {
              "line": 143,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "valueAsDate",
          "type": "Date | null | undefined",
          "description": "The date-object of the selected date",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 148,
              "column": 10
            },
            "end": {
              "line": 152,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_valueAsDateChanged\"",
              "attributeType": "Date"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "valueAsNumber",
          "type": "number | null | undefined",
          "description": "The value of the selected date",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 157,
              "column": 10
            },
            "end": {
              "line": 161,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_valueAsNumberChanged\"",
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_defaultValue",
          "type": "number | null | undefined",
          "description": "value of the default date",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 173,
              "column": 10
            },
            "end": {
              "line": 176,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "min",
          "type": "Object | null | undefined",
          "description": "The minimal date, could be a number, a date-object or an iso-string in time, date or datetime-notation",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 181,
              "column": 10
            },
            "end": {
              "line": 185,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_minChanged\"",
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_minValue",
          "type": "number | null | undefined",
          "description": "value if the minimum date",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 190,
              "column": 10
            },
            "end": {
              "line": 192,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "max",
          "type": "Object | null | undefined",
          "description": "The maximal date, could be a number, a date-object or an iso-string in time, date or datetime-notation",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 197,
              "column": 10
            },
            "end": {
              "line": 201,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_maxChanged\"",
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_maxValue",
          "type": "number | null | undefined",
          "description": "value if the maximum date",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 206,
              "column": 10
            },
            "end": {
              "line": 208,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour12Format",
          "type": "boolean",
          "description": "when true, 12-hour time format, else 24-hour",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 214,
              "column": 10
            },
            "end": {
              "line": 218,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "clamp",
          "type": "string | null | undefined",
          "description": "Clamp datetime to a property\npossible values: 'month', 'day', 'hour'",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 252,
              "column": 10
            },
            "end": {
              "line": 256,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "defaultValue": "\"hour\""
        },
        {
          "name": "timezone",
          "type": "string | null | undefined",
          "description": "The timezone offset in '±hh:mm' format",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 233,
              "column": 10
            },
            "end": {
              "line": 237,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_timezoneChanged\"",
              "attributeType": "String"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "offsetMinutes",
          "type": "number | null | undefined",
          "description": "The offset minutes of the set timezone",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 242,
              "column": 10
            },
            "end": {
              "line": 246,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_offsetMinutesChanged\"",
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_timeZoneHours",
          "type": "number | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 248,
              "column": 10
            },
            "end": {
              "line": 250,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_timeZoneMinutes",
          "type": "number | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 252,
              "column": 10
            },
            "end": {
              "line": 254,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_recentLocalTimezoneOffset",
          "type": "number | null | undefined",
          "description": "The offset minute of the current datetime",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 259,
              "column": 10
            },
            "end": {
              "line": 261,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_timeOnly",
          "type": "boolean | null | undefined",
          "description": "if true perspective starts at 0 (1970-01-01)",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 291,
              "column": 10
            },
            "end": {
              "line": 294,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "_maxDayOfMonth",
          "type": "number",
          "description": "exclusive max day of month",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 275,
              "column": 10
            },
            "end": {
              "line": 278,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_dateLocked",
          "type": "boolean | null | undefined",
          "description": "lock to date and ignore time",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 283,
              "column": 10
            },
            "end": {
              "line": 286,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "step",
          "type": "number | null | undefined",
          "description": "If set the step defines the step a date should be incremented (in seconds). The input for the most inferior standing that would create an integer step is used to increment the value.\nFor example, if the **step** is:\n + **0.05**: the millisecond-input will increment the value by 50 (50 milliseconds), the other inputs behaive as expected\n + **1.05**: the millisecond-input will increment the value by 1050 (1 second and 50 millisecond), the other inputs behaive as expected\n + **2**: the millisecond-input will be disabled, the second-input will increment the value by 2000 (2 seconds), the other inputs behaive as expected\n + **180**: the millisecond-input and the second-input will be disabled, the minute-input will increment the value by 180000 (3 minutes), the other inputs behaive as expected\nIf `step=\"0\"` all inputs will be disabled, else if the step is below _0.001_ the step will be set to **0.001**. The most supirior input that will become the given step is the day-input.",
          "privacy": "public",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 33,
              "column": 10
            },
            "end": {
              "line": 36,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeFormMixin"
        },
        {
          "name": "_partsDisabled",
          "type": "Object | null | undefined",
          "description": "date-parts that are disabled",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 41,
              "column": 10
            },
            "end": {
              "line": 47,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Object"
            }
          },
          "defaultValue": "{}",
          "inheritedFrom": "DatetimeFormMixin"
        },
        {
          "name": "_partsStep",
          "type": "Object | null | undefined",
          "description": "the computed steps for the date-parts",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 52,
              "column": 10
            },
            "end": {
              "line": 65,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "Object"
            }
          },
          "defaultValue": "{\"day\":1,\"hour\":1,\"minute\":1,\"second\":1,\"millisecond\":1}",
          "inheritedFrom": "DatetimeFormMixin"
        },
        {
          "name": "currentHoveredDayNode",
          "type": "Node | null | undefined",
          "description": "Current hovered day node\nto access: bind the attribute ('current-hovered-day-node') and get its dataset `year`, `month` or `day`-property",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 262,
              "column": 10
            },
            "end": {
              "line": 266,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "Node"
            }
          }
        },
        {
          "name": "currentActiveDayNode",
          "type": "Node | null | undefined",
          "description": "Node of the last clicked day-field (by clicking or keypress)\nto access: bind the attribute ('current-active-day-node') and get its dataset `year`, `month` or `day`-property",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 272,
              "column": 10
            },
            "end": {
              "line": 276,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "Node"
            }
          }
        },
        {
          "name": "currentSelectedDayNode",
          "type": "Node | null | undefined",
          "description": "Node of the last selected day\nto access: bind the attribute ('current-selected-day-node') and get its dataset `year`, `month` or `day`-property",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 282,
              "column": 10
            },
            "end": {
              "line": 286,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "Node"
            }
          }
        },
        {
          "name": "firstDayOfWeek",
          "type": "number | null | undefined",
          "description": "Defines the first day of the week to use. Defaults to `1` (`monday`)\ne.g. when `firstDayOfWeek` is `0` the first day of the week would be `sunday`",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 300,
              "column": 10
            },
            "end": {
              "line": 303,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "1"
        }
      ],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 315,
              "column": 6
            },
            "end": {
              "line": 318,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 82,
              "column": 6
            },
            "end": {
              "line": 87,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "_addSwitchListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 89,
              "column": 6
            },
            "end": {
              "line": 104,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "_removeSwitchListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 106,
              "column": 6
            },
            "end": {
              "line": 116,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "_checkKeycodeSwitch",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 118,
              "column": 6
            },
            "end": {
              "line": 126,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "__getEventTarget",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 128,
              "column": 6
            },
            "end": {
              "line": 142,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            },
            {
              "name": "classSelector"
            }
          ],
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "__increm",
          "description": "increment property by being called by an Event on an `switch`-Node",
          "privacy": "private",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 149,
              "column": 6
            },
            "end": {
              "line": 176,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "Event",
              "description": "Event it was called on"
            },
            {
              "name": "once",
              "type": "Boolean",
              "description": "if true, it doesn't setup an intervall to continue incrementing (e.g. keyPressEvents are fired itself repeatedly while the key is pressed)"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "__incremProp",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 178,
              "column": 6
            },
            "end": {
              "line": 180,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "prop"
            },
            {
              "name": "step"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "_getDefaultForProp",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 630,
              "column": 6
            },
            "end": {
              "line": 640,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "prop"
            }
          ]
        },
        {
          "name": "_stopActiveIncremJob",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 186,
              "column": 6
            },
            "end": {
              "line": 199,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "_dwellTimeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 201,
              "column": 6
            },
            "end": {
              "line": 207,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dwellTime"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "_dwellDelayChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 209,
              "column": 6
            },
            "end": {
              "line": 215,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dwellDelay"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "_attachDom",
          "description": "attach dom with `delegatesFocus: true` so that the element is also focussed while its's children are too, and to autofocus to first tabable",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 103,
              "column": 6
            },
            "end": {
              "line": 112,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom"
            }
          ],
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "validate",
          "description": "validates the input for iron-form",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 122,
              "column": 6
            },
            "end": {
              "line": 124,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_computeInvalid",
          "description": "defines whether the value is set",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 130,
              "column": 6
            },
            "end": {
              "line": 132,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "[Object]"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_validate",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 141,
              "column": 6
            },
            "end": {
              "line": 143,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "Object",
              "description": "value to validate"
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "true, if the value is valid"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_computeValueIsSet",
          "description": "defines whether the value is set",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 149,
              "column": 6
            },
            "end": {
              "line": 151,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "[Object]"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_isSet",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 90,
              "column": 6
            },
            "end": {
              "line": 92,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "inheritedFrom": "DatetimeFormMixin"
        },
        {
          "name": "_valueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 94,
              "column": 6
            },
            "end": {
              "line": 99,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeFormMixin"
        },
        {
          "name": "_defaultChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 83,
              "column": 6
            },
            "end": {
              "line": 88,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "def"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeFormMixin"
        },
        {
          "name": "_createReflectPropertyToValueObserver",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 180,
              "column": 6
            },
            "end": {
              "line": 190,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "prop"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_reflectPropertyToValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 192,
              "column": 6
            },
            "end": {
              "line": 194,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_reflectValueToProperty",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 196,
              "column": 6
            },
            "end": {
              "line": 198,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_localeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 96,
              "column": 6
            },
            "end": {
              "line": 283,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "locale"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "_shouldPropertyChange",
          "description": "overwritten of polymer to handle -0",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 34,
              "column": 6
            },
            "end": {
              "line": 40,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property"
            },
            {
              "name": "value"
            },
            {
              "name": "old"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "now",
          "description": "Sets value to the actual date",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 304,
              "column": 6
            },
            "end": {
              "line": 320,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "setDate",
          "description": "sets date to all necessary properties",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 326,
              "column": 6
            },
            "end": {
              "line": 390,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date",
              "description": "[the date to set]"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "resetDate",
          "description": "resets the date (if `default` is set, it will be used for the new value)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 396,
              "column": 6
            },
            "end": {
              "line": 433,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "Event",
              "description": "[a causing event will not propagated]"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_defaultValueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 435,
              "column": 6
            },
            "end": {
              "line": 442,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "def"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computeDefaultValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 444,
              "column": 6
            },
            "end": {
              "line": 446,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "def"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computeDatetime",
          "description": "modify date components of a date-object. it needs to be applied or called on a date object",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 460,
              "column": 6
            },
            "end": {
              "line": 537,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "year",
              "type": "number"
            },
            {
              "name": "month",
              "type": "number"
            },
            {
              "name": "day",
              "type": "number"
            },
            {
              "name": "hour",
              "type": "number"
            },
            {
              "name": "minute",
              "type": "number"
            },
            {
              "name": "second",
              "type": "number"
            },
            {
              "name": "millisecond",
              "type": "number"
            }
          ],
          "return": {
            "type": "object",
            "desc": "the changed object and the new offset-minutes"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_dateTimeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 539,
              "column": 6
            },
            "end": {
              "line": 566,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "date"
            },
            {
              "name": "time"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_datetimeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 568,
              "column": 6
            },
            "end": {
              "line": 611,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "datetime"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_valueAsNumberChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 613,
              "column": 6
            },
            "end": {
              "line": 620,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_valueAsDateChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 622,
              "column": 6
            },
            "end": {
              "line": 633,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_fromDatetime",
          "description": "compute a date object",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 640,
              "column": 6
            },
            "end": {
              "line": 667,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "datetime"
            }
          ],
          "return": {
            "type": "Date",
            "desc": "date"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_clampChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 669,
              "column": 6
            },
            "end": {
              "line": 677,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "clamp"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_minChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 553,
              "column": 6
            },
            "end": {
              "line": 556,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "min"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_maxChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 558,
              "column": 6
            },
            "end": {
              "line": 561,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "max"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_minMaxValueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 717,
              "column": 6
            },
            "end": {
              "line": 721,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_checkThreshold",
          "description": "test date object against thresholds",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 728,
              "column": 6
            },
            "end": {
              "line": 739,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date"
            }
          ],
          "return": {
            "type": "Date",
            "desc": "ether the threshold when the date is exceeding or the date object itself"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_toDate",
          "description": "get date string from a date object",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 746,
              "column": 6
            },
            "end": {
              "line": 752,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date",
              "description": "the Date to serialize"
            }
          ],
          "return": {
            "type": "String",
            "desc": "date string"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_toTime",
          "description": "get UTC time string from a date object",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 759,
              "column": 6
            },
            "end": {
              "line": 764,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date",
              "description": "the Date to serialize"
            }
          ],
          "return": {
            "type": "String",
            "desc": "date string"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_toUTCDate",
          "description": "get UTC date string from a date object",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 771,
              "column": 6
            },
            "end": {
              "line": 777,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date",
              "description": "the Date to serialize"
            }
          ],
          "return": {
            "type": "String",
            "desc": "date string"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_toUTCTime",
          "description": "get UTC time string from a date object",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 784,
              "column": 6
            },
            "end": {
              "line": 789,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date",
              "description": "the Date to serialize"
            }
          ],
          "return": {
            "type": "String",
            "desc": "time string"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "__toDate",
          "description": "get date string from date components",
          "privacy": "private",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 798,
              "column": 6
            },
            "end": {
              "line": 800,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "year",
              "type": "Number"
            },
            {
              "name": "month",
              "type": "Number"
            },
            {
              "name": "day",
              "type": "Number"
            }
          ],
          "return": {
            "type": "String",
            "desc": "date string"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "__toTime",
          "description": "get time string from date components",
          "privacy": "private",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 810,
              "column": 6
            },
            "end": {
              "line": 812,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hour",
              "type": "Number"
            },
            {
              "name": "minute",
              "type": "Number"
            },
            {
              "name": "second",
              "type": "Number"
            },
            {
              "name": "millisecond",
              "type": "Number"
            }
          ],
          "return": {
            "type": "String",
            "desc": "time string"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_clampUTC",
          "description": "clamp UTC values",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 820,
              "column": 6
            },
            "end": {
              "line": 837,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date",
              "description": "the Date to clamp"
            },
            {
              "name": "clamp",
              "type": "String",
              "description": "the date component to clamp"
            }
          ],
          "return": {
            "type": "Date",
            "desc": "the clamped date"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_pad",
          "description": "pad a string with 0",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 845,
              "column": 6
            },
            "end": {
              "line": 851,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "n",
              "type": "Number",
              "description": "number to pad"
            },
            {
              "name": "padLength",
              "type": "Number",
              "description": "total length of strings"
            }
          ],
          "return": {
            "type": "String",
            "desc": "padded string"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_hour12Changed",
          "description": "`hour12` is the hour in hour12-format, that starts is minimal 1 and maximal 12, midnight is at 12am and noon is 12pm",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 856,
              "column": 6
            },
            "end": {
              "line": 860,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hour12"
            },
            {
              "name": "old"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_isAmChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 862,
              "column": 6
            },
            "end": {
              "line": 866,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "isAm"
            },
            {
              "name": "old"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_ifClamped",
          "description": "clamp to date component",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 871,
              "column": 6
            },
            "end": {
              "line": 876,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "clamp"
            },
            {
              "name": "comp"
            },
            {
              "name": "hidden"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_checkDefaultTimezone",
          "description": "set the default timezone if needed",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 882,
              "column": 6
            },
            "end": {
              "line": 895,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computeTimezoneShift",
          "description": "correct a timezone shift when date changes from winter to summertime (locally)",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 901,
              "column": 6
            },
            "end": {
              "line": 910,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_timezoneChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 912,
              "column": 6
            },
            "end": {
              "line": 932,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "timezone"
            },
            {
              "name": "oldValue"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_offsetMinutesChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 934,
              "column": 6
            },
            "end": {
              "line": 942,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "offsetMinutes"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_timeZoneHoursMinutesChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 944,
              "column": 6
            },
            "end": {
              "line": 963,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hour"
            },
            {
              "name": "minute"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computeTimezone",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 965,
              "column": 6
            },
            "end": {
              "line": 987,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "offsetMinutes"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computeTimezoneOffset",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 989,
              "column": 6
            },
            "end": {
              "line": 1019,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "timezone"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computeMaxDayOfMonth",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 1021,
              "column": 6
            },
            "end": {
              "line": 1029,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "year"
            },
            {
              "name": "month"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computePartsStep",
          "description": "compute the steps for the related inputs. The day-input is the highest modified input allthough if the step is higher than a day in seconds it might also change month- or year-inputs.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 104,
              "column": 6
            },
            "end": {
              "line": 185,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "step"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeFormMixin"
        },
        {
          "name": "_computePartsDisabled",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 187,
              "column": 6
            },
            "end": {
              "line": 205,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "change"
            },
            {
              "name": "disabled"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeFormMixin"
        },
        {
          "name": "_onMouseMoveDay",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 320,
              "column": 6
            },
            "end": {
              "line": 333,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_onClickDay",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 335,
              "column": 6
            },
            "end": {
              "line": 361,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "confirm",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 363,
              "column": 6
            },
            "end": {
              "line": 372,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_computeIncremPropTop",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 374,
              "column": 6
            },
            "end": {
              "line": 379,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hideMonth"
            }
          ]
        },
        {
          "name": "_setWeekDayCaptions",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 381,
              "column": 6
            },
            "end": {
              "line": 396,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "locale"
            },
            {
              "name": "firstDayOfWeek"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_setMonthSelectorOptions",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 398,
              "column": 6
            },
            "end": {
              "line": 407,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "locale"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "renderCalendar",
          "description": "renderCalendars the current daySelector (manually).",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 416,
              "column": 6
            },
            "end": {
              "line": 539,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "year",
              "type": "number",
              "description": "The year of the date of the current daySelector."
            },
            {
              "name": "month",
              "type": "number",
              "description": "The month of the date of the current daySelector."
            },
            {
              "name": "day",
              "type": "number",
              "description": "The day of the date of the current daySelector."
            },
            {
              "name": "date",
              "type": "number",
              "description": "The current selected date."
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_clampDay",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 541,
              "column": 6
            },
            "end": {
              "line": 547,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d"
            }
          ]
        },
        {
          "name": "_dayDiff",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 549,
              "column": 6
            },
            "end": {
              "line": 551,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "end"
            },
            {
              "name": "start"
            }
          ]
        },
        {
          "name": "_checkKeycodeForDates",
          "description": "key press event handler on days area",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 567,
              "column": 6
            },
            "end": {
              "line": 628,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "[type]",
              "description": "Event"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 21,
          "column": 2
        },
        "end": {
          "line": 642,
          "column": 3
        }
      },
      "privacy": "public",
      "name": "CalendarElementPattern",
      "attributes": [
        {
          "name": "dwell-time",
          "description": "dwell time of incrementing inputs by the buttons in milliseconds. It is minimal 15 milliseconds.",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 33,
              "column": 10
            },
            "end": {
              "line": 37,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "dwell-delay",
          "description": "delay when incrementing inputs by the buttons in milliseconds. It is minimal 15 milliseconds.",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 43,
              "column": 10
            },
            "end": {
              "line": 47,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "name",
          "description": "name of the input",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 16,
              "column": 10
            },
            "end": {
              "line": 18,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "title",
          "description": "description for the element and can be used as a hint for invalid values",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 23,
              "column": 10
            },
            "end": {
              "line": 26,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "disabled",
          "description": "disables the input",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 31,
              "column": 10
            },
            "end": {
              "line": 35,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "required",
          "description": "required attribute",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 40,
              "column": 10
            },
            "end": {
              "line": 44,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "property-for-value",
          "description": "defines the property that should be used for the value",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 69,
              "column": 10
            },
            "end": {
              "line": 72,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "DatetimeFormMixin"
        },
        {
          "name": "invalid",
          "description": "required attribute",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 57,
              "column": 10
            },
            "end": {
              "line": 63,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "default",
          "description": "The default value of the input, could be a number, a date-object or an iso-string in time, date or datetime-notation",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 166,
              "column": 10
            },
            "end": {
              "line": 168,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "value",
          "description": "value of the input",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 85,
              "column": 10
            },
            "end": {
              "line": 88,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "locale",
          "description": "The current locale",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 19,
              "column": 10
            },
            "end": {
              "line": 23,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "decimal-separator",
          "description": "locale separator for local decimal values",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 29,
              "column": 10
            },
            "end": {
              "line": 33,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "date-separator",
          "description": "Separator for local date values (date-string is still in ISO-Format)",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 39,
              "column": 10
            },
            "end": {
              "line": 43,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "time-separator",
          "description": "Separator for local time values (time-string is still in ISO-Format)",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 49,
              "column": 10
            },
            "end": {
              "line": 53,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "am-string",
          "description": "locale representation of 'AM'",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 58,
              "column": 10
            },
            "end": {
              "line": 62,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "pm-string",
          "description": "locale representation of 'PM'",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 67,
              "column": 10
            },
            "end": {
              "line": 71,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "date-order",
          "description": "order of date-parts",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 76,
              "column": 10
            },
            "end": {
              "line": 86,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "year",
          "description": "The year of the selected date",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 48,
              "column": 10
            },
            "end": {
              "line": 51,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "month",
          "description": "The month of the selected date (starts with 1)",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 56,
              "column": 10
            },
            "end": {
              "line": 59,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "day",
          "description": "The day of the selected date",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 64,
              "column": 10
            },
            "end": {
              "line": 67,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour",
          "description": "The hour of the selected time",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 72,
              "column": 10
            },
            "end": {
              "line": 75,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour12",
          "description": "hour in 12-hour-format",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 81,
              "column": 10
            },
            "end": {
              "line": 85,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "is-am",
          "description": "true, when A.M. (when `hour` < 12)",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 91,
              "column": 10
            },
            "end": {
              "line": 95,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "minute",
          "description": "The minute of the selected time",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 100,
              "column": 10
            },
            "end": {
              "line": 103,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "second",
          "description": "The second of the selected time",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 108,
              "column": 10
            },
            "end": {
              "line": 111,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "millisecond",
          "description": "The millisecond of the selected time",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 116,
              "column": 10
            },
            "end": {
              "line": 119,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "datetime",
          "description": "the selected date and time (format: iso8601)",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 124,
              "column": 10
            },
            "end": {
              "line": 127,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "date",
          "description": "the selected date (format: iso8601)",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 132,
              "column": 10
            },
            "end": {
              "line": 135,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "time",
          "description": "the selected time (format: iso8601)",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 140,
              "column": 10
            },
            "end": {
              "line": 143,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "value-as-date",
          "description": "The date-object of the selected date",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 148,
              "column": 10
            },
            "end": {
              "line": 152,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Date | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "value-as-number",
          "description": "The value of the selected date",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 157,
              "column": 10
            },
            "end": {
              "line": 161,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "min",
          "description": "The minimal date, could be a number, a date-object or an iso-string in time, date or datetime-notation",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 181,
              "column": 10
            },
            "end": {
              "line": 185,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "max",
          "description": "The maximal date, could be a number, a date-object or an iso-string in time, date or datetime-notation",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 197,
              "column": 10
            },
            "end": {
              "line": 201,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour12-format",
          "description": "when true, 12-hour time format, else 24-hour",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 214,
              "column": 10
            },
            "end": {
              "line": 218,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "clamp",
          "description": "Clamp datetime to a property\npossible values: 'month', 'day', 'hour'",
          "sourceRange": {
            "start": {
              "line": 252,
              "column": 10
            },
            "end": {
              "line": 256,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "timezone",
          "description": "The timezone offset in '±hh:mm' format",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 233,
              "column": 10
            },
            "end": {
              "line": 237,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "offset-minutes",
          "description": "The offset minutes of the set timezone",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 242,
              "column": 10
            },
            "end": {
              "line": 246,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "step",
          "description": "If set the step defines the step a date should be incremented (in seconds). The input for the most inferior standing that would create an integer step is used to increment the value.\nFor example, if the **step** is:\n + **0.05**: the millisecond-input will increment the value by 50 (50 milliseconds), the other inputs behaive as expected\n + **1.05**: the millisecond-input will increment the value by 1050 (1 second and 50 millisecond), the other inputs behaive as expected\n + **2**: the millisecond-input will be disabled, the second-input will increment the value by 2000 (2 seconds), the other inputs behaive as expected\n + **180**: the millisecond-input and the second-input will be disabled, the minute-input will increment the value by 180000 (3 minutes), the other inputs behaive as expected\nIf `step=\"0\"` all inputs will be disabled, else if the step is below _0.001_ the step will be set to **0.001**. The most supirior input that will become the given step is the day-input.",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 33,
              "column": 10
            },
            "end": {
              "line": 36,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeFormMixin"
        },
        {
          "name": "current-hovered-day-node",
          "description": "Current hovered day node\nto access: bind the attribute ('current-hovered-day-node') and get its dataset `year`, `month` or `day`-property",
          "sourceRange": {
            "start": {
              "line": 262,
              "column": 10
            },
            "end": {
              "line": 266,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Node | null | undefined"
        },
        {
          "name": "current-active-day-node",
          "description": "Node of the last clicked day-field (by clicking or keypress)\nto access: bind the attribute ('current-active-day-node') and get its dataset `year`, `month` or `day`-property",
          "sourceRange": {
            "start": {
              "line": 272,
              "column": 10
            },
            "end": {
              "line": 276,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Node | null | undefined"
        },
        {
          "name": "current-selected-day-node",
          "description": "Node of the last selected day\nto access: bind the attribute ('current-selected-day-node') and get its dataset `year`, `month` or `day`-property",
          "sourceRange": {
            "start": {
              "line": 282,
              "column": 10
            },
            "end": {
              "line": 286,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Node | null | undefined"
        },
        {
          "name": "first-day-of-week",
          "description": "Defines the first day of the week to use. Defaults to `1` (`monday`)\ne.g. when `firstDayOfWeek` is `0` the first day of the week would be `sunday`",
          "sourceRange": {
            "start": {
              "line": 300,
              "column": 10
            },
            "end": {
              "line": 303,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "mixins": [
        "SwitchMixin",
        "DatetimeFormMixin"
      ]
    },
    {
      "description": "Mixin for date-picker",
      "summary": "",
      "path": "date-picker.html",
      "properties": [
        {
          "name": "name",
          "type": "string | null | undefined",
          "description": "name of the input",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 16,
              "column": 10
            },
            "end": {
              "line": 18,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "title",
          "type": "string | null | undefined",
          "description": "description for the element and can be used as a hint for invalid values",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 23,
              "column": 10
            },
            "end": {
              "line": 26,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "disabled",
          "type": "boolean | null | undefined",
          "description": "disables the input",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 31,
              "column": 10
            },
            "end": {
              "line": 35,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "required",
          "type": "boolean | null | undefined",
          "description": "required attribute",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 40,
              "column": 10
            },
            "end": {
              "line": 44,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "propertyForValue",
          "type": "string | null | undefined",
          "description": "defines the property that should be used for the value",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 49,
              "column": 10
            },
            "end": {
              "line": 52,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_createReflectPropertyToValueObserver\"",
              "attributeType": "String"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "invalid",
          "type": "boolean | null | undefined",
          "description": "required attribute",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 57,
              "column": 10
            },
            "end": {
              "line": 63,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_valueIsSet",
          "type": "boolean | null | undefined",
          "description": "is true when the value is not undefined",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 68,
              "column": 10
            },
            "end": {
              "line": 72,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "default",
          "type": "Object | null | undefined",
          "description": "default value of the value, when it does not validate",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 77,
              "column": 10
            },
            "end": {
              "line": 80,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_defaultChanged\"",
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "value",
          "type": "Object | null | undefined",
          "description": "value of the input",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 85,
              "column": 10
            },
            "end": {
              "line": 88,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "locale",
          "type": "string | null | undefined",
          "description": "The current locale",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 19,
              "column": 10
            },
            "end": {
              "line": 23,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "decimalSeparator",
          "type": "string",
          "description": "locale separator for local decimal values",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 29,
              "column": 10
            },
            "end": {
              "line": 33,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "dateSeparator",
          "type": "string",
          "description": "Separator for local date values (date-string is still in ISO-Format)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 39,
              "column": 10
            },
            "end": {
              "line": 43,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "timeSeparator",
          "type": "string",
          "description": "Separator for local time values (time-string is still in ISO-Format)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 49,
              "column": 10
            },
            "end": {
              "line": 53,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "amString",
          "type": "string | null | undefined",
          "description": "locale representation of 'AM'",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 58,
              "column": 10
            },
            "end": {
              "line": 62,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "pmString",
          "type": "string | null | undefined",
          "description": "locale representation of 'PM'",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 67,
              "column": 10
            },
            "end": {
              "line": 71,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "dateOrder",
          "type": "Object | null | undefined",
          "description": "order of date-parts",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 76,
              "column": 10
            },
            "end": {
              "line": 86,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Object"
            }
          },
          "defaultValue": "{\"parts\":[],\"timeFirst\":false,\"dateFirst\":true}",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "year",
          "type": "number | null | undefined",
          "description": "The year of the selected date",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 48,
              "column": 10
            },
            "end": {
              "line": 51,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "month",
          "type": "number | null | undefined",
          "description": "The month of the selected date (starts with 1)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 56,
              "column": 10
            },
            "end": {
              "line": 59,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "day",
          "type": "number | null | undefined",
          "description": "The day of the selected date",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 64,
              "column": 10
            },
            "end": {
              "line": 67,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour",
          "type": "number | null | undefined",
          "description": "The hour of the selected time",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 72,
              "column": 10
            },
            "end": {
              "line": 75,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour12",
          "type": "number",
          "description": "hour in 12-hour-format",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 81,
              "column": 10
            },
            "end": {
              "line": 85,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_hour12Changed\"",
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "isAm",
          "type": "boolean",
          "description": "true, when A.M. (when `hour` < 12)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 91,
              "column": 10
            },
            "end": {
              "line": 95,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_isAmChanged\"",
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "minute",
          "type": "number | null | undefined",
          "description": "The minute of the selected time",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 100,
              "column": 10
            },
            "end": {
              "line": 103,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "second",
          "type": "number | null | undefined",
          "description": "The second of the selected time",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 108,
              "column": 10
            },
            "end": {
              "line": 111,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "millisecond",
          "type": "number | null | undefined",
          "description": "The millisecond of the selected time",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 116,
              "column": 10
            },
            "end": {
              "line": 119,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "datetime",
          "type": "string | null | undefined",
          "description": "the selected date and time (format: iso8601)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 124,
              "column": 10
            },
            "end": {
              "line": 127,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "date",
          "type": "string | null | undefined",
          "description": "the selected date (format: iso8601)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 132,
              "column": 10
            },
            "end": {
              "line": 135,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "time",
          "type": "string | null | undefined",
          "description": "the selected time (format: iso8601)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 140,
              "column": 10
            },
            "end": {
              "line": 143,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "valueAsDate",
          "type": "Date | null | undefined",
          "description": "The date-object of the selected date",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 148,
              "column": 10
            },
            "end": {
              "line": 152,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_valueAsDateChanged\"",
              "attributeType": "Date"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "valueAsNumber",
          "type": "number | null | undefined",
          "description": "The value of the selected date",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 157,
              "column": 10
            },
            "end": {
              "line": 161,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_valueAsNumberChanged\"",
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_defaultValue",
          "type": "number | null | undefined",
          "description": "value of the default date",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 173,
              "column": 10
            },
            "end": {
              "line": 176,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "min",
          "type": "Object | null | undefined",
          "description": "The minimal date, could be a number, a date-object or an iso-string in time, date or datetime-notation",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 181,
              "column": 10
            },
            "end": {
              "line": 185,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_minChanged\"",
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_minValue",
          "type": "number | null | undefined",
          "description": "value if the minimum date",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 190,
              "column": 10
            },
            "end": {
              "line": 192,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "max",
          "type": "Object | null | undefined",
          "description": "The maximal date, could be a number, a date-object or an iso-string in time, date or datetime-notation",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 197,
              "column": 10
            },
            "end": {
              "line": 201,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_maxChanged\"",
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_maxValue",
          "type": "number | null | undefined",
          "description": "value if the maximum date",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 206,
              "column": 10
            },
            "end": {
              "line": 208,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour12Format",
          "type": "boolean",
          "description": "when true, 12-hour time format, else 24-hour",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 214,
              "column": 10
            },
            "end": {
              "line": 218,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "clamp",
          "type": "string | null | undefined",
          "description": "Clamp datetime to a property\npossible values:'month', 'day', 'hour', 'minute', 'second', 'millisecond'",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 224,
              "column": 10
            },
            "end": {
              "line": 228,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_clampChanged\"",
              "attributeType": "String"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "timezone",
          "type": "string | null | undefined",
          "description": "The timezone offset in '±hh:mm' format",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 233,
              "column": 10
            },
            "end": {
              "line": 237,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_timezoneChanged\"",
              "attributeType": "String"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "offsetMinutes",
          "type": "number | null | undefined",
          "description": "The offset minutes of the set timezone",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 242,
              "column": 10
            },
            "end": {
              "line": 246,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_offsetMinutesChanged\"",
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_timeZoneHours",
          "type": "number | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 248,
              "column": 10
            },
            "end": {
              "line": 250,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_timeZoneMinutes",
          "type": "number | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 252,
              "column": 10
            },
            "end": {
              "line": 254,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_recentLocalTimezoneOffset",
          "type": "number | null | undefined",
          "description": "The offset minute of the current datetime",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 259,
              "column": 10
            },
            "end": {
              "line": 261,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_timeOnly",
          "type": "boolean | null | undefined",
          "description": "if true perspective starts at 0 (1970-01-01)",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 266,
              "column": 10
            },
            "end": {
              "line": 269,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_maxDayOfMonth",
          "type": "number",
          "description": "exclusive max day of month",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 275,
              "column": 10
            },
            "end": {
              "line": 278,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_dateLocked",
          "type": "boolean | null | undefined",
          "description": "lock to date and ignore time",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 283,
              "column": 10
            },
            "end": {
              "line": 286,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "step",
          "type": "number | null | undefined",
          "description": "If set the step defines the step a date should be incremented (in seconds). The input for the most inferior standing that would create an integer step is used to increment the value.\nFor example, if the **step** is:\n + **0.05**: the millisecond-input will increment the value by 50 (50 milliseconds), the other inputs behaive as expected\n + **1.05**: the millisecond-input will increment the value by 1050 (1 second and 50 millisecond), the other inputs behaive as expected\n + **2**: the millisecond-input will be disabled, the second-input will increment the value by 2000 (2 seconds), the other inputs behaive as expected\n + **180**: the millisecond-input and the second-input will be disabled, the minute-input will increment the value by 180000 (3 minutes), the other inputs behaive as expected\nIf `step=\"0\"` all inputs will be disabled, else if the step is below _0.001_ the step will be set to **0.001**. The most supirior input that will become the given step is the day-input.",
          "privacy": "public",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 33,
              "column": 10
            },
            "end": {
              "line": 36,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeFormMixin"
        },
        {
          "name": "_partsDisabled",
          "type": "Object | null | undefined",
          "description": "date-parts that are disabled",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 41,
              "column": 10
            },
            "end": {
              "line": 47,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Object"
            }
          },
          "defaultValue": "{}",
          "inheritedFrom": "DatetimeFormMixin"
        },
        {
          "name": "_partsStep",
          "type": "Object | null | undefined",
          "description": "the computed steps for the date-parts",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 52,
              "column": 10
            },
            "end": {
              "line": 65,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "Object"
            }
          },
          "defaultValue": "{\"day\":1,\"hour\":1,\"minute\":1,\"second\":1,\"millisecond\":1}",
          "inheritedFrom": "DatetimeFormMixin"
        },
        {
          "name": "hideResetButton",
          "type": "boolean | null | undefined",
          "description": "if true, the reset button is hidden",
          "privacy": "public",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 298,
              "column": 10
            },
            "end": {
              "line": 301,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "DatetimeInputMixin"
        },
        {
          "name": "withTimezone",
          "type": "boolean | null | undefined",
          "description": "if true, timezone inputs are shown",
          "privacy": "public",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 306,
              "column": 10
            },
            "end": {
              "line": 309,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "DatetimeInputMixin"
        },
        {
          "name": "_resetButtonIsInvisible",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 311,
              "column": 10
            },
            "end": {
              "line": 314,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "DatetimeInputMixin"
        },
        {
          "name": "dwellTime",
          "type": "number",
          "description": "dwell time of incrementing inputs by the buttons in milliseconds. It is minimal 15 milliseconds.",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 33,
              "column": 10
            },
            "end": {
              "line": 37,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_dwellTimeChanged\"",
              "attributeType": "Number"
            }
          },
          "defaultValue": "50",
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "dwellDelay",
          "type": "number",
          "description": "delay when incrementing inputs by the buttons in milliseconds. It is minimal 15 milliseconds.",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 43,
              "column": 10
            },
            "end": {
              "line": 47,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_dwellTimeChanged\"",
              "attributeType": "Number"
            }
          },
          "defaultValue": "500",
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "_switchClassSelector",
          "type": "string | null | undefined",
          "description": "class property of switches",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 52,
              "column": 10
            },
            "end": {
              "line": 55,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"switch\"",
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "currentHoveredDayNode",
          "type": "Node | null | undefined",
          "description": "Current hovered day node\nto access: bind the attribute ('current-hovered-day-node') and get its dataset `year`, `month` or `day`-property",
          "privacy": "public",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 262,
              "column": 10
            },
            "end": {
              "line": 266,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "Node"
            }
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "currentActiveDayNode",
          "type": "Node | null | undefined",
          "description": "Node of the last clicked day-field (by clicking or keypress)\nto access: bind the attribute ('current-active-day-node') and get its dataset `year`, `month` or `day`-property",
          "privacy": "public",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 272,
              "column": 10
            },
            "end": {
              "line": 276,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "Node"
            }
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "currentSelectedDayNode",
          "type": "Node | null | undefined",
          "description": "Node of the last selected day\nto access: bind the attribute ('current-selected-day-node') and get its dataset `year`, `month` or `day`-property",
          "privacy": "public",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 282,
              "column": 10
            },
            "end": {
              "line": 286,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "Node"
            }
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "firstDayOfWeek",
          "type": "number | null | undefined",
          "description": "Defines the first day of the week to use. Defaults to `1` (`monday`)\ne.g. when `firstDayOfWeek` is `0` the first day of the week would be `sunday`",
          "privacy": "public",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 300,
              "column": 10
            },
            "end": {
              "line": 303,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "1",
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "native",
          "type": "boolean | null | undefined",
          "description": "Set to `true` to use the native input, if it available",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 173,
              "column": 10
            },
            "end": {
              "line": 176,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "nativeOnMobile",
          "type": "boolean | null | undefined",
          "description": "Set to `true` to use the native input automatically on mobile devices, if it available",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 181,
              "column": 10
            },
            "end": {
              "line": 184,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_nativeOnMobileChanged\"",
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "mobileUserAgentTestString",
          "type": "string | null | undefined",
          "description": "When `nativeOnMobile` is set to `true` this string is used to test the userAgent for a mobile device",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 189,
              "column": 10
            },
            "end": {
              "line": 193,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_nativeOnMobileChanged\"",
              "attributeType": "String"
            }
          },
          "defaultValue": "\"mM]obi|[tT]ablet|[aA]ndroid\"",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "opened",
          "type": "boolean | null | undefined",
          "description": "if `true` the picker is opened",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 198,
              "column": 10
            },
            "end": {
              "line": 203,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "horizontalAlign",
          "type": "string | null | undefined",
          "description": "The orientation against which to align the element horizontally\nrelative to the related input element. Possible values are \"left\", \"right\", \"center\", \"auto\". (comparable to `iron-fit-behavior` and its `no-overlap`-attribute)",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 209,
              "column": 10
            },
            "end": {
              "line": 213,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"auto\"",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "verticalAlign",
          "type": "string | null | undefined",
          "description": "The orientation against which to align the element vertically\nrelative to the related input element. Possible values are \"top\", \"bottom\", \"middle\", \"auto\". (comparable to `iron-fit-behavior` and its `no-overlap`-attribute)",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 219,
              "column": 10
            },
            "end": {
              "line": 223,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"auto\"",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "autoConfirm",
          "type": "boolean | null | undefined",
          "description": "Set to `true` to make the input auto-confirming",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 228,
              "column": 10
            },
            "end": {
              "line": 231,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_autoConfirmChanged\"",
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "noCancelOnEscKey",
          "type": "boolean | null | undefined",
          "description": "Set to `true` to disable canceling the overlay with the ESC key.",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 236,
              "column": 10
            },
            "end": {
              "line": 239,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "noCancelOnOutsideClick",
          "type": "boolean | null | undefined",
          "description": "Set to `true` to disable canceling the dropdown by clicking outside the picker.",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 244,
              "column": 10
            },
            "end": {
              "line": 247,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "noTip",
          "type": "boolean | null | undefined",
          "description": "Set to `true` to disable the tip of the picker",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 252,
              "column": 10
            },
            "end": {
              "line": 255,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "confirmedValue",
          "type": "Object | null | undefined",
          "description": "The confirmed value. When `auto-confirm` is not set, the value will only change, when you confirm.",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 260,
              "column": 10
            },
            "end": {
              "line": 263,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "confirmedDatetime",
          "type": "string | null | undefined",
          "description": "The confirmed datetime. When `auto-confirm` is not set, the datetime will only change, when you confirm.",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 154,
              "column": 10
            },
            "end": {
              "line": 157,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "hideNowButton",
          "type": "boolean | null | undefined",
          "description": "Set to `true` to hide the `now`-button",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 162,
              "column": 10
            },
            "end": {
              "line": 164,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "DatetimePickerMixin"
        }
      ],
      "methods": [
        {
          "name": "_attachDom",
          "description": "attach dom with `delegatesFocus: true` so that the element is also focussed while its's children are too, and to autofocus to first tabable",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 103,
              "column": 6
            },
            "end": {
              "line": 112,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom"
            }
          ],
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 283,
              "column": 6
            },
            "end": {
              "line": 287,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "validate",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 384,
              "column": 6
            },
            "end": {
              "line": 391,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_computeInvalid",
          "description": "defines whether the value is set",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 130,
              "column": 6
            },
            "end": {
              "line": 132,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "[Object]"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_validate",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 141,
              "column": 6
            },
            "end": {
              "line": 143,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "Object",
              "description": "value to validate"
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "true, if the value is valid"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_computeValueIsSet",
          "description": "defines whether the value is set",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 149,
              "column": 6
            },
            "end": {
              "line": 151,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "[Object]"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_isSet",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 159,
              "column": 6
            },
            "end": {
              "line": 161,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "Object",
              "description": "value to test"
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "true, if the value is set"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_valueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 474,
              "column": 6
            },
            "end": {
              "line": 483,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_defaultChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 516,
              "column": 6
            },
            "end": {
              "line": 521,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "def"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_createReflectPropertyToValueObserver",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 180,
              "column": 6
            },
            "end": {
              "line": 190,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "prop"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_reflectPropertyToValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 192,
              "column": 6
            },
            "end": {
              "line": 194,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_reflectValueToProperty",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 196,
              "column": 6
            },
            "end": {
              "line": 198,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_localeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 96,
              "column": 6
            },
            "end": {
              "line": 283,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "locale"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "_shouldPropertyChange",
          "description": "overwritten of polymer to handle -0",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 34,
              "column": 6
            },
            "end": {
              "line": 40,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property"
            },
            {
              "name": "value"
            },
            {
              "name": "old"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "now",
          "description": "Sets value to the actual date",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 304,
              "column": 6
            },
            "end": {
              "line": 320,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "setDate",
          "description": "sets date to all necessary properties",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 326,
              "column": 6
            },
            "end": {
              "line": 390,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date",
              "description": "[the date to set]"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "resetDate",
          "description": "resets the date (if `default` is set, it will be used for the new value)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 396,
              "column": 6
            },
            "end": {
              "line": 433,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "Event",
              "description": "[a causing event will not propagated]"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_defaultValueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 435,
              "column": 6
            },
            "end": {
              "line": 442,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "def"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computeDefaultValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 444,
              "column": 6
            },
            "end": {
              "line": 446,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "def"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computeDatetime",
          "description": "modify date components of a date-object. it needs to be applied or called on a date object",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 460,
              "column": 6
            },
            "end": {
              "line": 537,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "year",
              "type": "number"
            },
            {
              "name": "month",
              "type": "number"
            },
            {
              "name": "day",
              "type": "number"
            },
            {
              "name": "hour",
              "type": "number"
            },
            {
              "name": "minute",
              "type": "number"
            },
            {
              "name": "second",
              "type": "number"
            },
            {
              "name": "millisecond",
              "type": "number"
            }
          ],
          "return": {
            "type": "object",
            "desc": "the changed object and the new offset-minutes"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_dateTimeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 539,
              "column": 6
            },
            "end": {
              "line": 566,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "date"
            },
            {
              "name": "time"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_datetimeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 568,
              "column": 6
            },
            "end": {
              "line": 611,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "datetime"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_valueAsNumberChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 613,
              "column": 6
            },
            "end": {
              "line": 620,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_valueAsDateChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 622,
              "column": 6
            },
            "end": {
              "line": 633,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_fromDatetime",
          "description": "compute a date object",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 640,
              "column": 6
            },
            "end": {
              "line": 667,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "datetime"
            }
          ],
          "return": {
            "type": "Date",
            "desc": "date"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_clampChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 669,
              "column": 6
            },
            "end": {
              "line": 677,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "clamp"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_minChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 679,
              "column": 6
            },
            "end": {
              "line": 696,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "min"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_maxChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 698,
              "column": 6
            },
            "end": {
              "line": 715,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "max"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_minMaxValueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 717,
              "column": 6
            },
            "end": {
              "line": 721,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_checkThreshold",
          "description": "test date object against thresholds",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 728,
              "column": 6
            },
            "end": {
              "line": 739,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date"
            }
          ],
          "return": {
            "type": "Date",
            "desc": "ether the threshold when the date is exceeding or the date object itself"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_toDate",
          "description": "get date string from a date object",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 746,
              "column": 6
            },
            "end": {
              "line": 752,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date",
              "description": "the Date to serialize"
            }
          ],
          "return": {
            "type": "String",
            "desc": "date string"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_toTime",
          "description": "get UTC time string from a date object",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 759,
              "column": 6
            },
            "end": {
              "line": 764,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date",
              "description": "the Date to serialize"
            }
          ],
          "return": {
            "type": "String",
            "desc": "date string"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_toUTCDate",
          "description": "get UTC date string from a date object",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 771,
              "column": 6
            },
            "end": {
              "line": 777,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date",
              "description": "the Date to serialize"
            }
          ],
          "return": {
            "type": "String",
            "desc": "date string"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_toUTCTime",
          "description": "get UTC time string from a date object",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 784,
              "column": 6
            },
            "end": {
              "line": 789,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date",
              "description": "the Date to serialize"
            }
          ],
          "return": {
            "type": "String",
            "desc": "time string"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "__toDate",
          "description": "get date string from date components",
          "privacy": "private",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 798,
              "column": 6
            },
            "end": {
              "line": 800,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "year",
              "type": "Number"
            },
            {
              "name": "month",
              "type": "Number"
            },
            {
              "name": "day",
              "type": "Number"
            }
          ],
          "return": {
            "type": "String",
            "desc": "date string"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "__toTime",
          "description": "get time string from date components",
          "privacy": "private",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 810,
              "column": 6
            },
            "end": {
              "line": 812,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hour",
              "type": "Number"
            },
            {
              "name": "minute",
              "type": "Number"
            },
            {
              "name": "second",
              "type": "Number"
            },
            {
              "name": "millisecond",
              "type": "Number"
            }
          ],
          "return": {
            "type": "String",
            "desc": "time string"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_clampUTC",
          "description": "clamp UTC values",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 820,
              "column": 6
            },
            "end": {
              "line": 837,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date",
              "description": "the Date to clamp"
            },
            {
              "name": "clamp",
              "type": "String",
              "description": "the date component to clamp"
            }
          ],
          "return": {
            "type": "Date",
            "desc": "the clamped date"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_pad",
          "description": "pad a string with 0",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 845,
              "column": 6
            },
            "end": {
              "line": 851,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "n",
              "type": "Number",
              "description": "number to pad"
            },
            {
              "name": "padLength",
              "type": "Number",
              "description": "total length of strings"
            }
          ],
          "return": {
            "type": "String",
            "desc": "padded string"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_hour12Changed",
          "description": "`hour12` is the hour in hour12-format, that starts is minimal 1 and maximal 12, midnight is at 12am and noon is 12pm",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 856,
              "column": 6
            },
            "end": {
              "line": 860,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hour12"
            },
            {
              "name": "old"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_isAmChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 862,
              "column": 6
            },
            "end": {
              "line": 866,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "isAm"
            },
            {
              "name": "old"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_ifClamped",
          "description": "clamp to date component",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 871,
              "column": 6
            },
            "end": {
              "line": 876,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "clamp"
            },
            {
              "name": "comp"
            },
            {
              "name": "hidden"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_checkDefaultTimezone",
          "description": "set the default timezone if needed",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 882,
              "column": 6
            },
            "end": {
              "line": 895,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computeTimezoneShift",
          "description": "correct a timezone shift when date changes from winter to summertime (locally)",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 901,
              "column": 6
            },
            "end": {
              "line": 910,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_timezoneChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 912,
              "column": 6
            },
            "end": {
              "line": 932,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "timezone"
            },
            {
              "name": "oldValue"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_offsetMinutesChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 934,
              "column": 6
            },
            "end": {
              "line": 942,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "offsetMinutes"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_timeZoneHoursMinutesChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 944,
              "column": 6
            },
            "end": {
              "line": 963,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hour"
            },
            {
              "name": "minute"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computeTimezone",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 965,
              "column": 6
            },
            "end": {
              "line": 987,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "offsetMinutes"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computeTimezoneOffset",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 989,
              "column": 6
            },
            "end": {
              "line": 1019,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "timezone"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computeMaxDayOfMonth",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 1021,
              "column": 6
            },
            "end": {
              "line": 1029,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "year"
            },
            {
              "name": "month"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computePartsStep",
          "description": "compute the steps for the related inputs. The day-input is the highest modified input allthough if the step is higher than a day in seconds it might also change month- or year-inputs.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 104,
              "column": 6
            },
            "end": {
              "line": 185,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "step"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeFormMixin"
        },
        {
          "name": "_computePartsDisabled",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 187,
              "column": 6
            },
            "end": {
              "line": 205,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "change"
            },
            {
              "name": "disabled"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeFormMixin"
        },
        {
          "name": "_computeOr",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 318,
              "column": 6
            },
            "end": {
              "line": 320,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "a"
            },
            {
              "name": "b"
            }
          ],
          "inheritedFrom": "DatetimeInputMixin"
        },
        {
          "name": "_computePartOrder",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 322,
              "column": 6
            },
            "end": {
              "line": 324,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "first"
            }
          ],
          "inheritedFrom": "DatetimeInputMixin"
        },
        {
          "name": "_computeResetButtonIsInvisible",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 326,
              "column": 6
            },
            "end": {
              "line": 328,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "valueIsSet"
            },
            {
              "name": "defaultValue"
            },
            {
              "name": "valueAsNumber"
            }
          ],
          "inheritedFrom": "DatetimeInputMixin"
        },
        {
          "name": "_orderDateParts",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/date-input.html",
            "start": {
              "line": 62,
              "column": 6
            },
            "end": {
              "line": 117,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "order"
            },
            {
              "name": "clamp"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DateInputPattern"
        },
        {
          "name": "_getDefaultForProp",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 630,
              "column": 6
            },
            "end": {
              "line": 640,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "prop"
            }
          ],
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 289,
              "column": 6
            },
            "end": {
              "line": 293,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_addSwitchListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 89,
              "column": 6
            },
            "end": {
              "line": 104,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "_removeSwitchListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 106,
              "column": 6
            },
            "end": {
              "line": 116,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "_checkKeycodeSwitch",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 118,
              "column": 6
            },
            "end": {
              "line": 126,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "__getEventTarget",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 128,
              "column": 6
            },
            "end": {
              "line": 142,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            },
            {
              "name": "classSelector"
            }
          ],
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "__increm",
          "description": "increment property by being called by an Event on an `switch`-Node",
          "privacy": "private",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 149,
              "column": 6
            },
            "end": {
              "line": 176,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "Event",
              "description": "Event it was called on"
            },
            {
              "name": "once",
              "type": "Boolean",
              "description": "if true, it doesn't setup an intervall to continue incrementing (e.g. keyPressEvents are fired itself repeatedly while the key is pressed)"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "__incremProp",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 178,
              "column": 6
            },
            "end": {
              "line": 180,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "prop"
            },
            {
              "name": "step"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "_stopActiveIncremJob",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 186,
              "column": 6
            },
            "end": {
              "line": 199,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "_dwellTimeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 201,
              "column": 6
            },
            "end": {
              "line": 207,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dwellTime"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "_dwellDelayChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 209,
              "column": 6
            },
            "end": {
              "line": 215,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dwellDelay"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "_onMouseMoveDay",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 320,
              "column": 6
            },
            "end": {
              "line": 333,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_onClickDay",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 335,
              "column": 6
            },
            "end": {
              "line": 361,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "confirm",
          "description": "confirms the input",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 443,
              "column": 6
            },
            "end": {
              "line": 452,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "[type]",
              "description": "Event"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_computeIncremPropTop",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 374,
              "column": 6
            },
            "end": {
              "line": 379,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hideMonth"
            }
          ],
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_setWeekDayCaptions",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 381,
              "column": 6
            },
            "end": {
              "line": 396,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "locale"
            },
            {
              "name": "firstDayOfWeek"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_setMonthSelectorOptions",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 398,
              "column": 6
            },
            "end": {
              "line": 407,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "locale"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "renderCalendar",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 38,
              "column": 6
            },
            "end": {
              "line": 43,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "year"
            },
            {
              "name": "month"
            },
            {
              "name": "day"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_clampDay",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 541,
              "column": 6
            },
            "end": {
              "line": 547,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d"
            }
          ],
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_dayDiff",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 549,
              "column": 6
            },
            "end": {
              "line": 551,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "end"
            },
            {
              "name": "start"
            }
          ],
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_checkKeycodeForDates",
          "description": "key press event handler on days area",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 567,
              "column": 6
            },
            "end": {
              "line": 628,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "[type]",
              "description": "Event"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_addEventListenerToNode",
          "description": "Add the event listener to the node if it is a gestures event.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../polymer/lib/mixins/gesture-event-listeners.html",
            "start": {
              "line": 55,
              "column": 6
            },
            "end": {
              "line": 59,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node",
              "type": "!Node",
              "description": "Node to add event listener to"
            },
            {
              "name": "eventName",
              "type": "string",
              "description": "Name of event"
            },
            {
              "name": "handler",
              "type": "function (!Event): void",
              "description": "Listener function to add"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.GestureEventListeners"
        },
        {
          "name": "_removeEventListenerFromNode",
          "description": "Remove the event listener to the node if it is a gestures event.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../polymer/lib/mixins/gesture-event-listeners.html",
            "start": {
              "line": 69,
              "column": 6
            },
            "end": {
              "line": 73,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node",
              "type": "!Node",
              "description": "Node to remove event listener from"
            },
            {
              "name": "eventName",
              "type": "string",
              "description": "Name of event"
            },
            {
              "name": "handler",
              "type": "function (!Event): void",
              "description": "Listener function to remove"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.GestureEventListeners"
        },
        {
          "name": "_addPickerTransitionEndListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 295,
              "column": 6
            },
            "end": {
              "line": 302,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_removePickerTransitionEndListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 304,
              "column": 6
            },
            "end": {
              "line": 306,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_onPickerTransitionEnd",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 308,
              "column": 6
            },
            "end": {
              "line": 313,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_addCancelOnClickListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 315,
              "column": 6
            },
            "end": {
              "line": 322,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_removeCancelOnClickListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 324,
              "column": 6
            },
            "end": {
              "line": 327,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_stopPropagation",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 329,
              "column": 6
            },
            "end": {
              "line": 332,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_addKeyListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 334,
              "column": 6
            },
            "end": {
              "line": 337,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_removeKeyListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 339,
              "column": 6
            },
            "end": {
              "line": 342,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_nativeOnMobileChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 344,
              "column": 6
            },
            "end": {
              "line": 357,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_checkKeycode",
          "description": "key press event handler",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 363,
              "column": 6
            },
            "end": {
              "line": 382,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "[type]",
              "description": "Event"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "open",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 45,
              "column": 6
            },
            "end": {
              "line": 54,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "close",
          "description": "close the picker",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 415,
              "column": 6
            },
            "end": {
              "line": 423,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "[type]",
              "description": "Event"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "toggle",
          "description": "toggle the picker",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 429,
              "column": 6
            },
            "end": {
              "line": 437,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "[type]",
              "description": "Event"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "cancel",
          "description": "cancels the input",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 458,
              "column": 6
            },
            "end": {
              "line": 472,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "[type]",
              "description": "Event"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_confirmedValueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 295,
              "column": 6
            },
            "end": {
              "line": 303,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "confirmedValue"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_reset",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 493,
              "column": 6
            },
            "end": {
              "line": 498,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_setConfirmedValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 305,
              "column": 6
            },
            "end": {
              "line": 312,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_resetValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 506,
              "column": 6
            },
            "end": {
              "line": 510,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_autoConfirmChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 512,
              "column": 6
            },
            "end": {
              "line": 514,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "autoConfirm"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_computeAnd",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 181,
              "column": 6
            },
            "end": {
              "line": 183,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "a"
            },
            {
              "name": "b"
            }
          ],
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_computeNativeStep",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 185,
              "column": 6
            },
            "end": {
              "line": 204,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "step"
            },
            {
              "name": "clamp"
            }
          ],
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_computeNativeValueAsNumber",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 206,
              "column": 6
            },
            "end": {
              "line": 227,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "native"
            },
            {
              "name": "valueAsNumber"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_reflectNativeValueAsNumber",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 229,
              "column": 6
            },
            "end": {
              "line": 253,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "native"
            },
            {
              "name": "nativeValueAsNumber"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_setDate",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 255,
              "column": 6
            },
            "end": {
              "line": 262,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_confirmedDatetimeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 264,
              "column": 6
            },
            "end": {
              "line": 276,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "confirmedDatetime"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_resetDate",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 314,
              "column": 6
            },
            "end": {
              "line": 317,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_resetConfirmedValues",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 319,
              "column": 6
            },
            "end": {
              "line": 327,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_resetValues",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 329,
              "column": 6
            },
            "end": {
              "line": 336,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 20,
          "column": 2
        },
        "end": {
          "line": 76,
          "column": 3
        }
      },
      "privacy": "public",
      "name": "DatePickerPattern",
      "attributes": [
        {
          "name": "name",
          "description": "name of the input",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 16,
              "column": 10
            },
            "end": {
              "line": 18,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "title",
          "description": "description for the element and can be used as a hint for invalid values",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 23,
              "column": 10
            },
            "end": {
              "line": 26,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "disabled",
          "description": "disables the input",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 31,
              "column": 10
            },
            "end": {
              "line": 35,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "required",
          "description": "required attribute",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 40,
              "column": 10
            },
            "end": {
              "line": 44,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "property-for-value",
          "description": "defines the property that should be used for the value",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 49,
              "column": 10
            },
            "end": {
              "line": 52,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "invalid",
          "description": "required attribute",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 57,
              "column": 10
            },
            "end": {
              "line": 63,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "default",
          "description": "default value of the value, when it does not validate",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 77,
              "column": 10
            },
            "end": {
              "line": 80,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "value",
          "description": "value of the input",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 85,
              "column": 10
            },
            "end": {
              "line": 88,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "locale",
          "description": "The current locale",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 19,
              "column": 10
            },
            "end": {
              "line": 23,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "decimal-separator",
          "description": "locale separator for local decimal values",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 29,
              "column": 10
            },
            "end": {
              "line": 33,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "date-separator",
          "description": "Separator for local date values (date-string is still in ISO-Format)",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 39,
              "column": 10
            },
            "end": {
              "line": 43,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "time-separator",
          "description": "Separator for local time values (time-string is still in ISO-Format)",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 49,
              "column": 10
            },
            "end": {
              "line": 53,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "am-string",
          "description": "locale representation of 'AM'",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 58,
              "column": 10
            },
            "end": {
              "line": 62,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "pm-string",
          "description": "locale representation of 'PM'",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 67,
              "column": 10
            },
            "end": {
              "line": 71,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "date-order",
          "description": "order of date-parts",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 76,
              "column": 10
            },
            "end": {
              "line": 86,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "year",
          "description": "The year of the selected date",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 48,
              "column": 10
            },
            "end": {
              "line": 51,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "month",
          "description": "The month of the selected date (starts with 1)",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 56,
              "column": 10
            },
            "end": {
              "line": 59,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "day",
          "description": "The day of the selected date",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 64,
              "column": 10
            },
            "end": {
              "line": 67,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour",
          "description": "The hour of the selected time",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 72,
              "column": 10
            },
            "end": {
              "line": 75,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour12",
          "description": "hour in 12-hour-format",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 81,
              "column": 10
            },
            "end": {
              "line": 85,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "is-am",
          "description": "true, when A.M. (when `hour` < 12)",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 91,
              "column": 10
            },
            "end": {
              "line": 95,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "minute",
          "description": "The minute of the selected time",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 100,
              "column": 10
            },
            "end": {
              "line": 103,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "second",
          "description": "The second of the selected time",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 108,
              "column": 10
            },
            "end": {
              "line": 111,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "millisecond",
          "description": "The millisecond of the selected time",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 116,
              "column": 10
            },
            "end": {
              "line": 119,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "datetime",
          "description": "the selected date and time (format: iso8601)",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 124,
              "column": 10
            },
            "end": {
              "line": 127,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "date",
          "description": "the selected date (format: iso8601)",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 132,
              "column": 10
            },
            "end": {
              "line": 135,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "time",
          "description": "the selected time (format: iso8601)",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 140,
              "column": 10
            },
            "end": {
              "line": 143,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "value-as-date",
          "description": "The date-object of the selected date",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 148,
              "column": 10
            },
            "end": {
              "line": 152,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Date | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "value-as-number",
          "description": "The value of the selected date",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 157,
              "column": 10
            },
            "end": {
              "line": 161,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "min",
          "description": "The minimal date, could be a number, a date-object or an iso-string in time, date or datetime-notation",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 181,
              "column": 10
            },
            "end": {
              "line": 185,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "max",
          "description": "The maximal date, could be a number, a date-object or an iso-string in time, date or datetime-notation",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 197,
              "column": 10
            },
            "end": {
              "line": 201,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour12-format",
          "description": "when true, 12-hour time format, else 24-hour",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 214,
              "column": 10
            },
            "end": {
              "line": 218,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "clamp",
          "description": "Clamp datetime to a property\npossible values:'month', 'day', 'hour', 'minute', 'second', 'millisecond'",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 224,
              "column": 10
            },
            "end": {
              "line": 228,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "timezone",
          "description": "The timezone offset in '±hh:mm' format",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 233,
              "column": 10
            },
            "end": {
              "line": 237,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "offset-minutes",
          "description": "The offset minutes of the set timezone",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 242,
              "column": 10
            },
            "end": {
              "line": 246,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "step",
          "description": "If set the step defines the step a date should be incremented (in seconds). The input for the most inferior standing that would create an integer step is used to increment the value.\nFor example, if the **step** is:\n + **0.05**: the millisecond-input will increment the value by 50 (50 milliseconds), the other inputs behaive as expected\n + **1.05**: the millisecond-input will increment the value by 1050 (1 second and 50 millisecond), the other inputs behaive as expected\n + **2**: the millisecond-input will be disabled, the second-input will increment the value by 2000 (2 seconds), the other inputs behaive as expected\n + **180**: the millisecond-input and the second-input will be disabled, the minute-input will increment the value by 180000 (3 minutes), the other inputs behaive as expected\nIf `step=\"0\"` all inputs will be disabled, else if the step is below _0.001_ the step will be set to **0.001**. The most supirior input that will become the given step is the day-input.",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 33,
              "column": 10
            },
            "end": {
              "line": 36,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeFormMixin"
        },
        {
          "name": "hide-reset-button",
          "description": "if true, the reset button is hidden",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 298,
              "column": 10
            },
            "end": {
              "line": 301,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "DatetimeInputMixin"
        },
        {
          "name": "with-timezone",
          "description": "if true, timezone inputs are shown",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 306,
              "column": 10
            },
            "end": {
              "line": 309,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "DatetimeInputMixin"
        },
        {
          "name": "dwell-time",
          "description": "dwell time of incrementing inputs by the buttons in milliseconds. It is minimal 15 milliseconds.",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 33,
              "column": 10
            },
            "end": {
              "line": 37,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "dwell-delay",
          "description": "delay when incrementing inputs by the buttons in milliseconds. It is minimal 15 milliseconds.",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 43,
              "column": 10
            },
            "end": {
              "line": 47,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "current-hovered-day-node",
          "description": "Current hovered day node\nto access: bind the attribute ('current-hovered-day-node') and get its dataset `year`, `month` or `day`-property",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 262,
              "column": 10
            },
            "end": {
              "line": 266,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Node | null | undefined",
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "current-active-day-node",
          "description": "Node of the last clicked day-field (by clicking or keypress)\nto access: bind the attribute ('current-active-day-node') and get its dataset `year`, `month` or `day`-property",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 272,
              "column": 10
            },
            "end": {
              "line": 276,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Node | null | undefined",
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "current-selected-day-node",
          "description": "Node of the last selected day\nto access: bind the attribute ('current-selected-day-node') and get its dataset `year`, `month` or `day`-property",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 282,
              "column": 10
            },
            "end": {
              "line": 286,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Node | null | undefined",
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "first-day-of-week",
          "description": "Defines the first day of the week to use. Defaults to `1` (`monday`)\ne.g. when `firstDayOfWeek` is `0` the first day of the week would be `sunday`",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 300,
              "column": 10
            },
            "end": {
              "line": 303,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "native",
          "description": "Set to `true` to use the native input, if it available",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 173,
              "column": 10
            },
            "end": {
              "line": 176,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "native-on-mobile",
          "description": "Set to `true` to use the native input automatically on mobile devices, if it available",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 181,
              "column": 10
            },
            "end": {
              "line": 184,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "mobile-user-agent-test-string",
          "description": "When `nativeOnMobile` is set to `true` this string is used to test the userAgent for a mobile device",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 189,
              "column": 10
            },
            "end": {
              "line": 193,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "opened",
          "description": "if `true` the picker is opened",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 198,
              "column": 10
            },
            "end": {
              "line": 203,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "horizontal-align",
          "description": "The orientation against which to align the element horizontally\nrelative to the related input element. Possible values are \"left\", \"right\", \"center\", \"auto\". (comparable to `iron-fit-behavior` and its `no-overlap`-attribute)",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 209,
              "column": 10
            },
            "end": {
              "line": 213,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "vertical-align",
          "description": "The orientation against which to align the element vertically\nrelative to the related input element. Possible values are \"top\", \"bottom\", \"middle\", \"auto\". (comparable to `iron-fit-behavior` and its `no-overlap`-attribute)",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 219,
              "column": 10
            },
            "end": {
              "line": 223,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "auto-confirm",
          "description": "Set to `true` to make the input auto-confirming",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 228,
              "column": 10
            },
            "end": {
              "line": 231,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "no-cancel-on-esc-key",
          "description": "Set to `true` to disable canceling the overlay with the ESC key.",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 236,
              "column": 10
            },
            "end": {
              "line": 239,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "no-cancel-on-outside-click",
          "description": "Set to `true` to disable canceling the dropdown by clicking outside the picker.",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 244,
              "column": 10
            },
            "end": {
              "line": 247,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "no-tip",
          "description": "Set to `true` to disable the tip of the picker",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 252,
              "column": 10
            },
            "end": {
              "line": 255,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "confirmed-value",
          "description": "The confirmed value. When `auto-confirm` is not set, the value will only change, when you confirm.",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 260,
              "column": 10
            },
            "end": {
              "line": 263,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "confirmed-datetime",
          "description": "The confirmed datetime. When `auto-confirm` is not set, the datetime will only change, when you confirm.",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 154,
              "column": 10
            },
            "end": {
              "line": 157,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "hide-now-button",
          "description": "Set to `true` to hide the `now`-button",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 162,
              "column": 10
            },
            "end": {
              "line": 164,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "DatetimePickerMixin"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "input-picker-closed",
          "description": "input-picker-closed\nFired after a picker has been closed.",
          "metadata": {},
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "type": "CustomEvent",
          "name": "input-picker-opened",
          "description": "input-picker-opened\nFired when a picker has been opened.",
          "metadata": {},
          "inheritedFrom": "InputPickerPattern"
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "mixins": [
        "DateInputPattern",
        "CalendarElementPattern",
        "DatetimePickerMixin"
      ]
    },
    {
      "description": "Mixin for calendar-element",
      "summary": "",
      "path": "time-element.html",
      "properties": [
        {
          "name": "dwellTime",
          "type": "number",
          "description": "dwell time of incrementing inputs by the buttons in milliseconds. It is minimal 15 milliseconds.",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 33,
              "column": 10
            },
            "end": {
              "line": 37,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_dwellTimeChanged\"",
              "attributeType": "Number"
            }
          },
          "defaultValue": "50",
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "dwellDelay",
          "type": "number",
          "description": "delay when incrementing inputs by the buttons in milliseconds. It is minimal 15 milliseconds.",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 43,
              "column": 10
            },
            "end": {
              "line": 47,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_dwellTimeChanged\"",
              "attributeType": "Number"
            }
          },
          "defaultValue": "500",
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "_switchClassSelector",
          "type": "string | null | undefined",
          "description": "class property of switches",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 52,
              "column": 10
            },
            "end": {
              "line": 55,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"switch\"",
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "name",
          "type": "string | null | undefined",
          "description": "name of the input",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 16,
              "column": 10
            },
            "end": {
              "line": 18,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "title",
          "type": "string | null | undefined",
          "description": "description for the element and can be used as a hint for invalid values",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 23,
              "column": 10
            },
            "end": {
              "line": 26,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "disabled",
          "type": "boolean | null | undefined",
          "description": "disables the input",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 31,
              "column": 10
            },
            "end": {
              "line": 35,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "required",
          "type": "boolean | null | undefined",
          "description": "required attribute",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 40,
              "column": 10
            },
            "end": {
              "line": 44,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "propertyForValue",
          "type": "string | null | undefined",
          "description": "defines the property that should be used for the value",
          "privacy": "public",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 69,
              "column": 10
            },
            "end": {
              "line": 72,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"valueAsNumber\"",
          "inheritedFrom": "DatetimeFormMixin"
        },
        {
          "name": "invalid",
          "type": "boolean | null | undefined",
          "description": "required attribute",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 57,
              "column": 10
            },
            "end": {
              "line": 63,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_valueIsSet",
          "type": "boolean | null | undefined",
          "description": "is true when the value is not undefined",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 68,
              "column": 10
            },
            "end": {
              "line": 72,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "default",
          "type": "Object | null | undefined",
          "description": "The default value of the input, could be a number, a date-object or an iso-string in time, date or datetime-notation",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 166,
              "column": 10
            },
            "end": {
              "line": 168,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "value",
          "type": "Object | null | undefined",
          "description": "value of the input",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 85,
              "column": 10
            },
            "end": {
              "line": 88,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "locale",
          "type": "string | null | undefined",
          "description": "The current locale",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 19,
              "column": 10
            },
            "end": {
              "line": 23,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "decimalSeparator",
          "type": "string",
          "description": "locale separator for local decimal values",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 29,
              "column": 10
            },
            "end": {
              "line": 33,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "dateSeparator",
          "type": "string",
          "description": "Separator for local date values (date-string is still in ISO-Format)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 39,
              "column": 10
            },
            "end": {
              "line": 43,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "timeSeparator",
          "type": "string",
          "description": "Separator for local time values (time-string is still in ISO-Format)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 49,
              "column": 10
            },
            "end": {
              "line": 53,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "amString",
          "type": "string | null | undefined",
          "description": "locale representation of 'AM'",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 58,
              "column": 10
            },
            "end": {
              "line": 62,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "pmString",
          "type": "string | null | undefined",
          "description": "locale representation of 'PM'",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 67,
              "column": 10
            },
            "end": {
              "line": 71,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "dateOrder",
          "type": "Object | null | undefined",
          "description": "order of date-parts",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 76,
              "column": 10
            },
            "end": {
              "line": 86,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Object"
            }
          },
          "defaultValue": "{\"parts\":[],\"timeFirst\":false,\"dateFirst\":true}",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "year",
          "type": "number | null | undefined",
          "description": "The year of the selected date",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 48,
              "column": 10
            },
            "end": {
              "line": 51,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "month",
          "type": "number | null | undefined",
          "description": "The month of the selected date (starts with 1)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 56,
              "column": 10
            },
            "end": {
              "line": 59,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "day",
          "type": "number | null | undefined",
          "description": "The day of the selected date",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 64,
              "column": 10
            },
            "end": {
              "line": 67,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour",
          "type": "number | null | undefined",
          "description": "The hour of the selected time",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 72,
              "column": 10
            },
            "end": {
              "line": 75,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour12",
          "type": "number",
          "description": "hour in 12-hour-format",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 81,
              "column": 10
            },
            "end": {
              "line": 85,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_hour12Changed\"",
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "isAm",
          "type": "boolean",
          "description": "true, when A.M. (when `hour` < 12)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 91,
              "column": 10
            },
            "end": {
              "line": 95,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_isAmChanged\"",
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "minute",
          "type": "number | null | undefined",
          "description": "The minute of the selected time",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 100,
              "column": 10
            },
            "end": {
              "line": 103,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "second",
          "type": "number | null | undefined",
          "description": "The second of the selected time",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 108,
              "column": 10
            },
            "end": {
              "line": 111,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "millisecond",
          "type": "number | null | undefined",
          "description": "The millisecond of the selected time",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 116,
              "column": 10
            },
            "end": {
              "line": 119,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "datetime",
          "type": "string | null | undefined",
          "description": "the selected date and time (format: iso8601)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 124,
              "column": 10
            },
            "end": {
              "line": 127,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "date",
          "type": "string | null | undefined",
          "description": "the selected date (format: iso8601)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 132,
              "column": 10
            },
            "end": {
              "line": 135,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "time",
          "type": "string | null | undefined",
          "description": "the selected time (format: iso8601)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 140,
              "column": 10
            },
            "end": {
              "line": 143,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "valueAsDate",
          "type": "Date | null | undefined",
          "description": "The date-object of the selected date",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 148,
              "column": 10
            },
            "end": {
              "line": 152,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_valueAsDateChanged\"",
              "attributeType": "Date"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "valueAsNumber",
          "type": "number | null | undefined",
          "description": "The value of the selected date",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 157,
              "column": 10
            },
            "end": {
              "line": 161,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_valueAsNumberChanged\"",
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_defaultValue",
          "type": "number | null | undefined",
          "description": "value of the default date",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 173,
              "column": 10
            },
            "end": {
              "line": 176,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "min",
          "type": "Object | null | undefined",
          "description": "The minimal date, could be a number, a date-object or an iso-string in time, date or datetime-notation",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 181,
              "column": 10
            },
            "end": {
              "line": 185,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_minChanged\"",
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_minValue",
          "type": "number | null | undefined",
          "description": "value if the minimum date",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 190,
              "column": 10
            },
            "end": {
              "line": 192,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "max",
          "type": "Object | null | undefined",
          "description": "The maximal date, could be a number, a date-object or an iso-string in time, date or datetime-notation",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 197,
              "column": 10
            },
            "end": {
              "line": 201,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_maxChanged\"",
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_maxValue",
          "type": "number | null | undefined",
          "description": "value if the maximum date",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 206,
              "column": 10
            },
            "end": {
              "line": 208,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour12Format",
          "type": "boolean",
          "description": "when true, 12-hour time format, else 24-hour",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 214,
              "column": 10
            },
            "end": {
              "line": 218,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "clamp",
          "type": "string | null | undefined",
          "description": "Clamp datetime to a property\npossible values:'month', 'day', 'hour', 'minute', 'second', 'millisecond'",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 224,
              "column": 10
            },
            "end": {
              "line": 228,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_clampChanged\"",
              "attributeType": "String"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "timezone",
          "type": "string | null | undefined",
          "description": "The timezone offset in '±hh:mm' format",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 233,
              "column": 10
            },
            "end": {
              "line": 237,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_timezoneChanged\"",
              "attributeType": "String"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "offsetMinutes",
          "type": "number | null | undefined",
          "description": "The offset minutes of the set timezone",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 242,
              "column": 10
            },
            "end": {
              "line": 246,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_offsetMinutesChanged\"",
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_timeZoneHours",
          "type": "number | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 248,
              "column": 10
            },
            "end": {
              "line": 250,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_timeZoneMinutes",
          "type": "number | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 252,
              "column": 10
            },
            "end": {
              "line": 254,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_recentLocalTimezoneOffset",
          "type": "number | null | undefined",
          "description": "The offset minute of the current datetime",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 259,
              "column": 10
            },
            "end": {
              "line": 261,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_timeOnly",
          "type": "boolean | null | undefined",
          "description": "if true perspective starts at 0 (1970-01-01)",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 169,
              "column": 10
            },
            "end": {
              "line": 172,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "true"
        },
        {
          "name": "_maxDayOfMonth",
          "type": "number",
          "description": "exclusive max day of month",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 275,
              "column": 10
            },
            "end": {
              "line": 278,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_dateLocked",
          "type": "boolean | null | undefined",
          "description": "lock to date and ignore time",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 283,
              "column": 10
            },
            "end": {
              "line": 286,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "step",
          "type": "number | null | undefined",
          "description": "If set the step defines the step a date should be incremented (in seconds). The input for the most inferior standing that would create an integer step is used to increment the value.\nFor example, if the **step** is:\n + **0.05**: the millisecond-input will increment the value by 50 (50 milliseconds), the other inputs behaive as expected\n + **1.05**: the millisecond-input will increment the value by 1050 (1 second and 50 millisecond), the other inputs behaive as expected\n + **2**: the millisecond-input will be disabled, the second-input will increment the value by 2000 (2 seconds), the other inputs behaive as expected\n + **180**: the millisecond-input and the second-input will be disabled, the minute-input will increment the value by 180000 (3 minutes), the other inputs behaive as expected\nIf `step=\"0\"` all inputs will be disabled, else if the step is below _0.001_ the step will be set to **0.001**. The most supirior input that will become the given step is the day-input.",
          "privacy": "public",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 33,
              "column": 10
            },
            "end": {
              "line": 36,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeFormMixin"
        },
        {
          "name": "_partsDisabled",
          "type": "Object | null | undefined",
          "description": "date-parts that are disabled",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 41,
              "column": 10
            },
            "end": {
              "line": 47,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Object"
            }
          },
          "defaultValue": "{}",
          "inheritedFrom": "DatetimeFormMixin"
        },
        {
          "name": "_partsStep",
          "type": "Object | null | undefined",
          "description": "the computed steps for the date-parts",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 52,
              "column": 10
            },
            "end": {
              "line": 65,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "Object"
            }
          },
          "defaultValue": "{\"day\":1,\"hour\":1,\"minute\":1,\"second\":1,\"millisecond\":1}",
          "inheritedFrom": "DatetimeFormMixin"
        },
        {
          "name": "withTimezone",
          "type": "boolean | null | undefined",
          "description": "if true, timezone inputs are shown",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 161,
              "column": 10
            },
            "end": {
              "line": 164,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        }
      ],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 114,
              "column": 6
            },
            "end": {
              "line": 117,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 82,
              "column": 6
            },
            "end": {
              "line": 87,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "_addSwitchListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 89,
              "column": 6
            },
            "end": {
              "line": 104,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "_removeSwitchListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 106,
              "column": 6
            },
            "end": {
              "line": 116,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "_checkKeycodeSwitch",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 118,
              "column": 6
            },
            "end": {
              "line": 126,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "__getEventTarget",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 128,
              "column": 6
            },
            "end": {
              "line": 142,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            },
            {
              "name": "classSelector"
            }
          ],
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "__increm",
          "description": "increment property by being called by an Event on an `switch`-Node",
          "privacy": "private",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 149,
              "column": 6
            },
            "end": {
              "line": 176,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "Event",
              "description": "Event it was called on"
            },
            {
              "name": "once",
              "type": "Boolean",
              "description": "if true, it doesn't setup an intervall to continue incrementing (e.g. keyPressEvents are fired itself repeatedly while the key is pressed)"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "__incremProp",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 178,
              "column": 6
            },
            "end": {
              "line": 180,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "prop"
            },
            {
              "name": "step"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "_getDefaultForProp",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 182,
              "column": 6
            },
            "end": {
              "line": 184,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "prop"
            }
          ],
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "_stopActiveIncremJob",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 186,
              "column": 6
            },
            "end": {
              "line": 199,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "_dwellTimeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 201,
              "column": 6
            },
            "end": {
              "line": 207,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dwellTime"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "_dwellDelayChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 209,
              "column": 6
            },
            "end": {
              "line": 215,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dwellDelay"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "_attachDom",
          "description": "attach dom with `delegatesFocus: true` so that the element is also focussed while its's children are too, and to autofocus to first tabable",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 103,
              "column": 6
            },
            "end": {
              "line": 112,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom"
            }
          ],
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "validate",
          "description": "validates the input for iron-form",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 122,
              "column": 6
            },
            "end": {
              "line": 124,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_computeInvalid",
          "description": "defines whether the value is set",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 130,
              "column": 6
            },
            "end": {
              "line": 132,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "[Object]"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_validate",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 141,
              "column": 6
            },
            "end": {
              "line": 143,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "Object",
              "description": "value to validate"
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "true, if the value is valid"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_computeValueIsSet",
          "description": "defines whether the value is set",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 149,
              "column": 6
            },
            "end": {
              "line": 151,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "[Object]"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_isSet",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 90,
              "column": 6
            },
            "end": {
              "line": 92,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "inheritedFrom": "DatetimeFormMixin"
        },
        {
          "name": "_valueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 94,
              "column": 6
            },
            "end": {
              "line": 99,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeFormMixin"
        },
        {
          "name": "_defaultChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 83,
              "column": 6
            },
            "end": {
              "line": 88,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "def"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeFormMixin"
        },
        {
          "name": "_createReflectPropertyToValueObserver",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 180,
              "column": 6
            },
            "end": {
              "line": 190,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "prop"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_reflectPropertyToValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 192,
              "column": 6
            },
            "end": {
              "line": 194,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_reflectValueToProperty",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 196,
              "column": 6
            },
            "end": {
              "line": 198,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_localeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 96,
              "column": 6
            },
            "end": {
              "line": 283,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "locale"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "_shouldPropertyChange",
          "description": "overwritten of polymer to handle -0",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 34,
              "column": 6
            },
            "end": {
              "line": 40,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property"
            },
            {
              "name": "value"
            },
            {
              "name": "old"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "now",
          "description": "Sets value to the actual date",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 304,
              "column": 6
            },
            "end": {
              "line": 320,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "setDate",
          "description": "sets date to all necessary properties",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 326,
              "column": 6
            },
            "end": {
              "line": 390,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date",
              "description": "[the date to set]"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "resetDate",
          "description": "resets the date (if `default` is set, it will be used for the new value)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 396,
              "column": 6
            },
            "end": {
              "line": 433,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "Event",
              "description": "[a causing event will not propagated]"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_defaultValueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 435,
              "column": 6
            },
            "end": {
              "line": 442,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "def"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computeDefaultValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 444,
              "column": 6
            },
            "end": {
              "line": 446,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "def"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computeDatetime",
          "description": "modify date components of a date-object. it needs to be applied or called on a date object",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 460,
              "column": 6
            },
            "end": {
              "line": 537,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "year",
              "type": "number"
            },
            {
              "name": "month",
              "type": "number"
            },
            {
              "name": "day",
              "type": "number"
            },
            {
              "name": "hour",
              "type": "number"
            },
            {
              "name": "minute",
              "type": "number"
            },
            {
              "name": "second",
              "type": "number"
            },
            {
              "name": "millisecond",
              "type": "number"
            }
          ],
          "return": {
            "type": "object",
            "desc": "the changed object and the new offset-minutes"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_dateTimeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 539,
              "column": 6
            },
            "end": {
              "line": 566,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "date"
            },
            {
              "name": "time"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_datetimeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 568,
              "column": 6
            },
            "end": {
              "line": 611,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "datetime"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_valueAsNumberChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 613,
              "column": 6
            },
            "end": {
              "line": 620,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_valueAsDateChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 622,
              "column": 6
            },
            "end": {
              "line": 633,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_fromDatetime",
          "description": "compute a date object",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 640,
              "column": 6
            },
            "end": {
              "line": 667,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "datetime"
            }
          ],
          "return": {
            "type": "Date",
            "desc": "date"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_clampChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 669,
              "column": 6
            },
            "end": {
              "line": 677,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "clamp"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_minChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 679,
              "column": 6
            },
            "end": {
              "line": 696,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "min"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_maxChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 698,
              "column": 6
            },
            "end": {
              "line": 715,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "max"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_minMaxValueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 717,
              "column": 6
            },
            "end": {
              "line": 721,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_checkThreshold",
          "description": "test date object against thresholds",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 728,
              "column": 6
            },
            "end": {
              "line": 739,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date"
            }
          ],
          "return": {
            "type": "Date",
            "desc": "ether the threshold when the date is exceeding or the date object itself"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_toDate",
          "description": "get date string from a date object",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 746,
              "column": 6
            },
            "end": {
              "line": 752,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date",
              "description": "the Date to serialize"
            }
          ],
          "return": {
            "type": "String",
            "desc": "date string"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_toTime",
          "description": "get UTC time string from a date object",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 759,
              "column": 6
            },
            "end": {
              "line": 764,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date",
              "description": "the Date to serialize"
            }
          ],
          "return": {
            "type": "String",
            "desc": "date string"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_toUTCDate",
          "description": "get UTC date string from a date object",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 771,
              "column": 6
            },
            "end": {
              "line": 777,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date",
              "description": "the Date to serialize"
            }
          ],
          "return": {
            "type": "String",
            "desc": "date string"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_toUTCTime",
          "description": "get UTC time string from a date object",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 784,
              "column": 6
            },
            "end": {
              "line": 789,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date",
              "description": "the Date to serialize"
            }
          ],
          "return": {
            "type": "String",
            "desc": "time string"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "__toDate",
          "description": "get date string from date components",
          "privacy": "private",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 798,
              "column": 6
            },
            "end": {
              "line": 800,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "year",
              "type": "Number"
            },
            {
              "name": "month",
              "type": "Number"
            },
            {
              "name": "day",
              "type": "Number"
            }
          ],
          "return": {
            "type": "String",
            "desc": "date string"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "__toTime",
          "description": "get time string from date components",
          "privacy": "private",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 810,
              "column": 6
            },
            "end": {
              "line": 812,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hour",
              "type": "Number"
            },
            {
              "name": "minute",
              "type": "Number"
            },
            {
              "name": "second",
              "type": "Number"
            },
            {
              "name": "millisecond",
              "type": "Number"
            }
          ],
          "return": {
            "type": "String",
            "desc": "time string"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_clampUTC",
          "description": "clamp UTC values",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 820,
              "column": 6
            },
            "end": {
              "line": 837,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date",
              "description": "the Date to clamp"
            },
            {
              "name": "clamp",
              "type": "String",
              "description": "the date component to clamp"
            }
          ],
          "return": {
            "type": "Date",
            "desc": "the clamped date"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_pad",
          "description": "pad a string with 0",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 845,
              "column": 6
            },
            "end": {
              "line": 851,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "n",
              "type": "Number",
              "description": "number to pad"
            },
            {
              "name": "padLength",
              "type": "Number",
              "description": "total length of strings"
            }
          ],
          "return": {
            "type": "String",
            "desc": "padded string"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_hour12Changed",
          "description": "`hour12` is the hour in hour12-format, that starts is minimal 1 and maximal 12, midnight is at 12am and noon is 12pm",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 856,
              "column": 6
            },
            "end": {
              "line": 860,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hour12"
            },
            {
              "name": "old"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_isAmChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 862,
              "column": 6
            },
            "end": {
              "line": 866,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "isAm"
            },
            {
              "name": "old"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_ifClamped",
          "description": "clamp to date component",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 871,
              "column": 6
            },
            "end": {
              "line": 876,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "clamp"
            },
            {
              "name": "comp"
            },
            {
              "name": "hidden"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_checkDefaultTimezone",
          "description": "set the default timezone if needed",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 882,
              "column": 6
            },
            "end": {
              "line": 895,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computeTimezoneShift",
          "description": "correct a timezone shift when date changes from winter to summertime (locally)",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 901,
              "column": 6
            },
            "end": {
              "line": 910,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_timezoneChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 912,
              "column": 6
            },
            "end": {
              "line": 932,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "timezone"
            },
            {
              "name": "oldValue"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_offsetMinutesChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 934,
              "column": 6
            },
            "end": {
              "line": 942,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "offsetMinutes"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_timeZoneHoursMinutesChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 944,
              "column": 6
            },
            "end": {
              "line": 963,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hour"
            },
            {
              "name": "minute"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computeTimezone",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 965,
              "column": 6
            },
            "end": {
              "line": 987,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "offsetMinutes"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computeTimezoneOffset",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 989,
              "column": 6
            },
            "end": {
              "line": 1019,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "timezone"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computeMaxDayOfMonth",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 1021,
              "column": 6
            },
            "end": {
              "line": 1029,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "year"
            },
            {
              "name": "month"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computePartsStep",
          "description": "compute the steps for the related inputs. The day-input is the highest modified input allthough if the step is higher than a day in seconds it might also change month- or year-inputs.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 104,
              "column": 6
            },
            "end": {
              "line": 185,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "step"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeFormMixin"
        },
        {
          "name": "_computePartsDisabled",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 187,
              "column": 6
            },
            "end": {
              "line": 205,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "change"
            },
            {
              "name": "disabled"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeFormMixin"
        },
        {
          "name": "_computeMultipleClamp",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 183,
              "column": 6
            },
            "end": {
              "line": 185,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "clamp"
            },
            {
              "name": "prop1"
            },
            {
              "name": "prop2"
            }
          ]
        },
        {
          "name": "_switchAm",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 187,
              "column": 6
            },
            "end": {
              "line": 190,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 22,
          "column": 2
        },
        "end": {
          "line": 192,
          "column": 3
        }
      },
      "privacy": "public",
      "name": "TimeElementPattern",
      "attributes": [
        {
          "name": "dwell-time",
          "description": "dwell time of incrementing inputs by the buttons in milliseconds. It is minimal 15 milliseconds.",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 33,
              "column": 10
            },
            "end": {
              "line": 37,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "dwell-delay",
          "description": "delay when incrementing inputs by the buttons in milliseconds. It is minimal 15 milliseconds.",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 43,
              "column": 10
            },
            "end": {
              "line": 47,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "name",
          "description": "name of the input",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 16,
              "column": 10
            },
            "end": {
              "line": 18,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "title",
          "description": "description for the element and can be used as a hint for invalid values",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 23,
              "column": 10
            },
            "end": {
              "line": 26,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "disabled",
          "description": "disables the input",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 31,
              "column": 10
            },
            "end": {
              "line": 35,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "required",
          "description": "required attribute",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 40,
              "column": 10
            },
            "end": {
              "line": 44,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "property-for-value",
          "description": "defines the property that should be used for the value",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 69,
              "column": 10
            },
            "end": {
              "line": 72,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "DatetimeFormMixin"
        },
        {
          "name": "invalid",
          "description": "required attribute",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 57,
              "column": 10
            },
            "end": {
              "line": 63,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "default",
          "description": "The default value of the input, could be a number, a date-object or an iso-string in time, date or datetime-notation",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 166,
              "column": 10
            },
            "end": {
              "line": 168,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "value",
          "description": "value of the input",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 85,
              "column": 10
            },
            "end": {
              "line": 88,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "locale",
          "description": "The current locale",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 19,
              "column": 10
            },
            "end": {
              "line": 23,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "decimal-separator",
          "description": "locale separator for local decimal values",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 29,
              "column": 10
            },
            "end": {
              "line": 33,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "date-separator",
          "description": "Separator for local date values (date-string is still in ISO-Format)",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 39,
              "column": 10
            },
            "end": {
              "line": 43,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "time-separator",
          "description": "Separator for local time values (time-string is still in ISO-Format)",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 49,
              "column": 10
            },
            "end": {
              "line": 53,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "am-string",
          "description": "locale representation of 'AM'",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 58,
              "column": 10
            },
            "end": {
              "line": 62,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "pm-string",
          "description": "locale representation of 'PM'",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 67,
              "column": 10
            },
            "end": {
              "line": 71,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "date-order",
          "description": "order of date-parts",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 76,
              "column": 10
            },
            "end": {
              "line": 86,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "year",
          "description": "The year of the selected date",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 48,
              "column": 10
            },
            "end": {
              "line": 51,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "month",
          "description": "The month of the selected date (starts with 1)",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 56,
              "column": 10
            },
            "end": {
              "line": 59,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "day",
          "description": "The day of the selected date",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 64,
              "column": 10
            },
            "end": {
              "line": 67,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour",
          "description": "The hour of the selected time",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 72,
              "column": 10
            },
            "end": {
              "line": 75,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour12",
          "description": "hour in 12-hour-format",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 81,
              "column": 10
            },
            "end": {
              "line": 85,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "is-am",
          "description": "true, when A.M. (when `hour` < 12)",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 91,
              "column": 10
            },
            "end": {
              "line": 95,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "minute",
          "description": "The minute of the selected time",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 100,
              "column": 10
            },
            "end": {
              "line": 103,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "second",
          "description": "The second of the selected time",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 108,
              "column": 10
            },
            "end": {
              "line": 111,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "millisecond",
          "description": "The millisecond of the selected time",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 116,
              "column": 10
            },
            "end": {
              "line": 119,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "datetime",
          "description": "the selected date and time (format: iso8601)",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 124,
              "column": 10
            },
            "end": {
              "line": 127,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "date",
          "description": "the selected date (format: iso8601)",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 132,
              "column": 10
            },
            "end": {
              "line": 135,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "time",
          "description": "the selected time (format: iso8601)",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 140,
              "column": 10
            },
            "end": {
              "line": 143,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "value-as-date",
          "description": "The date-object of the selected date",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 148,
              "column": 10
            },
            "end": {
              "line": 152,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Date | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "value-as-number",
          "description": "The value of the selected date",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 157,
              "column": 10
            },
            "end": {
              "line": 161,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "min",
          "description": "The minimal date, could be a number, a date-object or an iso-string in time, date or datetime-notation",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 181,
              "column": 10
            },
            "end": {
              "line": 185,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "max",
          "description": "The maximal date, could be a number, a date-object or an iso-string in time, date or datetime-notation",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 197,
              "column": 10
            },
            "end": {
              "line": 201,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour12-format",
          "description": "when true, 12-hour time format, else 24-hour",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 214,
              "column": 10
            },
            "end": {
              "line": 218,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "clamp",
          "description": "Clamp datetime to a property\npossible values:'month', 'day', 'hour', 'minute', 'second', 'millisecond'",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 224,
              "column": 10
            },
            "end": {
              "line": 228,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "timezone",
          "description": "The timezone offset in '±hh:mm' format",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 233,
              "column": 10
            },
            "end": {
              "line": 237,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "offset-minutes",
          "description": "The offset minutes of the set timezone",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 242,
              "column": 10
            },
            "end": {
              "line": 246,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "step",
          "description": "If set the step defines the step a date should be incremented (in seconds). The input for the most inferior standing that would create an integer step is used to increment the value.\nFor example, if the **step** is:\n + **0.05**: the millisecond-input will increment the value by 50 (50 milliseconds), the other inputs behaive as expected\n + **1.05**: the millisecond-input will increment the value by 1050 (1 second and 50 millisecond), the other inputs behaive as expected\n + **2**: the millisecond-input will be disabled, the second-input will increment the value by 2000 (2 seconds), the other inputs behaive as expected\n + **180**: the millisecond-input and the second-input will be disabled, the minute-input will increment the value by 180000 (3 minutes), the other inputs behaive as expected\nIf `step=\"0\"` all inputs will be disabled, else if the step is below _0.001_ the step will be set to **0.001**. The most supirior input that will become the given step is the day-input.",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 33,
              "column": 10
            },
            "end": {
              "line": 36,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeFormMixin"
        },
        {
          "name": "with-timezone",
          "description": "if true, timezone inputs are shown",
          "sourceRange": {
            "start": {
              "line": 161,
              "column": 10
            },
            "end": {
              "line": 164,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "mixins": [
        "SwitchMixin",
        "DatetimeFormMixin"
      ]
    },
    {
      "description": "Mixin for datetime-picker",
      "summary": "",
      "path": "time-picker.html",
      "properties": [
        {
          "name": "name",
          "type": "string | null | undefined",
          "description": "name of the input",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 16,
              "column": 10
            },
            "end": {
              "line": 18,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "title",
          "type": "string | null | undefined",
          "description": "description for the element and can be used as a hint for invalid values",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 23,
              "column": 10
            },
            "end": {
              "line": 26,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "disabled",
          "type": "boolean | null | undefined",
          "description": "disables the input",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 31,
              "column": 10
            },
            "end": {
              "line": 35,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "required",
          "type": "boolean | null | undefined",
          "description": "required attribute",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 40,
              "column": 10
            },
            "end": {
              "line": 44,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "propertyForValue",
          "type": "string | null | undefined",
          "description": "defines the property that should be used for the value",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 49,
              "column": 10
            },
            "end": {
              "line": 52,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_createReflectPropertyToValueObserver\"",
              "attributeType": "String"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "invalid",
          "type": "boolean | null | undefined",
          "description": "required attribute",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 57,
              "column": 10
            },
            "end": {
              "line": 63,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_valueIsSet",
          "type": "boolean | null | undefined",
          "description": "is true when the value is not undefined",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 68,
              "column": 10
            },
            "end": {
              "line": 72,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "default",
          "type": "Object | null | undefined",
          "description": "default value of the value, when it does not validate",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 77,
              "column": 10
            },
            "end": {
              "line": 80,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_defaultChanged\"",
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "value",
          "type": "Object | null | undefined",
          "description": "value of the input",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 85,
              "column": 10
            },
            "end": {
              "line": 88,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "locale",
          "type": "string | null | undefined",
          "description": "The current locale",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 19,
              "column": 10
            },
            "end": {
              "line": 23,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "decimalSeparator",
          "type": "string",
          "description": "locale separator for local decimal values",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 29,
              "column": 10
            },
            "end": {
              "line": 33,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "dateSeparator",
          "type": "string",
          "description": "Separator for local date values (date-string is still in ISO-Format)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 39,
              "column": 10
            },
            "end": {
              "line": 43,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "timeSeparator",
          "type": "string",
          "description": "Separator for local time values (time-string is still in ISO-Format)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 49,
              "column": 10
            },
            "end": {
              "line": 53,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "amString",
          "type": "string | null | undefined",
          "description": "locale representation of 'AM'",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 58,
              "column": 10
            },
            "end": {
              "line": 62,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "pmString",
          "type": "string | null | undefined",
          "description": "locale representation of 'PM'",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 67,
              "column": 10
            },
            "end": {
              "line": 71,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "dateOrder",
          "type": "Object | null | undefined",
          "description": "order of date-parts",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 76,
              "column": 10
            },
            "end": {
              "line": 86,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Object"
            }
          },
          "defaultValue": "{\"parts\":[],\"timeFirst\":false,\"dateFirst\":true}",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "year",
          "type": "number | null | undefined",
          "description": "The year of the selected date",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 48,
              "column": 10
            },
            "end": {
              "line": 51,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "month",
          "type": "number | null | undefined",
          "description": "The month of the selected date (starts with 1)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 56,
              "column": 10
            },
            "end": {
              "line": 59,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "day",
          "type": "number | null | undefined",
          "description": "The day of the selected date",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 64,
              "column": 10
            },
            "end": {
              "line": 67,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour",
          "type": "number | null | undefined",
          "description": "The hour of the selected time",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 72,
              "column": 10
            },
            "end": {
              "line": 75,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour12",
          "type": "number",
          "description": "hour in 12-hour-format",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 81,
              "column": 10
            },
            "end": {
              "line": 85,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_hour12Changed\"",
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "isAm",
          "type": "boolean",
          "description": "true, when A.M. (when `hour` < 12)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 91,
              "column": 10
            },
            "end": {
              "line": 95,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_isAmChanged\"",
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "minute",
          "type": "number | null | undefined",
          "description": "The minute of the selected time",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 100,
              "column": 10
            },
            "end": {
              "line": 103,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "second",
          "type": "number | null | undefined",
          "description": "The second of the selected time",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 108,
              "column": 10
            },
            "end": {
              "line": 111,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "millisecond",
          "type": "number | null | undefined",
          "description": "The millisecond of the selected time",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 116,
              "column": 10
            },
            "end": {
              "line": 119,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "datetime",
          "type": "string | null | undefined",
          "description": "the selected date and time (format: iso8601)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 124,
              "column": 10
            },
            "end": {
              "line": 127,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "date",
          "type": "string | null | undefined",
          "description": "the selected date (format: iso8601)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 132,
              "column": 10
            },
            "end": {
              "line": 135,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "time",
          "type": "string | null | undefined",
          "description": "the selected time (format: iso8601)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 140,
              "column": 10
            },
            "end": {
              "line": 143,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "valueAsDate",
          "type": "Date | null | undefined",
          "description": "The date-object of the selected date",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 148,
              "column": 10
            },
            "end": {
              "line": 152,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_valueAsDateChanged\"",
              "attributeType": "Date"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "valueAsNumber",
          "type": "number | null | undefined",
          "description": "The value of the selected date",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 157,
              "column": 10
            },
            "end": {
              "line": 161,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_valueAsNumberChanged\"",
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_defaultValue",
          "type": "number | null | undefined",
          "description": "value of the default date",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 173,
              "column": 10
            },
            "end": {
              "line": 176,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "min",
          "type": "Object | null | undefined",
          "description": "The minimal date, could be a number, a date-object or an iso-string in time, date or datetime-notation",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 181,
              "column": 10
            },
            "end": {
              "line": 185,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_minChanged\"",
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_minValue",
          "type": "number | null | undefined",
          "description": "value if the minimum date",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 190,
              "column": 10
            },
            "end": {
              "line": 192,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "max",
          "type": "Object | null | undefined",
          "description": "The maximal date, could be a number, a date-object or an iso-string in time, date or datetime-notation",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 197,
              "column": 10
            },
            "end": {
              "line": 201,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_maxChanged\"",
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_maxValue",
          "type": "number | null | undefined",
          "description": "value if the maximum date",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 206,
              "column": 10
            },
            "end": {
              "line": 208,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour12Format",
          "type": "boolean",
          "description": "when true, 12-hour time format, else 24-hour",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 214,
              "column": 10
            },
            "end": {
              "line": 218,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "clamp",
          "type": "string | null | undefined",
          "description": "Clamp datetime to a property\npossible values:'month', 'day', 'hour', 'minute', 'second', 'millisecond'",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 224,
              "column": 10
            },
            "end": {
              "line": 228,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_clampChanged\"",
              "attributeType": "String"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "timezone",
          "type": "string | null | undefined",
          "description": "The timezone offset in '±hh:mm' format",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 233,
              "column": 10
            },
            "end": {
              "line": 237,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_timezoneChanged\"",
              "attributeType": "String"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "offsetMinutes",
          "type": "number | null | undefined",
          "description": "The offset minutes of the set timezone",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 242,
              "column": 10
            },
            "end": {
              "line": 246,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_offsetMinutesChanged\"",
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_timeZoneHours",
          "type": "number | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 248,
              "column": 10
            },
            "end": {
              "line": 250,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_timeZoneMinutes",
          "type": "number | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 252,
              "column": 10
            },
            "end": {
              "line": 254,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_recentLocalTimezoneOffset",
          "type": "number | null | undefined",
          "description": "The offset minute of the current datetime",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 259,
              "column": 10
            },
            "end": {
              "line": 261,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_timeOnly",
          "type": "boolean | null | undefined",
          "description": "if true perspective starts at 0 (1970-01-01)",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 266,
              "column": 10
            },
            "end": {
              "line": 269,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_maxDayOfMonth",
          "type": "number",
          "description": "exclusive max day of month",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 275,
              "column": 10
            },
            "end": {
              "line": 278,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_dateLocked",
          "type": "boolean | null | undefined",
          "description": "lock to date and ignore time",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 283,
              "column": 10
            },
            "end": {
              "line": 286,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "step",
          "type": "number | null | undefined",
          "description": "If set the step defines the step a date should be incremented (in seconds). The input for the most inferior standing that would create an integer step is used to increment the value.\nFor example, if the **step** is:\n + **0.05**: the millisecond-input will increment the value by 50 (50 milliseconds), the other inputs behaive as expected\n + **1.05**: the millisecond-input will increment the value by 1050 (1 second and 50 millisecond), the other inputs behaive as expected\n + **2**: the millisecond-input will be disabled, the second-input will increment the value by 2000 (2 seconds), the other inputs behaive as expected\n + **180**: the millisecond-input and the second-input will be disabled, the minute-input will increment the value by 180000 (3 minutes), the other inputs behaive as expected\nIf `step=\"0\"` all inputs will be disabled, else if the step is below _0.001_ the step will be set to **0.001**. The most supirior input that will become the given step is the day-input.",
          "privacy": "public",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 33,
              "column": 10
            },
            "end": {
              "line": 36,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeFormMixin"
        },
        {
          "name": "_partsDisabled",
          "type": "Object | null | undefined",
          "description": "date-parts that are disabled",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 41,
              "column": 10
            },
            "end": {
              "line": 47,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Object"
            }
          },
          "defaultValue": "{}",
          "inheritedFrom": "DatetimeFormMixin"
        },
        {
          "name": "_partsStep",
          "type": "Object | null | undefined",
          "description": "the computed steps for the date-parts",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 52,
              "column": 10
            },
            "end": {
              "line": 65,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "Object"
            }
          },
          "defaultValue": "{\"day\":1,\"hour\":1,\"minute\":1,\"second\":1,\"millisecond\":1}",
          "inheritedFrom": "DatetimeFormMixin"
        },
        {
          "name": "hideResetButton",
          "type": "boolean | null | undefined",
          "description": "if true, the reset button is hidden",
          "privacy": "public",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 298,
              "column": 10
            },
            "end": {
              "line": 301,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "DatetimeInputMixin"
        },
        {
          "name": "withTimezone",
          "type": "boolean | null | undefined",
          "description": "if true, timezone inputs are shown",
          "privacy": "public",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 306,
              "column": 10
            },
            "end": {
              "line": 309,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "DatetimeInputMixin"
        },
        {
          "name": "_resetButtonIsInvisible",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 311,
              "column": 10
            },
            "end": {
              "line": 314,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "DatetimeInputMixin"
        },
        {
          "name": "dwellTime",
          "type": "number",
          "description": "dwell time of incrementing inputs by the buttons in milliseconds. It is minimal 15 milliseconds.",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 33,
              "column": 10
            },
            "end": {
              "line": 37,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_dwellTimeChanged\"",
              "attributeType": "Number"
            }
          },
          "defaultValue": "50",
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "dwellDelay",
          "type": "number",
          "description": "delay when incrementing inputs by the buttons in milliseconds. It is minimal 15 milliseconds.",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 43,
              "column": 10
            },
            "end": {
              "line": 47,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_dwellTimeChanged\"",
              "attributeType": "Number"
            }
          },
          "defaultValue": "500",
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "_switchClassSelector",
          "type": "string | null | undefined",
          "description": "class property of switches",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 52,
              "column": 10
            },
            "end": {
              "line": 55,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"switch\"",
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "native",
          "type": "boolean | null | undefined",
          "description": "Set to `true` to use the native input, if it available",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 173,
              "column": 10
            },
            "end": {
              "line": 176,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "nativeOnMobile",
          "type": "boolean | null | undefined",
          "description": "Set to `true` to use the native input automatically on mobile devices, if it available",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 181,
              "column": 10
            },
            "end": {
              "line": 184,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_nativeOnMobileChanged\"",
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "mobileUserAgentTestString",
          "type": "string | null | undefined",
          "description": "When `nativeOnMobile` is set to `true` this string is used to test the userAgent for a mobile device",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 189,
              "column": 10
            },
            "end": {
              "line": 193,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_nativeOnMobileChanged\"",
              "attributeType": "String"
            }
          },
          "defaultValue": "\"mM]obi|[tT]ablet|[aA]ndroid\"",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "opened",
          "type": "boolean | null | undefined",
          "description": "if `true` the picker is opened",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 198,
              "column": 10
            },
            "end": {
              "line": 203,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "horizontalAlign",
          "type": "string | null | undefined",
          "description": "The orientation against which to align the element horizontally\nrelative to the related input element. Possible values are \"left\", \"right\", \"center\", \"auto\". (comparable to `iron-fit-behavior` and its `no-overlap`-attribute)",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 209,
              "column": 10
            },
            "end": {
              "line": 213,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"auto\"",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "verticalAlign",
          "type": "string | null | undefined",
          "description": "The orientation against which to align the element vertically\nrelative to the related input element. Possible values are \"top\", \"bottom\", \"middle\", \"auto\". (comparable to `iron-fit-behavior` and its `no-overlap`-attribute)",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 219,
              "column": 10
            },
            "end": {
              "line": 223,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"auto\"",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "autoConfirm",
          "type": "boolean | null | undefined",
          "description": "Set to `true` to make the input auto-confirming",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 228,
              "column": 10
            },
            "end": {
              "line": 231,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_autoConfirmChanged\"",
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "noCancelOnEscKey",
          "type": "boolean | null | undefined",
          "description": "Set to `true` to disable canceling the overlay with the ESC key.",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 236,
              "column": 10
            },
            "end": {
              "line": 239,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "noCancelOnOutsideClick",
          "type": "boolean | null | undefined",
          "description": "Set to `true` to disable canceling the dropdown by clicking outside the picker.",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 244,
              "column": 10
            },
            "end": {
              "line": 247,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "noTip",
          "type": "boolean | null | undefined",
          "description": "Set to `true` to disable the tip of the picker",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 252,
              "column": 10
            },
            "end": {
              "line": 255,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "confirmedValue",
          "type": "Object | null | undefined",
          "description": "The confirmed value. When `auto-confirm` is not set, the value will only change, when you confirm.",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 260,
              "column": 10
            },
            "end": {
              "line": 263,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "confirmedDatetime",
          "type": "string | null | undefined",
          "description": "The confirmed datetime. When `auto-confirm` is not set, the datetime will only change, when you confirm.",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 154,
              "column": 10
            },
            "end": {
              "line": 157,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "hideNowButton",
          "type": "boolean | null | undefined",
          "description": "Set to `true` to hide the `now`-button",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 162,
              "column": 10
            },
            "end": {
              "line": 164,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "DatetimePickerMixin"
        }
      ],
      "methods": [
        {
          "name": "_attachDom",
          "description": "attach dom with `delegatesFocus: true` so that the element is also focussed while its's children are too, and to autofocus to first tabable",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 103,
              "column": 6
            },
            "end": {
              "line": 112,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom"
            }
          ],
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 283,
              "column": 6
            },
            "end": {
              "line": 287,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "validate",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 384,
              "column": 6
            },
            "end": {
              "line": 391,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_computeInvalid",
          "description": "defines whether the value is set",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 130,
              "column": 6
            },
            "end": {
              "line": 132,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "[Object]"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_validate",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 141,
              "column": 6
            },
            "end": {
              "line": 143,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "Object",
              "description": "value to validate"
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "true, if the value is valid"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_computeValueIsSet",
          "description": "defines whether the value is set",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 149,
              "column": 6
            },
            "end": {
              "line": 151,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "[Object]"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_isSet",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 159,
              "column": 6
            },
            "end": {
              "line": 161,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "Object",
              "description": "value to test"
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "true, if the value is set"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_valueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 474,
              "column": 6
            },
            "end": {
              "line": 483,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_defaultChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 516,
              "column": 6
            },
            "end": {
              "line": 521,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "def"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_createReflectPropertyToValueObserver",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 180,
              "column": 6
            },
            "end": {
              "line": 190,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "prop"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_reflectPropertyToValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 192,
              "column": 6
            },
            "end": {
              "line": 194,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_reflectValueToProperty",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 196,
              "column": 6
            },
            "end": {
              "line": 198,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_localeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 96,
              "column": 6
            },
            "end": {
              "line": 283,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "locale"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "_shouldPropertyChange",
          "description": "overwritten of polymer to handle -0",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 34,
              "column": 6
            },
            "end": {
              "line": 40,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property"
            },
            {
              "name": "value"
            },
            {
              "name": "old"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "now",
          "description": "Sets value to the actual date",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 304,
              "column": 6
            },
            "end": {
              "line": 320,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "setDate",
          "description": "sets date to all necessary properties",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 326,
              "column": 6
            },
            "end": {
              "line": 390,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date",
              "description": "[the date to set]"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "resetDate",
          "description": "resets the date (if `default` is set, it will be used for the new value)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 396,
              "column": 6
            },
            "end": {
              "line": 433,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "Event",
              "description": "[a causing event will not propagated]"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_defaultValueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 435,
              "column": 6
            },
            "end": {
              "line": 442,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "def"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computeDefaultValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 444,
              "column": 6
            },
            "end": {
              "line": 446,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "def"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computeDatetime",
          "description": "modify date components of a date-object. it needs to be applied or called on a date object",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 460,
              "column": 6
            },
            "end": {
              "line": 537,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "year",
              "type": "number"
            },
            {
              "name": "month",
              "type": "number"
            },
            {
              "name": "day",
              "type": "number"
            },
            {
              "name": "hour",
              "type": "number"
            },
            {
              "name": "minute",
              "type": "number"
            },
            {
              "name": "second",
              "type": "number"
            },
            {
              "name": "millisecond",
              "type": "number"
            }
          ],
          "return": {
            "type": "object",
            "desc": "the changed object and the new offset-minutes"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_dateTimeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 539,
              "column": 6
            },
            "end": {
              "line": 566,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "date"
            },
            {
              "name": "time"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_datetimeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 568,
              "column": 6
            },
            "end": {
              "line": 611,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "datetime"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_valueAsNumberChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 613,
              "column": 6
            },
            "end": {
              "line": 620,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_valueAsDateChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 622,
              "column": 6
            },
            "end": {
              "line": 633,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_fromDatetime",
          "description": "compute a date object",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 640,
              "column": 6
            },
            "end": {
              "line": 667,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "datetime"
            }
          ],
          "return": {
            "type": "Date",
            "desc": "date"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_clampChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 669,
              "column": 6
            },
            "end": {
              "line": 677,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "clamp"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_minChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 679,
              "column": 6
            },
            "end": {
              "line": 696,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "min"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_maxChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 698,
              "column": 6
            },
            "end": {
              "line": 715,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "max"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_minMaxValueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 717,
              "column": 6
            },
            "end": {
              "line": 721,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_checkThreshold",
          "description": "test date object against thresholds",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 728,
              "column": 6
            },
            "end": {
              "line": 739,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date"
            }
          ],
          "return": {
            "type": "Date",
            "desc": "ether the threshold when the date is exceeding or the date object itself"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_toDate",
          "description": "get date string from a date object",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 746,
              "column": 6
            },
            "end": {
              "line": 752,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date",
              "description": "the Date to serialize"
            }
          ],
          "return": {
            "type": "String",
            "desc": "date string"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_toTime",
          "description": "get UTC time string from a date object",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 759,
              "column": 6
            },
            "end": {
              "line": 764,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date",
              "description": "the Date to serialize"
            }
          ],
          "return": {
            "type": "String",
            "desc": "date string"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_toUTCDate",
          "description": "get UTC date string from a date object",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 771,
              "column": 6
            },
            "end": {
              "line": 777,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date",
              "description": "the Date to serialize"
            }
          ],
          "return": {
            "type": "String",
            "desc": "date string"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_toUTCTime",
          "description": "get UTC time string from a date object",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 784,
              "column": 6
            },
            "end": {
              "line": 789,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date",
              "description": "the Date to serialize"
            }
          ],
          "return": {
            "type": "String",
            "desc": "time string"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "__toDate",
          "description": "get date string from date components",
          "privacy": "private",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 798,
              "column": 6
            },
            "end": {
              "line": 800,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "year",
              "type": "Number"
            },
            {
              "name": "month",
              "type": "Number"
            },
            {
              "name": "day",
              "type": "Number"
            }
          ],
          "return": {
            "type": "String",
            "desc": "date string"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "__toTime",
          "description": "get time string from date components",
          "privacy": "private",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 810,
              "column": 6
            },
            "end": {
              "line": 812,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hour",
              "type": "Number"
            },
            {
              "name": "minute",
              "type": "Number"
            },
            {
              "name": "second",
              "type": "Number"
            },
            {
              "name": "millisecond",
              "type": "Number"
            }
          ],
          "return": {
            "type": "String",
            "desc": "time string"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_clampUTC",
          "description": "clamp UTC values",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 820,
              "column": 6
            },
            "end": {
              "line": 837,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date",
              "description": "the Date to clamp"
            },
            {
              "name": "clamp",
              "type": "String",
              "description": "the date component to clamp"
            }
          ],
          "return": {
            "type": "Date",
            "desc": "the clamped date"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_pad",
          "description": "pad a string with 0",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 845,
              "column": 6
            },
            "end": {
              "line": 851,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "n",
              "type": "Number",
              "description": "number to pad"
            },
            {
              "name": "padLength",
              "type": "Number",
              "description": "total length of strings"
            }
          ],
          "return": {
            "type": "String",
            "desc": "padded string"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_hour12Changed",
          "description": "`hour12` is the hour in hour12-format, that starts is minimal 1 and maximal 12, midnight is at 12am and noon is 12pm",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 856,
              "column": 6
            },
            "end": {
              "line": 860,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hour12"
            },
            {
              "name": "old"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_isAmChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 862,
              "column": 6
            },
            "end": {
              "line": 866,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "isAm"
            },
            {
              "name": "old"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_ifClamped",
          "description": "clamp to date component",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 871,
              "column": 6
            },
            "end": {
              "line": 876,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "clamp"
            },
            {
              "name": "comp"
            },
            {
              "name": "hidden"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_checkDefaultTimezone",
          "description": "set the default timezone if needed",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 882,
              "column": 6
            },
            "end": {
              "line": 895,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computeTimezoneShift",
          "description": "correct a timezone shift when date changes from winter to summertime (locally)",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 901,
              "column": 6
            },
            "end": {
              "line": 910,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_timezoneChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 912,
              "column": 6
            },
            "end": {
              "line": 932,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "timezone"
            },
            {
              "name": "oldValue"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_offsetMinutesChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 934,
              "column": 6
            },
            "end": {
              "line": 942,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "offsetMinutes"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_timeZoneHoursMinutesChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 944,
              "column": 6
            },
            "end": {
              "line": 963,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hour"
            },
            {
              "name": "minute"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computeTimezone",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 965,
              "column": 6
            },
            "end": {
              "line": 987,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "offsetMinutes"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computeTimezoneOffset",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 989,
              "column": 6
            },
            "end": {
              "line": 1019,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "timezone"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computeMaxDayOfMonth",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 1021,
              "column": 6
            },
            "end": {
              "line": 1029,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "year"
            },
            {
              "name": "month"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computePartsStep",
          "description": "compute the steps for the related inputs. The day-input is the highest modified input allthough if the step is higher than a day in seconds it might also change month- or year-inputs.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 104,
              "column": 6
            },
            "end": {
              "line": 185,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "step"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeFormMixin"
        },
        {
          "name": "_computePartsDisabled",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 187,
              "column": 6
            },
            "end": {
              "line": 205,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "change"
            },
            {
              "name": "disabled"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeFormMixin"
        },
        {
          "name": "_computeOr",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 318,
              "column": 6
            },
            "end": {
              "line": 320,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "a"
            },
            {
              "name": "b"
            }
          ],
          "inheritedFrom": "DatetimeInputMixin"
        },
        {
          "name": "_computePartOrder",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 322,
              "column": 6
            },
            "end": {
              "line": 324,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "first"
            }
          ],
          "inheritedFrom": "DatetimeInputMixin"
        },
        {
          "name": "_computeResetButtonIsInvisible",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 326,
              "column": 6
            },
            "end": {
              "line": 328,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "valueIsSet"
            },
            {
              "name": "defaultValue"
            },
            {
              "name": "valueAsNumber"
            }
          ],
          "inheritedFrom": "DatetimeInputMixin"
        },
        {
          "name": "_switchAm",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "time-element.html",
            "start": {
              "line": 187,
              "column": 6
            },
            "end": {
              "line": 190,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "TimeElementPattern"
        },
        {
          "name": "_computeMultipleClamp",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "time-element.html",
            "start": {
              "line": 183,
              "column": 6
            },
            "end": {
              "line": 185,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "clamp"
            },
            {
              "name": "prop1"
            },
            {
              "name": "prop2"
            }
          ],
          "inheritedFrom": "TimeElementPattern"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 289,
              "column": 6
            },
            "end": {
              "line": 293,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_addSwitchListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 89,
              "column": 6
            },
            "end": {
              "line": 104,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "_removeSwitchListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 106,
              "column": 6
            },
            "end": {
              "line": 116,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "_checkKeycodeSwitch",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 118,
              "column": 6
            },
            "end": {
              "line": 126,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "__getEventTarget",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 128,
              "column": 6
            },
            "end": {
              "line": 142,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            },
            {
              "name": "classSelector"
            }
          ],
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "__increm",
          "description": "increment property by being called by an Event on an `switch`-Node",
          "privacy": "private",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 149,
              "column": 6
            },
            "end": {
              "line": 176,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "Event",
              "description": "Event it was called on"
            },
            {
              "name": "once",
              "type": "Boolean",
              "description": "if true, it doesn't setup an intervall to continue incrementing (e.g. keyPressEvents are fired itself repeatedly while the key is pressed)"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "__incremProp",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 178,
              "column": 6
            },
            "end": {
              "line": 180,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "prop"
            },
            {
              "name": "step"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "_getDefaultForProp",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 182,
              "column": 6
            },
            "end": {
              "line": 184,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "prop"
            }
          ],
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "_stopActiveIncremJob",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 186,
              "column": 6
            },
            "end": {
              "line": 199,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "_dwellTimeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 201,
              "column": 6
            },
            "end": {
              "line": 207,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dwellTime"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "_dwellDelayChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 209,
              "column": 6
            },
            "end": {
              "line": 215,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dwellDelay"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "_addEventListenerToNode",
          "description": "Add the event listener to the node if it is a gestures event.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../polymer/lib/mixins/gesture-event-listeners.html",
            "start": {
              "line": 55,
              "column": 6
            },
            "end": {
              "line": 59,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node",
              "type": "!Node",
              "description": "Node to add event listener to"
            },
            {
              "name": "eventName",
              "type": "string",
              "description": "Name of event"
            },
            {
              "name": "handler",
              "type": "function (!Event): void",
              "description": "Listener function to add"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.GestureEventListeners"
        },
        {
          "name": "_removeEventListenerFromNode",
          "description": "Remove the event listener to the node if it is a gestures event.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../polymer/lib/mixins/gesture-event-listeners.html",
            "start": {
              "line": 69,
              "column": 6
            },
            "end": {
              "line": 73,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node",
              "type": "!Node",
              "description": "Node to remove event listener from"
            },
            {
              "name": "eventName",
              "type": "string",
              "description": "Name of event"
            },
            {
              "name": "handler",
              "type": "function (!Event): void",
              "description": "Listener function to remove"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.GestureEventListeners"
        },
        {
          "name": "_addPickerTransitionEndListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 295,
              "column": 6
            },
            "end": {
              "line": 302,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_removePickerTransitionEndListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 304,
              "column": 6
            },
            "end": {
              "line": 306,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_onPickerTransitionEnd",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 308,
              "column": 6
            },
            "end": {
              "line": 313,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_addCancelOnClickListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 315,
              "column": 6
            },
            "end": {
              "line": 322,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_removeCancelOnClickListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 324,
              "column": 6
            },
            "end": {
              "line": 327,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_stopPropagation",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 329,
              "column": 6
            },
            "end": {
              "line": 332,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_addKeyListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 334,
              "column": 6
            },
            "end": {
              "line": 337,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_removeKeyListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 339,
              "column": 6
            },
            "end": {
              "line": 342,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_nativeOnMobileChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 344,
              "column": 6
            },
            "end": {
              "line": 357,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_checkKeycode",
          "description": "key press event handler",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 363,
              "column": 6
            },
            "end": {
              "line": 382,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "[type]",
              "description": "Event"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "open",
          "description": "open the picker",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 396,
              "column": 6
            },
            "end": {
              "line": 409,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "close",
          "description": "close the picker",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 415,
              "column": 6
            },
            "end": {
              "line": 423,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "[type]",
              "description": "Event"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "toggle",
          "description": "toggle the picker",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 429,
              "column": 6
            },
            "end": {
              "line": 437,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "[type]",
              "description": "Event"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "confirm",
          "description": "confirms the input",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 443,
              "column": 6
            },
            "end": {
              "line": 452,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "[type]",
              "description": "Event"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "cancel",
          "description": "cancels the input",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 458,
              "column": 6
            },
            "end": {
              "line": 472,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "[type]",
              "description": "Event"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_confirmedValueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 295,
              "column": 6
            },
            "end": {
              "line": 303,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "confirmedValue"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_reset",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 493,
              "column": 6
            },
            "end": {
              "line": 498,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_setConfirmedValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 305,
              "column": 6
            },
            "end": {
              "line": 312,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_resetValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 506,
              "column": 6
            },
            "end": {
              "line": 510,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_autoConfirmChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 512,
              "column": 6
            },
            "end": {
              "line": 514,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "autoConfirm"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_computeAnd",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 181,
              "column": 6
            },
            "end": {
              "line": 183,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "a"
            },
            {
              "name": "b"
            }
          ],
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_computeNativeStep",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 185,
              "column": 6
            },
            "end": {
              "line": 204,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "step"
            },
            {
              "name": "clamp"
            }
          ],
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_computeNativeValueAsNumber",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 206,
              "column": 6
            },
            "end": {
              "line": 227,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "native"
            },
            {
              "name": "valueAsNumber"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_reflectNativeValueAsNumber",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 229,
              "column": 6
            },
            "end": {
              "line": 253,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "native"
            },
            {
              "name": "nativeValueAsNumber"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_setDate",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 255,
              "column": 6
            },
            "end": {
              "line": 262,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_confirmedDatetimeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 264,
              "column": 6
            },
            "end": {
              "line": 276,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "confirmedDatetime"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_resetDate",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 314,
              "column": 6
            },
            "end": {
              "line": 317,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_resetConfirmedValues",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 319,
              "column": 6
            },
            "end": {
              "line": 327,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_resetValues",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 329,
              "column": 6
            },
            "end": {
              "line": 336,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_confirmedDateTimeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 39,
              "column": 6
            },
            "end": {
              "line": 54,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "confirmedDate"
            },
            {
              "name": "confirmedTime"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_setConfirmedValues",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 56,
              "column": 6
            },
            "end": {
              "line": 76,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 20,
          "column": 2
        },
        "end": {
          "line": 78,
          "column": 3
        }
      },
      "privacy": "public",
      "name": "TimePickerPattern",
      "attributes": [
        {
          "name": "name",
          "description": "name of the input",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 16,
              "column": 10
            },
            "end": {
              "line": 18,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "title",
          "description": "description for the element and can be used as a hint for invalid values",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 23,
              "column": 10
            },
            "end": {
              "line": 26,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "disabled",
          "description": "disables the input",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 31,
              "column": 10
            },
            "end": {
              "line": 35,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "required",
          "description": "required attribute",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 40,
              "column": 10
            },
            "end": {
              "line": 44,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "property-for-value",
          "description": "defines the property that should be used for the value",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 49,
              "column": 10
            },
            "end": {
              "line": 52,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "invalid",
          "description": "required attribute",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 57,
              "column": 10
            },
            "end": {
              "line": 63,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "default",
          "description": "default value of the value, when it does not validate",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 77,
              "column": 10
            },
            "end": {
              "line": 80,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "value",
          "description": "value of the input",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 85,
              "column": 10
            },
            "end": {
              "line": 88,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "locale",
          "description": "The current locale",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 19,
              "column": 10
            },
            "end": {
              "line": 23,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "decimal-separator",
          "description": "locale separator for local decimal values",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 29,
              "column": 10
            },
            "end": {
              "line": 33,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "date-separator",
          "description": "Separator for local date values (date-string is still in ISO-Format)",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 39,
              "column": 10
            },
            "end": {
              "line": 43,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "time-separator",
          "description": "Separator for local time values (time-string is still in ISO-Format)",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 49,
              "column": 10
            },
            "end": {
              "line": 53,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "am-string",
          "description": "locale representation of 'AM'",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 58,
              "column": 10
            },
            "end": {
              "line": 62,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "pm-string",
          "description": "locale representation of 'PM'",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 67,
              "column": 10
            },
            "end": {
              "line": 71,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "date-order",
          "description": "order of date-parts",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 76,
              "column": 10
            },
            "end": {
              "line": 86,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "year",
          "description": "The year of the selected date",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 48,
              "column": 10
            },
            "end": {
              "line": 51,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "month",
          "description": "The month of the selected date (starts with 1)",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 56,
              "column": 10
            },
            "end": {
              "line": 59,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "day",
          "description": "The day of the selected date",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 64,
              "column": 10
            },
            "end": {
              "line": 67,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour",
          "description": "The hour of the selected time",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 72,
              "column": 10
            },
            "end": {
              "line": 75,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour12",
          "description": "hour in 12-hour-format",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 81,
              "column": 10
            },
            "end": {
              "line": 85,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "is-am",
          "description": "true, when A.M. (when `hour` < 12)",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 91,
              "column": 10
            },
            "end": {
              "line": 95,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "minute",
          "description": "The minute of the selected time",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 100,
              "column": 10
            },
            "end": {
              "line": 103,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "second",
          "description": "The second of the selected time",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 108,
              "column": 10
            },
            "end": {
              "line": 111,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "millisecond",
          "description": "The millisecond of the selected time",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 116,
              "column": 10
            },
            "end": {
              "line": 119,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "datetime",
          "description": "the selected date and time (format: iso8601)",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 124,
              "column": 10
            },
            "end": {
              "line": 127,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "date",
          "description": "the selected date (format: iso8601)",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 132,
              "column": 10
            },
            "end": {
              "line": 135,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "time",
          "description": "the selected time (format: iso8601)",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 140,
              "column": 10
            },
            "end": {
              "line": 143,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "value-as-date",
          "description": "The date-object of the selected date",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 148,
              "column": 10
            },
            "end": {
              "line": 152,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Date | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "value-as-number",
          "description": "The value of the selected date",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 157,
              "column": 10
            },
            "end": {
              "line": 161,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "min",
          "description": "The minimal date, could be a number, a date-object or an iso-string in time, date or datetime-notation",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 181,
              "column": 10
            },
            "end": {
              "line": 185,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "max",
          "description": "The maximal date, could be a number, a date-object or an iso-string in time, date or datetime-notation",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 197,
              "column": 10
            },
            "end": {
              "line": 201,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour12-format",
          "description": "when true, 12-hour time format, else 24-hour",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 214,
              "column": 10
            },
            "end": {
              "line": 218,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "clamp",
          "description": "Clamp datetime to a property\npossible values:'month', 'day', 'hour', 'minute', 'second', 'millisecond'",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 224,
              "column": 10
            },
            "end": {
              "line": 228,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "timezone",
          "description": "The timezone offset in '±hh:mm' format",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 233,
              "column": 10
            },
            "end": {
              "line": 237,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "offset-minutes",
          "description": "The offset minutes of the set timezone",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 242,
              "column": 10
            },
            "end": {
              "line": 246,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "step",
          "description": "If set the step defines the step a date should be incremented (in seconds). The input for the most inferior standing that would create an integer step is used to increment the value.\nFor example, if the **step** is:\n + **0.05**: the millisecond-input will increment the value by 50 (50 milliseconds), the other inputs behaive as expected\n + **1.05**: the millisecond-input will increment the value by 1050 (1 second and 50 millisecond), the other inputs behaive as expected\n + **2**: the millisecond-input will be disabled, the second-input will increment the value by 2000 (2 seconds), the other inputs behaive as expected\n + **180**: the millisecond-input and the second-input will be disabled, the minute-input will increment the value by 180000 (3 minutes), the other inputs behaive as expected\nIf `step=\"0\"` all inputs will be disabled, else if the step is below _0.001_ the step will be set to **0.001**. The most supirior input that will become the given step is the day-input.",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 33,
              "column": 10
            },
            "end": {
              "line": 36,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeFormMixin"
        },
        {
          "name": "hide-reset-button",
          "description": "if true, the reset button is hidden",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 298,
              "column": 10
            },
            "end": {
              "line": 301,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "DatetimeInputMixin"
        },
        {
          "name": "with-timezone",
          "description": "if true, timezone inputs are shown",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 306,
              "column": 10
            },
            "end": {
              "line": 309,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "DatetimeInputMixin"
        },
        {
          "name": "dwell-time",
          "description": "dwell time of incrementing inputs by the buttons in milliseconds. It is minimal 15 milliseconds.",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 33,
              "column": 10
            },
            "end": {
              "line": 37,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "dwell-delay",
          "description": "delay when incrementing inputs by the buttons in milliseconds. It is minimal 15 milliseconds.",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 43,
              "column": 10
            },
            "end": {
              "line": 47,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "native",
          "description": "Set to `true` to use the native input, if it available",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 173,
              "column": 10
            },
            "end": {
              "line": 176,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "native-on-mobile",
          "description": "Set to `true` to use the native input automatically on mobile devices, if it available",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 181,
              "column": 10
            },
            "end": {
              "line": 184,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "mobile-user-agent-test-string",
          "description": "When `nativeOnMobile` is set to `true` this string is used to test the userAgent for a mobile device",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 189,
              "column": 10
            },
            "end": {
              "line": 193,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "opened",
          "description": "if `true` the picker is opened",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 198,
              "column": 10
            },
            "end": {
              "line": 203,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "horizontal-align",
          "description": "The orientation against which to align the element horizontally\nrelative to the related input element. Possible values are \"left\", \"right\", \"center\", \"auto\". (comparable to `iron-fit-behavior` and its `no-overlap`-attribute)",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 209,
              "column": 10
            },
            "end": {
              "line": 213,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "vertical-align",
          "description": "The orientation against which to align the element vertically\nrelative to the related input element. Possible values are \"top\", \"bottom\", \"middle\", \"auto\". (comparable to `iron-fit-behavior` and its `no-overlap`-attribute)",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 219,
              "column": 10
            },
            "end": {
              "line": 223,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "auto-confirm",
          "description": "Set to `true` to make the input auto-confirming",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 228,
              "column": 10
            },
            "end": {
              "line": 231,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "no-cancel-on-esc-key",
          "description": "Set to `true` to disable canceling the overlay with the ESC key.",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 236,
              "column": 10
            },
            "end": {
              "line": 239,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "no-cancel-on-outside-click",
          "description": "Set to `true` to disable canceling the dropdown by clicking outside the picker.",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 244,
              "column": 10
            },
            "end": {
              "line": 247,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "no-tip",
          "description": "Set to `true` to disable the tip of the picker",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 252,
              "column": 10
            },
            "end": {
              "line": 255,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "confirmed-value",
          "description": "The confirmed value. When `auto-confirm` is not set, the value will only change, when you confirm.",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 260,
              "column": 10
            },
            "end": {
              "line": 263,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "confirmed-datetime",
          "description": "The confirmed datetime. When `auto-confirm` is not set, the datetime will only change, when you confirm.",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 154,
              "column": 10
            },
            "end": {
              "line": 157,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "hide-now-button",
          "description": "Set to `true` to hide the `now`-button",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 162,
              "column": 10
            },
            "end": {
              "line": 164,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "DatetimePickerMixin"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "input-picker-closed",
          "description": "input-picker-closed\nFired after a picker has been closed.",
          "metadata": {},
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "type": "CustomEvent",
          "name": "input-picker-opened",
          "description": "input-picker-opened\nFired when a picker has been opened.",
          "metadata": {},
          "inheritedFrom": "InputPickerPattern"
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "mixins": [
        "TimeInputPattern",
        "TimeElementPattern",
        "DatetimePickerMixin"
      ]
    },
    {
      "description": "Mixin for datetime-picker",
      "summary": "",
      "path": "datetime-picker.html",
      "properties": [
        {
          "name": "name",
          "type": "string | null | undefined",
          "description": "name of the input",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 16,
              "column": 10
            },
            "end": {
              "line": 18,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "title",
          "type": "string | null | undefined",
          "description": "description for the element and can be used as a hint for invalid values",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 23,
              "column": 10
            },
            "end": {
              "line": 26,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "disabled",
          "type": "boolean | null | undefined",
          "description": "disables the input",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 31,
              "column": 10
            },
            "end": {
              "line": 35,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "required",
          "type": "boolean | null | undefined",
          "description": "required attribute",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 40,
              "column": 10
            },
            "end": {
              "line": 44,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "propertyForValue",
          "type": "string | null | undefined",
          "description": "defines the property that should be used for the value",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 49,
              "column": 10
            },
            "end": {
              "line": 52,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_createReflectPropertyToValueObserver\"",
              "attributeType": "String"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "invalid",
          "type": "boolean | null | undefined",
          "description": "required attribute",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 57,
              "column": 10
            },
            "end": {
              "line": 63,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_valueIsSet",
          "type": "boolean | null | undefined",
          "description": "is true when the value is not undefined",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 68,
              "column": 10
            },
            "end": {
              "line": 72,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "default",
          "type": "Object | null | undefined",
          "description": "default value of the value, when it does not validate",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 77,
              "column": 10
            },
            "end": {
              "line": 80,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_defaultChanged\"",
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "value",
          "type": "Object | null | undefined",
          "description": "value of the input",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 85,
              "column": 10
            },
            "end": {
              "line": 88,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "locale",
          "type": "string | null | undefined",
          "description": "The current locale",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 19,
              "column": 10
            },
            "end": {
              "line": 23,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "decimalSeparator",
          "type": "string",
          "description": "locale separator for local decimal values",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 29,
              "column": 10
            },
            "end": {
              "line": 33,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "dateSeparator",
          "type": "string",
          "description": "Separator for local date values (date-string is still in ISO-Format)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 39,
              "column": 10
            },
            "end": {
              "line": 43,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "timeSeparator",
          "type": "string",
          "description": "Separator for local time values (time-string is still in ISO-Format)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 49,
              "column": 10
            },
            "end": {
              "line": 53,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "amString",
          "type": "string | null | undefined",
          "description": "locale representation of 'AM'",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 58,
              "column": 10
            },
            "end": {
              "line": 62,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "pmString",
          "type": "string | null | undefined",
          "description": "locale representation of 'PM'",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 67,
              "column": 10
            },
            "end": {
              "line": 71,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "dateOrder",
          "type": "Object | null | undefined",
          "description": "order of date-parts",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 76,
              "column": 10
            },
            "end": {
              "line": 86,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Object"
            }
          },
          "defaultValue": "{\"parts\":[],\"timeFirst\":false,\"dateFirst\":true}",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "year",
          "type": "number | null | undefined",
          "description": "The year of the selected date",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 48,
              "column": 10
            },
            "end": {
              "line": 51,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "month",
          "type": "number | null | undefined",
          "description": "The month of the selected date (starts with 1)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 56,
              "column": 10
            },
            "end": {
              "line": 59,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "day",
          "type": "number | null | undefined",
          "description": "The day of the selected date",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 64,
              "column": 10
            },
            "end": {
              "line": 67,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour",
          "type": "number | null | undefined",
          "description": "The hour of the selected time",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 72,
              "column": 10
            },
            "end": {
              "line": 75,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour12",
          "type": "number",
          "description": "hour in 12-hour-format",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 81,
              "column": 10
            },
            "end": {
              "line": 85,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_hour12Changed\"",
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "isAm",
          "type": "boolean",
          "description": "true, when A.M. (when `hour` < 12)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 91,
              "column": 10
            },
            "end": {
              "line": 95,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_isAmChanged\"",
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "minute",
          "type": "number | null | undefined",
          "description": "The minute of the selected time",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 100,
              "column": 10
            },
            "end": {
              "line": 103,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "second",
          "type": "number | null | undefined",
          "description": "The second of the selected time",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 108,
              "column": 10
            },
            "end": {
              "line": 111,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "millisecond",
          "type": "number | null | undefined",
          "description": "The millisecond of the selected time",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 116,
              "column": 10
            },
            "end": {
              "line": 119,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "datetime",
          "type": "string | null | undefined",
          "description": "the selected date and time (format: iso8601)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 124,
              "column": 10
            },
            "end": {
              "line": 127,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "date",
          "type": "string | null | undefined",
          "description": "the selected date (format: iso8601)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 132,
              "column": 10
            },
            "end": {
              "line": 135,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "time",
          "type": "string | null | undefined",
          "description": "the selected time (format: iso8601)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 140,
              "column": 10
            },
            "end": {
              "line": 143,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "valueAsDate",
          "type": "Date | null | undefined",
          "description": "The date-object of the selected date",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 148,
              "column": 10
            },
            "end": {
              "line": 152,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_valueAsDateChanged\"",
              "attributeType": "Date"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "valueAsNumber",
          "type": "number | null | undefined",
          "description": "The value of the selected date",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 157,
              "column": 10
            },
            "end": {
              "line": 161,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_valueAsNumberChanged\"",
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_defaultValue",
          "type": "number | null | undefined",
          "description": "value of the default date",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 173,
              "column": 10
            },
            "end": {
              "line": 176,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "min",
          "type": "Object | null | undefined",
          "description": "The minimal date, could be a number, a date-object or an iso-string in time, date or datetime-notation",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 181,
              "column": 10
            },
            "end": {
              "line": 185,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_minChanged\"",
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_minValue",
          "type": "number | null | undefined",
          "description": "value if the minimum date",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 190,
              "column": 10
            },
            "end": {
              "line": 192,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "max",
          "type": "Object | null | undefined",
          "description": "The maximal date, could be a number, a date-object or an iso-string in time, date or datetime-notation",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 197,
              "column": 10
            },
            "end": {
              "line": 201,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_maxChanged\"",
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_maxValue",
          "type": "number | null | undefined",
          "description": "value if the maximum date",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 206,
              "column": 10
            },
            "end": {
              "line": 208,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour12Format",
          "type": "boolean",
          "description": "when true, 12-hour time format, else 24-hour",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 214,
              "column": 10
            },
            "end": {
              "line": 218,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "clamp",
          "type": "string | null | undefined",
          "description": "Clamp datetime to a property\npossible values: 'month', 'day', 'hour', 'minute', 'second', 'millisecond' or ''",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 44,
              "column": 10
            },
            "end": {
              "line": 48,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "defaultValue": "\"millisecond\""
        },
        {
          "name": "timezone",
          "type": "string | null | undefined",
          "description": "The timezone offset in '±hh:mm' format",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 233,
              "column": 10
            },
            "end": {
              "line": 237,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_timezoneChanged\"",
              "attributeType": "String"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "offsetMinutes",
          "type": "number | null | undefined",
          "description": "The offset minutes of the set timezone",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 242,
              "column": 10
            },
            "end": {
              "line": 246,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_offsetMinutesChanged\"",
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_timeZoneHours",
          "type": "number | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 248,
              "column": 10
            },
            "end": {
              "line": 250,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_timeZoneMinutes",
          "type": "number | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 252,
              "column": 10
            },
            "end": {
              "line": 254,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_recentLocalTimezoneOffset",
          "type": "number | null | undefined",
          "description": "The offset minute of the current datetime",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 259,
              "column": 10
            },
            "end": {
              "line": 261,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_timeOnly",
          "type": "boolean | null | undefined",
          "description": "if true perspective starts at 0 (1970-01-01)",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 266,
              "column": 10
            },
            "end": {
              "line": 269,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_maxDayOfMonth",
          "type": "number",
          "description": "exclusive max day of month",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 275,
              "column": 10
            },
            "end": {
              "line": 278,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_dateLocked",
          "type": "boolean | null | undefined",
          "description": "lock to date and ignore time",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 283,
              "column": 10
            },
            "end": {
              "line": 286,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "step",
          "type": "number | null | undefined",
          "description": "If set the step defines the step a date should be incremented (in seconds). The input for the most inferior standing that would create an integer step is used to increment the value.\nFor example, if the **step** is:\n + **0.05**: the millisecond-input will increment the value by 50 (50 milliseconds), the other inputs behaive as expected\n + **1.05**: the millisecond-input will increment the value by 1050 (1 second and 50 millisecond), the other inputs behaive as expected\n + **2**: the millisecond-input will be disabled, the second-input will increment the value by 2000 (2 seconds), the other inputs behaive as expected\n + **180**: the millisecond-input and the second-input will be disabled, the minute-input will increment the value by 180000 (3 minutes), the other inputs behaive as expected\nIf `step=\"0\"` all inputs will be disabled, else if the step is below _0.001_ the step will be set to **0.001**. The most supirior input that will become the given step is the day-input.",
          "privacy": "public",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 33,
              "column": 10
            },
            "end": {
              "line": 36,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeFormMixin"
        },
        {
          "name": "_partsDisabled",
          "type": "Object | null | undefined",
          "description": "date-parts that are disabled",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 41,
              "column": 10
            },
            "end": {
              "line": 47,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Object"
            }
          },
          "defaultValue": "{}",
          "inheritedFrom": "DatetimeFormMixin"
        },
        {
          "name": "_partsStep",
          "type": "Object | null | undefined",
          "description": "the computed steps for the date-parts",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 52,
              "column": 10
            },
            "end": {
              "line": 65,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "Object"
            }
          },
          "defaultValue": "{\"day\":1,\"hour\":1,\"minute\":1,\"second\":1,\"millisecond\":1}",
          "inheritedFrom": "DatetimeFormMixin"
        },
        {
          "name": "hideResetButton",
          "type": "boolean | null | undefined",
          "description": "if true, the reset button is hidden",
          "privacy": "public",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 298,
              "column": 10
            },
            "end": {
              "line": 301,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "DatetimeInputMixin"
        },
        {
          "name": "withTimezone",
          "type": "boolean | null | undefined",
          "description": "if true, timezone inputs are shown",
          "privacy": "public",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 306,
              "column": 10
            },
            "end": {
              "line": 309,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "DatetimeInputMixin"
        },
        {
          "name": "_resetButtonIsInvisible",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 311,
              "column": 10
            },
            "end": {
              "line": 314,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "DatetimeInputMixin"
        },
        {
          "name": "dwellTime",
          "type": "number",
          "description": "dwell time of incrementing inputs by the buttons in milliseconds. It is minimal 15 milliseconds.",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 33,
              "column": 10
            },
            "end": {
              "line": 37,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_dwellTimeChanged\"",
              "attributeType": "Number"
            }
          },
          "defaultValue": "50",
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "dwellDelay",
          "type": "number",
          "description": "delay when incrementing inputs by the buttons in milliseconds. It is minimal 15 milliseconds.",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 43,
              "column": 10
            },
            "end": {
              "line": 47,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_dwellTimeChanged\"",
              "attributeType": "Number"
            }
          },
          "defaultValue": "500",
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "_switchClassSelector",
          "type": "string | null | undefined",
          "description": "class property of switches",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 52,
              "column": 10
            },
            "end": {
              "line": 55,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"switch\"",
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "currentHoveredDayNode",
          "type": "Node | null | undefined",
          "description": "Current hovered day node\nto access: bind the attribute ('current-hovered-day-node') and get its dataset `year`, `month` or `day`-property",
          "privacy": "public",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 262,
              "column": 10
            },
            "end": {
              "line": 266,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "Node"
            }
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "currentActiveDayNode",
          "type": "Node | null | undefined",
          "description": "Node of the last clicked day-field (by clicking or keypress)\nto access: bind the attribute ('current-active-day-node') and get its dataset `year`, `month` or `day`-property",
          "privacy": "public",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 272,
              "column": 10
            },
            "end": {
              "line": 276,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "Node"
            }
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "currentSelectedDayNode",
          "type": "Node | null | undefined",
          "description": "Node of the last selected day\nto access: bind the attribute ('current-selected-day-node') and get its dataset `year`, `month` or `day`-property",
          "privacy": "public",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 282,
              "column": 10
            },
            "end": {
              "line": 286,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "Node"
            }
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "firstDayOfWeek",
          "type": "number | null | undefined",
          "description": "Defines the first day of the week to use. Defaults to `1` (`monday`)\ne.g. when `firstDayOfWeek` is `0` the first day of the week would be `sunday`",
          "privacy": "public",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 300,
              "column": 10
            },
            "end": {
              "line": 303,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "1",
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "native",
          "type": "boolean | null | undefined",
          "description": "Set to `true` to use the native input, if it available",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 173,
              "column": 10
            },
            "end": {
              "line": 176,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "nativeOnMobile",
          "type": "boolean | null | undefined",
          "description": "Set to `true` to use the native input automatically on mobile devices, if it available",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 181,
              "column": 10
            },
            "end": {
              "line": 184,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_nativeOnMobileChanged\"",
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "mobileUserAgentTestString",
          "type": "string | null | undefined",
          "description": "When `nativeOnMobile` is set to `true` this string is used to test the userAgent for a mobile device",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 189,
              "column": 10
            },
            "end": {
              "line": 193,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_nativeOnMobileChanged\"",
              "attributeType": "String"
            }
          },
          "defaultValue": "\"mM]obi|[tT]ablet|[aA]ndroid\"",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "opened",
          "type": "boolean | null | undefined",
          "description": "if `true` the picker is opened",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 198,
              "column": 10
            },
            "end": {
              "line": 203,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "horizontalAlign",
          "type": "string | null | undefined",
          "description": "The orientation against which to align the element horizontally\nrelative to the related input element. Possible values are \"left\", \"right\", \"center\", \"auto\". (comparable to `iron-fit-behavior` and its `no-overlap`-attribute)",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 209,
              "column": 10
            },
            "end": {
              "line": 213,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"auto\"",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "verticalAlign",
          "type": "string | null | undefined",
          "description": "The orientation against which to align the element vertically\nrelative to the related input element. Possible values are \"top\", \"bottom\", \"middle\", \"auto\". (comparable to `iron-fit-behavior` and its `no-overlap`-attribute)",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 219,
              "column": 10
            },
            "end": {
              "line": 223,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"auto\"",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "autoConfirm",
          "type": "boolean | null | undefined",
          "description": "Set to `true` to make the input auto-confirming",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 228,
              "column": 10
            },
            "end": {
              "line": 231,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_autoConfirmChanged\"",
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "noCancelOnEscKey",
          "type": "boolean | null | undefined",
          "description": "Set to `true` to disable canceling the overlay with the ESC key.",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 236,
              "column": 10
            },
            "end": {
              "line": 239,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "noCancelOnOutsideClick",
          "type": "boolean | null | undefined",
          "description": "Set to `true` to disable canceling the dropdown by clicking outside the picker.",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 244,
              "column": 10
            },
            "end": {
              "line": 247,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "noTip",
          "type": "boolean | null | undefined",
          "description": "Set to `true` to disable the tip of the picker",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 252,
              "column": 10
            },
            "end": {
              "line": 255,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "confirmedValue",
          "type": "Object | null | undefined",
          "description": "The confirmed value. When `auto-confirm` is not set, the value will only change, when you confirm.",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 260,
              "column": 10
            },
            "end": {
              "line": 263,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "confirmedDatetime",
          "type": "string | null | undefined",
          "description": "The confirmed datetime. When `auto-confirm` is not set, the datetime will only change, when you confirm.",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 154,
              "column": 10
            },
            "end": {
              "line": 157,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "hideNowButton",
          "type": "boolean | null | undefined",
          "description": "Set to `true` to hide the `now`-button",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 162,
              "column": 10
            },
            "end": {
              "line": 164,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "DatetimePickerMixin"
        }
      ],
      "methods": [
        {
          "name": "_attachDom",
          "description": "attach dom with `delegatesFocus: true` so that the element is also focussed while its's children are too, and to autofocus to first tabable",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 103,
              "column": 6
            },
            "end": {
              "line": 112,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom"
            }
          ],
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 283,
              "column": 6
            },
            "end": {
              "line": 287,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "validate",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 384,
              "column": 6
            },
            "end": {
              "line": 391,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_computeInvalid",
          "description": "defines whether the value is set",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 130,
              "column": 6
            },
            "end": {
              "line": 132,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "[Object]"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_validate",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 141,
              "column": 6
            },
            "end": {
              "line": 143,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "Object",
              "description": "value to validate"
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "true, if the value is valid"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_computeValueIsSet",
          "description": "defines whether the value is set",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 149,
              "column": 6
            },
            "end": {
              "line": 151,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "[Object]"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_isSet",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 159,
              "column": 6
            },
            "end": {
              "line": 161,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "Object",
              "description": "value to test"
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "true, if the value is set"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_valueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 474,
              "column": 6
            },
            "end": {
              "line": 483,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_defaultChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 516,
              "column": 6
            },
            "end": {
              "line": 521,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "def"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_createReflectPropertyToValueObserver",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 180,
              "column": 6
            },
            "end": {
              "line": 190,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "prop"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_reflectPropertyToValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 192,
              "column": 6
            },
            "end": {
              "line": 194,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_reflectValueToProperty",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 196,
              "column": 6
            },
            "end": {
              "line": 198,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_localeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 96,
              "column": 6
            },
            "end": {
              "line": 283,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "locale"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "_shouldPropertyChange",
          "description": "overwritten of polymer to handle -0",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 34,
              "column": 6
            },
            "end": {
              "line": 40,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property"
            },
            {
              "name": "value"
            },
            {
              "name": "old"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "now",
          "description": "Sets value to the actual date",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 304,
              "column": 6
            },
            "end": {
              "line": 320,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "setDate",
          "description": "sets date to all necessary properties",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 326,
              "column": 6
            },
            "end": {
              "line": 390,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date",
              "description": "[the date to set]"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "resetDate",
          "description": "resets the date (if `default` is set, it will be used for the new value)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 396,
              "column": 6
            },
            "end": {
              "line": 433,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "Event",
              "description": "[a causing event will not propagated]"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_defaultValueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 435,
              "column": 6
            },
            "end": {
              "line": 442,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "def"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computeDefaultValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 444,
              "column": 6
            },
            "end": {
              "line": 446,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "def"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computeDatetime",
          "description": "modify date components of a date-object. it needs to be applied or called on a date object",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 460,
              "column": 6
            },
            "end": {
              "line": 537,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "year",
              "type": "number"
            },
            {
              "name": "month",
              "type": "number"
            },
            {
              "name": "day",
              "type": "number"
            },
            {
              "name": "hour",
              "type": "number"
            },
            {
              "name": "minute",
              "type": "number"
            },
            {
              "name": "second",
              "type": "number"
            },
            {
              "name": "millisecond",
              "type": "number"
            }
          ],
          "return": {
            "type": "object",
            "desc": "the changed object and the new offset-minutes"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_dateTimeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 539,
              "column": 6
            },
            "end": {
              "line": 566,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "date"
            },
            {
              "name": "time"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_datetimeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 568,
              "column": 6
            },
            "end": {
              "line": 611,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "datetime"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_valueAsNumberChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 613,
              "column": 6
            },
            "end": {
              "line": 620,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_valueAsDateChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 622,
              "column": 6
            },
            "end": {
              "line": 633,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_fromDatetime",
          "description": "compute a date object",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 640,
              "column": 6
            },
            "end": {
              "line": 667,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "datetime"
            }
          ],
          "return": {
            "type": "Date",
            "desc": "date"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_clampChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 669,
              "column": 6
            },
            "end": {
              "line": 677,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "clamp"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_minChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 679,
              "column": 6
            },
            "end": {
              "line": 696,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "min"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_maxChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 698,
              "column": 6
            },
            "end": {
              "line": 715,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "max"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_minMaxValueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 717,
              "column": 6
            },
            "end": {
              "line": 721,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_checkThreshold",
          "description": "test date object against thresholds",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 728,
              "column": 6
            },
            "end": {
              "line": 739,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date"
            }
          ],
          "return": {
            "type": "Date",
            "desc": "ether the threshold when the date is exceeding or the date object itself"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_toDate",
          "description": "get date string from a date object",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 746,
              "column": 6
            },
            "end": {
              "line": 752,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date",
              "description": "the Date to serialize"
            }
          ],
          "return": {
            "type": "String",
            "desc": "date string"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_toTime",
          "description": "get UTC time string from a date object",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 759,
              "column": 6
            },
            "end": {
              "line": 764,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date",
              "description": "the Date to serialize"
            }
          ],
          "return": {
            "type": "String",
            "desc": "date string"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_toUTCDate",
          "description": "get UTC date string from a date object",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 771,
              "column": 6
            },
            "end": {
              "line": 777,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date",
              "description": "the Date to serialize"
            }
          ],
          "return": {
            "type": "String",
            "desc": "date string"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_toUTCTime",
          "description": "get UTC time string from a date object",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 784,
              "column": 6
            },
            "end": {
              "line": 789,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date",
              "description": "the Date to serialize"
            }
          ],
          "return": {
            "type": "String",
            "desc": "time string"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "__toDate",
          "description": "get date string from date components",
          "privacy": "private",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 798,
              "column": 6
            },
            "end": {
              "line": 800,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "year",
              "type": "Number"
            },
            {
              "name": "month",
              "type": "Number"
            },
            {
              "name": "day",
              "type": "Number"
            }
          ],
          "return": {
            "type": "String",
            "desc": "date string"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "__toTime",
          "description": "get time string from date components",
          "privacy": "private",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 810,
              "column": 6
            },
            "end": {
              "line": 812,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hour",
              "type": "Number"
            },
            {
              "name": "minute",
              "type": "Number"
            },
            {
              "name": "second",
              "type": "Number"
            },
            {
              "name": "millisecond",
              "type": "Number"
            }
          ],
          "return": {
            "type": "String",
            "desc": "time string"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_clampUTC",
          "description": "clamp UTC values",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 820,
              "column": 6
            },
            "end": {
              "line": 837,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date",
              "description": "the Date to clamp"
            },
            {
              "name": "clamp",
              "type": "String",
              "description": "the date component to clamp"
            }
          ],
          "return": {
            "type": "Date",
            "desc": "the clamped date"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_pad",
          "description": "pad a string with 0",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 845,
              "column": 6
            },
            "end": {
              "line": 851,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "n",
              "type": "Number",
              "description": "number to pad"
            },
            {
              "name": "padLength",
              "type": "Number",
              "description": "total length of strings"
            }
          ],
          "return": {
            "type": "String",
            "desc": "padded string"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_hour12Changed",
          "description": "`hour12` is the hour in hour12-format, that starts is minimal 1 and maximal 12, midnight is at 12am and noon is 12pm",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 856,
              "column": 6
            },
            "end": {
              "line": 860,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hour12"
            },
            {
              "name": "old"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_isAmChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 862,
              "column": 6
            },
            "end": {
              "line": 866,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "isAm"
            },
            {
              "name": "old"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_ifClamped",
          "description": "clamp to date component",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 871,
              "column": 6
            },
            "end": {
              "line": 876,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "clamp"
            },
            {
              "name": "comp"
            },
            {
              "name": "hidden"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_checkDefaultTimezone",
          "description": "set the default timezone if needed",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 882,
              "column": 6
            },
            "end": {
              "line": 895,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computeTimezoneShift",
          "description": "correct a timezone shift when date changes from winter to summertime (locally)",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 901,
              "column": 6
            },
            "end": {
              "line": 910,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_timezoneChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 912,
              "column": 6
            },
            "end": {
              "line": 932,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "timezone"
            },
            {
              "name": "oldValue"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_offsetMinutesChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 934,
              "column": 6
            },
            "end": {
              "line": 942,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "offsetMinutes"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_timeZoneHoursMinutesChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 944,
              "column": 6
            },
            "end": {
              "line": 963,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hour"
            },
            {
              "name": "minute"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computeTimezone",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 965,
              "column": 6
            },
            "end": {
              "line": 987,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "offsetMinutes"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computeTimezoneOffset",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 989,
              "column": 6
            },
            "end": {
              "line": 1019,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "timezone"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computeMaxDayOfMonth",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 1021,
              "column": 6
            },
            "end": {
              "line": 1029,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "year"
            },
            {
              "name": "month"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computePartsStep",
          "description": "compute the steps for the related inputs. The day-input is the highest modified input allthough if the step is higher than a day in seconds it might also change month- or year-inputs.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 104,
              "column": 6
            },
            "end": {
              "line": 185,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "step"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeFormMixin"
        },
        {
          "name": "_computePartsDisabled",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 187,
              "column": 6
            },
            "end": {
              "line": 205,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "change"
            },
            {
              "name": "disabled"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeFormMixin"
        },
        {
          "name": "_computeOr",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 318,
              "column": 6
            },
            "end": {
              "line": 320,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "a"
            },
            {
              "name": "b"
            }
          ],
          "inheritedFrom": "DatetimeInputMixin"
        },
        {
          "name": "_computePartOrder",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 322,
              "column": 6
            },
            "end": {
              "line": 324,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "first"
            }
          ],
          "inheritedFrom": "DatetimeInputMixin"
        },
        {
          "name": "_computeResetButtonIsInvisible",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 326,
              "column": 6
            },
            "end": {
              "line": 328,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "valueIsSet"
            },
            {
              "name": "defaultValue"
            },
            {
              "name": "valueAsNumber"
            }
          ],
          "inheritedFrom": "DatetimeInputMixin"
        },
        {
          "name": "_orderDateParts",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../datetime-input/date-input.html",
            "start": {
              "line": 62,
              "column": 6
            },
            "end": {
              "line": 117,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "order"
            },
            {
              "name": "clamp"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DateInputPattern"
        },
        {
          "name": "_getDefaultForProp",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 182,
              "column": 6
            },
            "end": {
              "line": 184,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "prop"
            }
          ],
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 289,
              "column": 6
            },
            "end": {
              "line": 293,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_addSwitchListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 89,
              "column": 6
            },
            "end": {
              "line": 104,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "_removeSwitchListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 106,
              "column": 6
            },
            "end": {
              "line": 116,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "_checkKeycodeSwitch",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 118,
              "column": 6
            },
            "end": {
              "line": 126,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "__getEventTarget",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 128,
              "column": 6
            },
            "end": {
              "line": 142,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            },
            {
              "name": "classSelector"
            }
          ],
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "__increm",
          "description": "increment property by being called by an Event on an `switch`-Node",
          "privacy": "private",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 149,
              "column": 6
            },
            "end": {
              "line": 176,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "Event",
              "description": "Event it was called on"
            },
            {
              "name": "once",
              "type": "Boolean",
              "description": "if true, it doesn't setup an intervall to continue incrementing (e.g. keyPressEvents are fired itself repeatedly while the key is pressed)"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "__incremProp",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 178,
              "column": 6
            },
            "end": {
              "line": 180,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "prop"
            },
            {
              "name": "step"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "_stopActiveIncremJob",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 186,
              "column": 6
            },
            "end": {
              "line": 199,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "_dwellTimeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 201,
              "column": 6
            },
            "end": {
              "line": 207,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dwellTime"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "_dwellDelayChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 209,
              "column": 6
            },
            "end": {
              "line": 215,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dwellDelay"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "_onMouseMoveDay",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 320,
              "column": 6
            },
            "end": {
              "line": 333,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_onClickDay",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 335,
              "column": 6
            },
            "end": {
              "line": 361,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "confirm",
          "description": "confirms the input",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 443,
              "column": 6
            },
            "end": {
              "line": 452,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "[type]",
              "description": "Event"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_computeIncremPropTop",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 374,
              "column": 6
            },
            "end": {
              "line": 379,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hideMonth"
            }
          ],
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_setWeekDayCaptions",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 381,
              "column": 6
            },
            "end": {
              "line": 396,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "locale"
            },
            {
              "name": "firstDayOfWeek"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_setMonthSelectorOptions",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 398,
              "column": 6
            },
            "end": {
              "line": 407,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "locale"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "renderCalendar",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 52,
              "column": 6
            },
            "end": {
              "line": 57,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "year"
            },
            {
              "name": "month"
            },
            {
              "name": "day"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_clampDay",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 541,
              "column": 6
            },
            "end": {
              "line": 547,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d"
            }
          ],
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_dayDiff",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 549,
              "column": 6
            },
            "end": {
              "line": 551,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "end"
            },
            {
              "name": "start"
            }
          ],
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_checkKeycodeForDates",
          "description": "key press event handler on days area",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 567,
              "column": 6
            },
            "end": {
              "line": 628,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "[type]",
              "description": "Event"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_addEventListenerToNode",
          "description": "Add the event listener to the node if it is a gestures event.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../polymer/lib/mixins/gesture-event-listeners.html",
            "start": {
              "line": 55,
              "column": 6
            },
            "end": {
              "line": 59,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node",
              "type": "!Node",
              "description": "Node to add event listener to"
            },
            {
              "name": "eventName",
              "type": "string",
              "description": "Name of event"
            },
            {
              "name": "handler",
              "type": "function (!Event): void",
              "description": "Listener function to add"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.GestureEventListeners"
        },
        {
          "name": "_removeEventListenerFromNode",
          "description": "Remove the event listener to the node if it is a gestures event.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../polymer/lib/mixins/gesture-event-listeners.html",
            "start": {
              "line": 69,
              "column": 6
            },
            "end": {
              "line": 73,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node",
              "type": "!Node",
              "description": "Node to remove event listener from"
            },
            {
              "name": "eventName",
              "type": "string",
              "description": "Name of event"
            },
            {
              "name": "handler",
              "type": "function (!Event): void",
              "description": "Listener function to remove"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.GestureEventListeners"
        },
        {
          "name": "_addPickerTransitionEndListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 295,
              "column": 6
            },
            "end": {
              "line": 302,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_removePickerTransitionEndListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 304,
              "column": 6
            },
            "end": {
              "line": 306,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_onPickerTransitionEnd",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 308,
              "column": 6
            },
            "end": {
              "line": 313,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_addCancelOnClickListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 315,
              "column": 6
            },
            "end": {
              "line": 322,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_removeCancelOnClickListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 324,
              "column": 6
            },
            "end": {
              "line": 327,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_stopPropagation",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 329,
              "column": 6
            },
            "end": {
              "line": 332,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_addKeyListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 334,
              "column": 6
            },
            "end": {
              "line": 337,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_removeKeyListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 339,
              "column": 6
            },
            "end": {
              "line": 342,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_nativeOnMobileChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 344,
              "column": 6
            },
            "end": {
              "line": 357,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_checkKeycode",
          "description": "key press event handler",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 363,
              "column": 6
            },
            "end": {
              "line": 382,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "[type]",
              "description": "Event"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "open",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 59,
              "column": 6
            },
            "end": {
              "line": 70,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "close",
          "description": "close the picker",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 415,
              "column": 6
            },
            "end": {
              "line": 423,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "[type]",
              "description": "Event"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "toggle",
          "description": "toggle the picker",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 429,
              "column": 6
            },
            "end": {
              "line": 437,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "[type]",
              "description": "Event"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "cancel",
          "description": "cancels the input",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 458,
              "column": 6
            },
            "end": {
              "line": 472,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "[type]",
              "description": "Event"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_confirmedValueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 295,
              "column": 6
            },
            "end": {
              "line": 303,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "confirmedValue"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_reset",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 493,
              "column": 6
            },
            "end": {
              "line": 498,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_setConfirmedValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 305,
              "column": 6
            },
            "end": {
              "line": 312,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_resetValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 506,
              "column": 6
            },
            "end": {
              "line": 510,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_autoConfirmChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 512,
              "column": 6
            },
            "end": {
              "line": 514,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "autoConfirm"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "_computeAnd",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 181,
              "column": 6
            },
            "end": {
              "line": 183,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "a"
            },
            {
              "name": "b"
            }
          ],
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_computeNativeStep",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 185,
              "column": 6
            },
            "end": {
              "line": 204,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "step"
            },
            {
              "name": "clamp"
            }
          ],
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_computeNativeValueAsNumber",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 206,
              "column": 6
            },
            "end": {
              "line": 227,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "native"
            },
            {
              "name": "valueAsNumber"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_reflectNativeValueAsNumber",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 229,
              "column": 6
            },
            "end": {
              "line": 253,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "native"
            },
            {
              "name": "nativeValueAsNumber"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_setDate",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 255,
              "column": 6
            },
            "end": {
              "line": 262,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_confirmedDatetimeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 264,
              "column": 6
            },
            "end": {
              "line": 276,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "confirmedDatetime"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_resetDate",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 314,
              "column": 6
            },
            "end": {
              "line": 317,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_resetConfirmedValues",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 319,
              "column": 6
            },
            "end": {
              "line": 327,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_resetValues",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 329,
              "column": 6
            },
            "end": {
              "line": 336,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_switchAm",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "time-element.html",
            "start": {
              "line": 187,
              "column": 6
            },
            "end": {
              "line": 190,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "TimeElementPattern"
        },
        {
          "name": "_computeMultipleClamp",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "time-element.html",
            "start": {
              "line": 183,
              "column": 6
            },
            "end": {
              "line": 185,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "clamp"
            },
            {
              "name": "prop1"
            },
            {
              "name": "prop2"
            }
          ],
          "inheritedFrom": "TimeElementPattern"
        },
        {
          "name": "_confirmedDateTimeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "time-picker.html",
            "start": {
              "line": 39,
              "column": 6
            },
            "end": {
              "line": 54,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "confirmedDate"
            },
            {
              "name": "confirmedTime"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "TimePickerPattern"
        },
        {
          "name": "_setConfirmedValues",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 72,
              "column": 6
            },
            "end": {
              "line": 83,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 18,
          "column": 2
        },
        "end": {
          "line": 85,
          "column": 3
        }
      },
      "privacy": "public",
      "name": "DatetimePickerPattern",
      "attributes": [
        {
          "name": "name",
          "description": "name of the input",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 16,
              "column": 10
            },
            "end": {
              "line": 18,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "title",
          "description": "description for the element and can be used as a hint for invalid values",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 23,
              "column": 10
            },
            "end": {
              "line": 26,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "disabled",
          "description": "disables the input",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 31,
              "column": 10
            },
            "end": {
              "line": 35,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "required",
          "description": "required attribute",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 40,
              "column": 10
            },
            "end": {
              "line": 44,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "property-for-value",
          "description": "defines the property that should be used for the value",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 49,
              "column": 10
            },
            "end": {
              "line": 52,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "invalid",
          "description": "required attribute",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 57,
              "column": 10
            },
            "end": {
              "line": 63,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "default",
          "description": "default value of the value, when it does not validate",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 77,
              "column": 10
            },
            "end": {
              "line": 80,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "value",
          "description": "value of the input",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 85,
              "column": 10
            },
            "end": {
              "line": 88,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "locale",
          "description": "The current locale",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 19,
              "column": 10
            },
            "end": {
              "line": 23,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "decimal-separator",
          "description": "locale separator for local decimal values",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 29,
              "column": 10
            },
            "end": {
              "line": 33,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "date-separator",
          "description": "Separator for local date values (date-string is still in ISO-Format)",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 39,
              "column": 10
            },
            "end": {
              "line": 43,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "time-separator",
          "description": "Separator for local time values (time-string is still in ISO-Format)",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 49,
              "column": 10
            },
            "end": {
              "line": 53,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "am-string",
          "description": "locale representation of 'AM'",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 58,
              "column": 10
            },
            "end": {
              "line": 62,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "pm-string",
          "description": "locale representation of 'PM'",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 67,
              "column": 10
            },
            "end": {
              "line": 71,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "date-order",
          "description": "order of date-parts",
          "sourceRange": {
            "file": "../property-mixins/intl-datetime-format-mixin.html",
            "start": {
              "line": 76,
              "column": 10
            },
            "end": {
              "line": 86,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "year",
          "description": "The year of the selected date",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 48,
              "column": 10
            },
            "end": {
              "line": 51,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "month",
          "description": "The month of the selected date (starts with 1)",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 56,
              "column": 10
            },
            "end": {
              "line": 59,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "day",
          "description": "The day of the selected date",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 64,
              "column": 10
            },
            "end": {
              "line": 67,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour",
          "description": "The hour of the selected time",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 72,
              "column": 10
            },
            "end": {
              "line": 75,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour12",
          "description": "hour in 12-hour-format",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 81,
              "column": 10
            },
            "end": {
              "line": 85,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "is-am",
          "description": "true, when A.M. (when `hour` < 12)",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 91,
              "column": 10
            },
            "end": {
              "line": 95,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "minute",
          "description": "The minute of the selected time",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 100,
              "column": 10
            },
            "end": {
              "line": 103,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "second",
          "description": "The second of the selected time",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 108,
              "column": 10
            },
            "end": {
              "line": 111,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "millisecond",
          "description": "The millisecond of the selected time",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 116,
              "column": 10
            },
            "end": {
              "line": 119,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "datetime",
          "description": "the selected date and time (format: iso8601)",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 124,
              "column": 10
            },
            "end": {
              "line": 127,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "date",
          "description": "the selected date (format: iso8601)",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 132,
              "column": 10
            },
            "end": {
              "line": 135,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "time",
          "description": "the selected time (format: iso8601)",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 140,
              "column": 10
            },
            "end": {
              "line": 143,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "value-as-date",
          "description": "The date-object of the selected date",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 148,
              "column": 10
            },
            "end": {
              "line": 152,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Date | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "value-as-number",
          "description": "The value of the selected date",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 157,
              "column": 10
            },
            "end": {
              "line": 161,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "min",
          "description": "The minimal date, could be a number, a date-object or an iso-string in time, date or datetime-notation",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 181,
              "column": 10
            },
            "end": {
              "line": 185,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "max",
          "description": "The maximal date, could be a number, a date-object or an iso-string in time, date or datetime-notation",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 197,
              "column": 10
            },
            "end": {
              "line": 201,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour12-format",
          "description": "when true, 12-hour time format, else 24-hour",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 214,
              "column": 10
            },
            "end": {
              "line": 218,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "clamp",
          "description": "Clamp datetime to a property\npossible values: 'month', 'day', 'hour', 'minute', 'second', 'millisecond' or ''",
          "sourceRange": {
            "start": {
              "line": 44,
              "column": 10
            },
            "end": {
              "line": 48,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "timezone",
          "description": "The timezone offset in '±hh:mm' format",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 233,
              "column": 10
            },
            "end": {
              "line": 237,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "offset-minutes",
          "description": "The offset minutes of the set timezone",
          "sourceRange": {
            "file": "../property-mixins/datetime-mixin.html",
            "start": {
              "line": 242,
              "column": 10
            },
            "end": {
              "line": 246,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "step",
          "description": "If set the step defines the step a date should be incremented (in seconds). The input for the most inferior standing that would create an integer step is used to increment the value.\nFor example, if the **step** is:\n + **0.05**: the millisecond-input will increment the value by 50 (50 milliseconds), the other inputs behaive as expected\n + **1.05**: the millisecond-input will increment the value by 1050 (1 second and 50 millisecond), the other inputs behaive as expected\n + **2**: the millisecond-input will be disabled, the second-input will increment the value by 2000 (2 seconds), the other inputs behaive as expected\n + **180**: the millisecond-input and the second-input will be disabled, the minute-input will increment the value by 180000 (3 minutes), the other inputs behaive as expected\nIf `step=\"0\"` all inputs will be disabled, else if the step is below _0.001_ the step will be set to **0.001**. The most supirior input that will become the given step is the day-input.",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 33,
              "column": 10
            },
            "end": {
              "line": 36,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeFormMixin"
        },
        {
          "name": "hide-reset-button",
          "description": "if true, the reset button is hidden",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 298,
              "column": 10
            },
            "end": {
              "line": 301,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "DatetimeInputMixin"
        },
        {
          "name": "with-timezone",
          "description": "if true, timezone inputs are shown",
          "sourceRange": {
            "file": "../datetime-input/datetime-input-mixin.html",
            "start": {
              "line": 306,
              "column": 10
            },
            "end": {
              "line": 309,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "DatetimeInputMixin"
        },
        {
          "name": "dwell-time",
          "description": "dwell time of incrementing inputs by the buttons in milliseconds. It is minimal 15 milliseconds.",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 33,
              "column": 10
            },
            "end": {
              "line": 37,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "dwell-delay",
          "description": "delay when incrementing inputs by the buttons in milliseconds. It is minimal 15 milliseconds.",
          "sourceRange": {
            "file": "../input-picker-pattern/switch-mixin.html",
            "start": {
              "line": 43,
              "column": 10
            },
            "end": {
              "line": 47,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "SwitchMixin"
        },
        {
          "name": "current-hovered-day-node",
          "description": "Current hovered day node\nto access: bind the attribute ('current-hovered-day-node') and get its dataset `year`, `month` or `day`-property",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 262,
              "column": 10
            },
            "end": {
              "line": 266,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Node | null | undefined",
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "current-active-day-node",
          "description": "Node of the last clicked day-field (by clicking or keypress)\nto access: bind the attribute ('current-active-day-node') and get its dataset `year`, `month` or `day`-property",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 272,
              "column": 10
            },
            "end": {
              "line": 276,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Node | null | undefined",
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "current-selected-day-node",
          "description": "Node of the last selected day\nto access: bind the attribute ('current-selected-day-node') and get its dataset `year`, `month` or `day`-property",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 282,
              "column": 10
            },
            "end": {
              "line": 286,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Node | null | undefined",
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "first-day-of-week",
          "description": "Defines the first day of the week to use. Defaults to `1` (`monday`)\ne.g. when `firstDayOfWeek` is `0` the first day of the week would be `sunday`",
          "sourceRange": {
            "file": "calendar-element.html",
            "start": {
              "line": 300,
              "column": 10
            },
            "end": {
              "line": 303,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "native",
          "description": "Set to `true` to use the native input, if it available",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 173,
              "column": 10
            },
            "end": {
              "line": 176,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "native-on-mobile",
          "description": "Set to `true` to use the native input automatically on mobile devices, if it available",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 181,
              "column": 10
            },
            "end": {
              "line": 184,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "mobile-user-agent-test-string",
          "description": "When `nativeOnMobile` is set to `true` this string is used to test the userAgent for a mobile device",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 189,
              "column": 10
            },
            "end": {
              "line": 193,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "opened",
          "description": "if `true` the picker is opened",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 198,
              "column": 10
            },
            "end": {
              "line": 203,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "horizontal-align",
          "description": "The orientation against which to align the element horizontally\nrelative to the related input element. Possible values are \"left\", \"right\", \"center\", \"auto\". (comparable to `iron-fit-behavior` and its `no-overlap`-attribute)",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 209,
              "column": 10
            },
            "end": {
              "line": 213,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "vertical-align",
          "description": "The orientation against which to align the element vertically\nrelative to the related input element. Possible values are \"top\", \"bottom\", \"middle\", \"auto\". (comparable to `iron-fit-behavior` and its `no-overlap`-attribute)",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 219,
              "column": 10
            },
            "end": {
              "line": 223,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "auto-confirm",
          "description": "Set to `true` to make the input auto-confirming",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 228,
              "column": 10
            },
            "end": {
              "line": 231,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "no-cancel-on-esc-key",
          "description": "Set to `true` to disable canceling the overlay with the ESC key.",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 236,
              "column": 10
            },
            "end": {
              "line": 239,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "no-cancel-on-outside-click",
          "description": "Set to `true` to disable canceling the dropdown by clicking outside the picker.",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 244,
              "column": 10
            },
            "end": {
              "line": 247,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "no-tip",
          "description": "Set to `true` to disable the tip of the picker",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 252,
              "column": 10
            },
            "end": {
              "line": 255,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "confirmed-value",
          "description": "The confirmed value. When `auto-confirm` is not set, the value will only change, when you confirm.",
          "sourceRange": {
            "file": "../input-picker-pattern/input-picker-pattern.html",
            "start": {
              "line": 260,
              "column": 10
            },
            "end": {
              "line": 263,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "name": "confirmed-datetime",
          "description": "The confirmed datetime. When `auto-confirm` is not set, the datetime will only change, when you confirm.",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 154,
              "column": 10
            },
            "end": {
              "line": 157,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "hide-now-button",
          "description": "Set to `true` to hide the `now`-button",
          "sourceRange": {
            "file": "datetime-picker-mixin.html",
            "start": {
              "line": 162,
              "column": 10
            },
            "end": {
              "line": 164,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "DatetimePickerMixin"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "input-picker-closed",
          "description": "input-picker-closed\nFired after a picker has been closed.",
          "metadata": {},
          "inheritedFrom": "InputPickerPattern"
        },
        {
          "type": "CustomEvent",
          "name": "input-picker-opened",
          "description": "input-picker-opened\nFired when a picker has been opened.",
          "metadata": {},
          "inheritedFrom": "InputPickerPattern"
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "mixins": [
        "DatePickerPattern",
        "TimePickerPattern"
      ]
    }
  ]
}
