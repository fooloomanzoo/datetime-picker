{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "`<calendar-element>` adds a calendar to your page using Polymer.\n\nIf you like to connect it to an input, try it like:\n\n  ```html\n    <input type=\"date\" value=\"{{date::input}}\">\n\n    <calendar-element date=\"{{date}}\"></calendar-element>\n  ```\n\nFor example if you clamp on `hour`, you can round `datetime` and `value` to `00:00:00`. If you set `clamp=\"day\"` you hide the day-selection.\n\nThe following custom properties and mixins are also available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--calendar-element`                   | Mixin applied to the calendar                  | {}\n`--calendar-cell`                      | Mixin applied to the date cells                | {}\n`--calendar-cell-hovered-background`   | background of the hovered date cells           | transparent\n`--calendar-cell-hovered-border-color` | border-color of the hovered date cells         | currentColor\n`--calendar-cell-size`                 | width of a date cell                           | 3em\n`--calendar-cell-border-radius`        | border-radius of a date cell                   | 0.3em\n`--calendar-cell-font-size`            | font-size of a date cell                       | 0.75em\n`--calendar-cell-notinmonth-opacity`   | text opacity of a date cell that are not in the current month | 0.6\n`--calendar-cell-weekend-opacity`      | text opacity of a date cell that are on weekend | 1\n\n Have a look at [input-picker-pattern#input-picker-shared-style](https://github.com/fooloomanzoo/input-picker-pattern#input-picker-shared-style) and [input-picker-pattern#input-shared-style](https://github.com/fooloomanzoo/input-picker-pattern#input-shared-style) to see how to style the element. `--inner-input-focus-background` and `--inner-input-focus-color` will style the selected date-cell and inputs.",
      "summary": "",
      "path": "calendar-element.js",
      "properties": [
        {
          "name": "firstDayOfWeek",
          "type": "number | null | undefined",
          "description": "Defines the first day of the week to use. Defaults to `1` (`monday`)\ne.g. when `firstDayOfWeek` is `0` the first day of the week would be `sunday`",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 254,
              "column": 8
            },
            "end": {
              "line": 257,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "1",
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "currentHoveredDayNode",
          "type": "Node | null | undefined",
          "description": "Current hovered day node\nto access: bind the attribute ('current-hovered-day-node') and get its dataset `year`, `month` or `day`-property",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 263,
              "column": 8
            },
            "end": {
              "line": 267,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "Node"
            }
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "currentActiveDayNode",
          "type": "Node | null | undefined",
          "description": "Node of the last clicked day-field (by clicking or keypress)\nto access: bind the attribute ('current-active-day-node') and get its dataset `year`, `month` or `day`-property",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 273,
              "column": 8
            },
            "end": {
              "line": 278,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_currentActiveDayNodeChanged\"",
              "readOnly": true,
              "attributeType": "Node"
            }
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "currentSelectedDayNode",
          "type": "Node | null | undefined",
          "description": "Node of the last selected day\nto access: bind the attribute ('current-selected-day-node') and get its dataset `year`, `month` or `day`-property",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 284,
              "column": 8
            },
            "end": {
              "line": 289,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_currentSelectedDayNodeChanged\"",
              "readOnly": true,
              "attributeType": "Node"
            }
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "clamp",
          "type": "string | null | undefined",
          "description": "Clamp datetime to a property\npossible values: 'month', 'day', 'hour'",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 295,
              "column": 8
            },
            "end": {
              "line": 299,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "defaultValue": "\"hour\"",
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_timeOnly",
          "type": "boolean | null | undefined",
          "description": "if true perspective starts at 0 (1970-01-01)",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 304,
              "column": 8
            },
            "end": {
              "line": 307,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "CalendarElementPattern"
        }
      ],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 319,
              "column": 4
            },
            "end": {
              "line": 322,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_computeOrderMonth",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 324,
              "column": 4
            },
            "end": {
              "line": 334,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dateOrder"
            },
            {
              "name": "forYear"
            }
          ],
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_onMouseMoveDay",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 336,
              "column": 4
            },
            "end": {
              "line": 349,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_onClickDay",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 351,
              "column": 4
            },
            "end": {
              "line": 371,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_currentActiveDayNodeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 373,
              "column": 4
            },
            "end": {
              "line": 382,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node"
            },
            {
              "name": "oldNode"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_currentSelectedDayNodeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 384,
              "column": 4
            },
            "end": {
              "line": 390,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node"
            },
            {
              "name": "oldNode"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_computeIncremPropTop",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 392,
              "column": 4
            },
            "end": {
              "line": 397,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hideMonth"
            }
          ],
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_setWeekDayCaptions",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 399,
              "column": 4
            },
            "end": {
              "line": 414,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "locale"
            },
            {
              "name": "firstDayOfWeek"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_setMonthSelectorOptions",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 416,
              "column": 4
            },
            "end": {
              "line": 425,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "locale"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "renderCalendar",
          "description": "renderCalendars the current daySelector (manually).",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 434,
              "column": 4
            },
            "end": {
              "line": 550,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "year",
              "type": "number",
              "description": "The year of the date of the current daySelector."
            },
            {
              "name": "month",
              "type": "number",
              "description": "The month of the date of the current daySelector."
            },
            {
              "name": "day",
              "type": "number",
              "description": "The day of the date of the current daySelector."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_minChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 552,
              "column": 4
            },
            "end": {
              "line": 555,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "min"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_maxChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 557,
              "column": 4
            },
            "end": {
              "line": 560,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "max"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_checkKeycodeForDates",
          "description": "key press event handler on days area",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 566,
              "column": 4
            },
            "end": {
              "line": 652,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "[type]",
              "description": "Event"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_getDefaultForProp",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 654,
              "column": 4
            },
            "end": {
              "line": 664,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "prop"
            }
          ],
          "inheritedFrom": "CalendarElementPattern"
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/date-elements.html",
          "description": "date elements"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 708,
          "column": 0
        },
        "end": {
          "line": 722,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "CalendarElement",
      "attributes": [
        {
          "name": "first-day-of-week",
          "description": "Defines the first day of the week to use. Defaults to `1` (`monday`)\ne.g. when `firstDayOfWeek` is `0` the first day of the week would be `sunday`",
          "sourceRange": {
            "start": {
              "line": 254,
              "column": 8
            },
            "end": {
              "line": 257,
              "column": 9
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "current-hovered-day-node",
          "description": "Current hovered day node\nto access: bind the attribute ('current-hovered-day-node') and get its dataset `year`, `month` or `day`-property",
          "sourceRange": {
            "start": {
              "line": 263,
              "column": 8
            },
            "end": {
              "line": 267,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Node | null | undefined",
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "current-active-day-node",
          "description": "Node of the last clicked day-field (by clicking or keypress)\nto access: bind the attribute ('current-active-day-node') and get its dataset `year`, `month` or `day`-property",
          "sourceRange": {
            "start": {
              "line": 273,
              "column": 8
            },
            "end": {
              "line": 278,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Node | null | undefined",
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "current-selected-day-node",
          "description": "Node of the last selected day\nto access: bind the attribute ('current-selected-day-node') and get its dataset `year`, `month` or `day`-property",
          "sourceRange": {
            "start": {
              "line": 284,
              "column": 8
            },
            "end": {
              "line": 289,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Node | null | undefined",
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "clamp",
          "description": "Clamp datetime to a property\npossible values: 'month', 'day', 'hour'",
          "sourceRange": {
            "start": {
              "line": 295,
              "column": 8
            },
            "end": {
              "line": 299,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "CalendarElementPattern"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "calendar-element",
      "mixins": [
        "CalendarElementPattern",
        "SwitchMixin",
        "DatetimeFormMixin",
        "FormElementMixin",
        "DatetimeMixin"
      ]
    },
    {
      "description": "`<date-picker>` is a picker for date for **[Polymer](https://github.com/Polymer/@polymer)** that can use the **native** input, too. If the **native** picker is choosen and is not supported, this element uses the **polyfill** date-picker. The `<calendar-element>` will come in place if the native picker is not available or is not explicitly wanted. A range picker is provided by combining the `min`- and `max`-attributes.\n\n ```html\n   <date-picker value=\"{{value}}\"></date-picker>\n ```\n\n If you need an **overlay** then use `overlay-date-picker`, that creates the element in an `overlay-element`, that extends *IronOverlayBehavior* and will create some of its attribute-bindings.\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--calendar-element`                   | Mixin applied to the calendar                  | {}\n`--calendar-cell`                      | Mixin applied to the date cells                | {}\n`--calendar-cell-hovered-background`   | background of the hovered date cells           | transparent\n`--calendar-cell-hovered-border-color` | border-color of the hovered date cells         | currentColor\n`--calendar-cell-size`                 | width of a date cell                           | 3em\n`--calendar-cell-border-radius`        | border-radius of a date cell                   | 0.3em\n`--calendar-cell-font-size`            | font-size of a date cell                       | 0.75em\n`--calendar-cell-notinmonth-opacity`   | text opacity of a date cell that are not in the current month | 0.6\n`--calendar-cell-weekend-opacity`      | text opacity of a date cell that are on weekend | 1\n\n Have a look at [input-picker-pattern#input-picker-shared-style](https://github.com/fooloomanzoo/input-picker-pattern#input-picker-shared-style) and [input-picker-pattern#input-shared-style](https://github.com/fooloomanzoo/input-picker-pattern#input-shared-style) to see how to style the element. `--inner-input-focus-background` and `--inner-input-focus-color` will style the selected date-cell and inputs.",
      "summary": "",
      "path": "date-picker.js",
      "properties": [
        {
          "name": "hideNowButton",
          "type": "boolean | null | undefined",
          "description": "Set to `true` to hide the `now`-button",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-picker-mixin.js",
            "start": {
              "line": 150,
              "column": 8
            },
            "end": {
              "line": 152,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_nativeInput",
          "type": "string | null | undefined",
          "description": "Set to `true` to hide the `now`-button",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.js",
            "start": {
              "line": 156,
              "column": 8
            },
            "end": {
              "line": 158,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "firstDayOfWeek",
          "type": "number | null | undefined",
          "description": "Defines the first day of the week to use. Defaults to `1` (`monday`)\ne.g. when `firstDayOfWeek` is `0` the first day of the week would be `sunday`",
          "privacy": "public",
          "sourceRange": {
            "file": "calendar-element.js",
            "start": {
              "line": 254,
              "column": 8
            },
            "end": {
              "line": 257,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "1",
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "currentHoveredDayNode",
          "type": "Node | null | undefined",
          "description": "Current hovered day node\nto access: bind the attribute ('current-hovered-day-node') and get its dataset `year`, `month` or `day`-property",
          "privacy": "public",
          "sourceRange": {
            "file": "calendar-element.js",
            "start": {
              "line": 263,
              "column": 8
            },
            "end": {
              "line": 267,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "Node"
            }
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "currentActiveDayNode",
          "type": "Node | null | undefined",
          "description": "Node of the last clicked day-field (by clicking or keypress)\nto access: bind the attribute ('current-active-day-node') and get its dataset `year`, `month` or `day`-property",
          "privacy": "public",
          "sourceRange": {
            "file": "calendar-element.js",
            "start": {
              "line": 273,
              "column": 8
            },
            "end": {
              "line": 278,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_currentActiveDayNodeChanged\"",
              "readOnly": true,
              "attributeType": "Node"
            }
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "currentSelectedDayNode",
          "type": "Node | null | undefined",
          "description": "Node of the last selected day\nto access: bind the attribute ('current-selected-day-node') and get its dataset `year`, `month` or `day`-property",
          "privacy": "public",
          "sourceRange": {
            "file": "calendar-element.js",
            "start": {
              "line": 284,
              "column": 8
            },
            "end": {
              "line": 289,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_currentSelectedDayNodeChanged\"",
              "readOnly": true,
              "attributeType": "Node"
            }
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "clamp",
          "type": "string | null | undefined",
          "description": "Clamp datetime to a property\npossible values: 'month', 'day', 'hour'",
          "privacy": "public",
          "sourceRange": {
            "file": "calendar-element.js",
            "start": {
              "line": 295,
              "column": 8
            },
            "end": {
              "line": 299,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "defaultValue": "\"hour\"",
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_timeOnly",
          "type": "boolean | null | undefined",
          "description": "if true perspective starts at 0 (1970-01-01)",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.js",
            "start": {
              "line": 304,
              "column": 8
            },
            "end": {
              "line": 307,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_hasNative",
          "type": "?",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 142,
              "column": 2
            },
            "end": {
              "line": 144,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_computeNativeInput",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.js",
            "start": {
              "line": 169,
              "column": 4
            },
            "end": {
              "line": 177,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "date"
            },
            {
              "name": "time"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_reflectNativeInput",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.js",
            "start": {
              "line": 179,
              "column": 4
            },
            "end": {
              "line": 185,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "nativeInput"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "renderCalendar",
          "description": "renderCalendars the current daySelector (manually).",
          "privacy": "public",
          "sourceRange": {
            "file": "calendar-element.js",
            "start": {
              "line": 434,
              "column": 4
            },
            "end": {
              "line": 550,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "year",
              "type": "number",
              "description": "The year of the date of the current daySelector."
            },
            {
              "name": "month",
              "type": "number",
              "description": "The month of the date of the current daySelector."
            },
            {
              "name": "day",
              "type": "number",
              "description": "The day of the date of the current daySelector."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_openedChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 68,
              "column": 4
            },
            "end": {
              "line": 86,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "opened"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatePickerPattern"
        },
        {
          "name": "_confirmedValueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 88,
              "column": 4
            },
            "end": {
              "line": 91,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "confirmedValue"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatePickerPattern"
        },
        {
          "name": "_computeNativeStep",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.js",
            "start": {
              "line": 187,
              "column": 4
            },
            "end": {
              "line": 209,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "partsStep"
            },
            {
              "name": "clamp"
            }
          ],
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_computeNativeThreshold",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.js",
            "start": {
              "line": 211,
              "column": 4
            },
            "end": {
              "line": 228,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "setDate",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-picker-mixin.js",
            "start": {
              "line": 230,
              "column": 4
            },
            "end": {
              "line": 235,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_defaultValueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.js",
            "start": {
              "line": 237,
              "column": 4
            },
            "end": {
              "line": 242,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "def"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "resetDate",
          "description": "reset confirmedValue and value and the date properties",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-picker-mixin.js",
            "start": {
              "line": 247,
              "column": 4
            },
            "end": {
              "line": 250,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "calendar-element.js",
            "start": {
              "line": 319,
              "column": 4
            },
            "end": {
              "line": 322,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_computeOrderMonth",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.js",
            "start": {
              "line": 324,
              "column": 4
            },
            "end": {
              "line": 334,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dateOrder"
            },
            {
              "name": "forYear"
            }
          ],
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_onMouseMoveDay",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.js",
            "start": {
              "line": 336,
              "column": 4
            },
            "end": {
              "line": 349,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_onClickDay",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.js",
            "start": {
              "line": 351,
              "column": 4
            },
            "end": {
              "line": 371,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_currentActiveDayNodeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.js",
            "start": {
              "line": 373,
              "column": 4
            },
            "end": {
              "line": 382,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node"
            },
            {
              "name": "oldNode"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_currentSelectedDayNodeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.js",
            "start": {
              "line": 384,
              "column": 4
            },
            "end": {
              "line": 390,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node"
            },
            {
              "name": "oldNode"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_computeIncremPropTop",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.js",
            "start": {
              "line": 392,
              "column": 4
            },
            "end": {
              "line": 397,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hideMonth"
            }
          ],
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_setWeekDayCaptions",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.js",
            "start": {
              "line": 399,
              "column": 4
            },
            "end": {
              "line": 414,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "locale"
            },
            {
              "name": "firstDayOfWeek"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_setMonthSelectorOptions",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.js",
            "start": {
              "line": 416,
              "column": 4
            },
            "end": {
              "line": 425,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "locale"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_minChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.js",
            "start": {
              "line": 552,
              "column": 4
            },
            "end": {
              "line": 555,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "min"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_maxChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.js",
            "start": {
              "line": 557,
              "column": 4
            },
            "end": {
              "line": 560,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "max"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_checkKeycodeForDates",
          "description": "key press event handler on days area",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.js",
            "start": {
              "line": 566,
              "column": 4
            },
            "end": {
              "line": 652,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "[type]",
              "description": "Event"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_getDefaultForProp",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.js",
            "start": {
              "line": 654,
              "column": 4
            },
            "end": {
              "line": 664,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "prop"
            }
          ],
          "inheritedFrom": "CalendarElementPattern"
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        },
        {
          "url": "demo/date-elements.html",
          "description": "date elements"
        },
        {
          "url": "demo/form.html",
          "description": "in a form"
        },
        {
          "url": "demo/music-album.html",
          "description": "music album demo"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 136,
          "column": 0
        },
        "end": {
          "line": 149,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "DatePicker",
      "attributes": [
        {
          "name": "hide-now-button",
          "description": "Set to `true` to hide the `now`-button",
          "sourceRange": {
            "file": "datetime-picker-mixin.js",
            "start": {
              "line": 150,
              "column": 8
            },
            "end": {
              "line": 152,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "first-day-of-week",
          "description": "Defines the first day of the week to use. Defaults to `1` (`monday`)\ne.g. when `firstDayOfWeek` is `0` the first day of the week would be `sunday`",
          "sourceRange": {
            "file": "calendar-element.js",
            "start": {
              "line": 254,
              "column": 8
            },
            "end": {
              "line": 257,
              "column": 9
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "current-hovered-day-node",
          "description": "Current hovered day node\nto access: bind the attribute ('current-hovered-day-node') and get its dataset `year`, `month` or `day`-property",
          "sourceRange": {
            "file": "calendar-element.js",
            "start": {
              "line": 263,
              "column": 8
            },
            "end": {
              "line": 267,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Node | null | undefined",
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "current-active-day-node",
          "description": "Node of the last clicked day-field (by clicking or keypress)\nto access: bind the attribute ('current-active-day-node') and get its dataset `year`, `month` or `day`-property",
          "sourceRange": {
            "file": "calendar-element.js",
            "start": {
              "line": 273,
              "column": 8
            },
            "end": {
              "line": 278,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Node | null | undefined",
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "current-selected-day-node",
          "description": "Node of the last selected day\nto access: bind the attribute ('current-selected-day-node') and get its dataset `year`, `month` or `day`-property",
          "sourceRange": {
            "file": "calendar-element.js",
            "start": {
              "line": 284,
              "column": 8
            },
            "end": {
              "line": 289,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Node | null | undefined",
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "clamp",
          "description": "Clamp datetime to a property\npossible values: 'month', 'day', 'hour'",
          "sourceRange": {
            "file": "calendar-element.js",
            "start": {
              "line": 295,
              "column": 8
            },
            "end": {
              "line": 299,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "CalendarElementPattern"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "date-picker",
      "mixins": [
        "DatePickerPattern",
        "DatetimePickerMixin",
        "DatetimeInputMixin",
        "DateInputPattern",
        "CalendarElementPattern",
        "SwitchMixin",
        "InputPickerPattern",
        "DatetimeFormMixin",
        "DatetimeMixin"
      ]
    },
    {
      "description": "`<time-element>` adds a time-input to your page using Polymer.\n\nIf you like to connect it to an input, try it like:\n\n ```html\n    <input type=\"time\" value-as-number=\"{{time::input}}\" step=\"1\">\n\n    <time-element time=\"{{time}}\"></time-element>\n ```\n\nFor example if you clamp on `millisecond`, you can round to `0` millisecond and hide the input. If you set `clamp=\"second\"` the inputs for *second* and *millisecond* are hidden.\n\nThe following custom properties and mixins are also available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--time-element`                   | Mixin applied to the time-element              | {}\n\n Have a look at [input-picker-pattern#input-picker-shared-style](https://github.com/fooloomanzoo/input-picker-pattern#input-picker-shared-style) and [input-picker-pattern#input-shared-style](https://github.com/fooloomanzoo/input-picker-pattern#input-shared-style) to see how to style the element.",
      "summary": "",
      "path": "time-element.js",
      "properties": [
        {
          "name": "withTimezone",
          "type": "boolean | null | undefined",
          "description": "if true, timezone inputs are shown",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 138,
              "column": 8
            },
            "end": {
              "line": 141,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "TimeElementPattern"
        },
        {
          "name": "clamp",
          "type": "string | null | undefined",
          "description": "Clamp timetime to a property\npossible values: 'month', 'day', 'hour', 'minute', 'second', 'millisecond' or ''",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 147,
              "column": 8
            },
            "end": {
              "line": 151,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "defaultValue": "\"\"",
          "inheritedFrom": "TimeElementPattern"
        },
        {
          "name": "_timeOnly",
          "type": "boolean | null | undefined",
          "description": "if true perspective starts at 0 (1970-01-01)",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 156,
              "column": 8
            },
            "end": {
              "line": 159,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "true",
          "inheritedFrom": "TimeElementPattern"
        }
      ],
      "methods": [
        {
          "name": "_switchAm",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 170,
              "column": 4
            },
            "end": {
              "line": 173,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "TimeElementPattern"
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/time-elements.html",
          "description": "time elements"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 209,
          "column": 0
        },
        "end": {
          "line": 223,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "TimeElement",
      "attributes": [
        {
          "name": "with-timezone",
          "description": "if true, timezone inputs are shown",
          "sourceRange": {
            "start": {
              "line": 138,
              "column": 8
            },
            "end": {
              "line": 141,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "TimeElementPattern"
        },
        {
          "name": "clamp",
          "description": "Clamp timetime to a property\npossible values: 'month', 'day', 'hour', 'minute', 'second', 'millisecond' or ''",
          "sourceRange": {
            "start": {
              "line": 147,
              "column": 8
            },
            "end": {
              "line": 151,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "TimeElementPattern"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "time-element",
      "mixins": [
        "TimeElementPattern",
        "SwitchMixin",
        "DatetimeFormMixin",
        "FormElementMixin",
        "DatetimeMixin"
      ]
    },
    {
      "description": "`<time-picker>` is a picker for time for **[Polymer](https://github.com/Polymer/@polymer)** that can use the **native** input, too. If the **native** picker is choosen and is not supported, this element uses the **polyfill** time-picker. The `<time-element>` will come in place if the native picker is not available or is not explicitly wanted. A range picker is provided by combining the `min`- and `max`-attributes.\n\n ```html\n   <time-picker value=\"{{value}}\"></time-picker>\n ```\n\n If you need an **overlay** then use `overlay-time-picker`, that creates the element in an `overlay-element`, that extends *IronOverlayBehavior* and will create some of its attribute-bindings.\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--time-element`                   | Mixin applied to the time-element              | {}\n\n Have a look at [input-picker-pattern#input-picker-shared-style](https://github.com/fooloomanzoo/input-picker-pattern#input-picker-shared-style) and [input-picker-pattern#input-shared-style](https://github.com/fooloomanzoo/input-picker-pattern#input-shared-style) to see how to style the element.",
      "summary": "",
      "path": "time-picker.js",
      "properties": [
        {
          "name": "hideNowButton",
          "type": "boolean | null | undefined",
          "description": "Set to `true` to hide the `now`-button",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-picker-mixin.js",
            "start": {
              "line": 150,
              "column": 8
            },
            "end": {
              "line": 152,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_nativeInput",
          "type": "string | null | undefined",
          "description": "Set to `true` to hide the `now`-button",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.js",
            "start": {
              "line": 156,
              "column": 8
            },
            "end": {
              "line": 158,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "withTimezone",
          "type": "boolean | null | undefined",
          "description": "if true, timezone inputs are shown",
          "privacy": "public",
          "sourceRange": {
            "file": "time-element.js",
            "start": {
              "line": 138,
              "column": 8
            },
            "end": {
              "line": 141,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "TimeElementPattern"
        },
        {
          "name": "clamp",
          "type": "string | null | undefined",
          "description": "Clamp timetime to a property\npossible values: 'month', 'day', 'hour', 'minute', 'second', 'millisecond' or ''",
          "privacy": "public",
          "sourceRange": {
            "file": "time-element.js",
            "start": {
              "line": 147,
              "column": 8
            },
            "end": {
              "line": 151,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "defaultValue": "\"\"",
          "inheritedFrom": "TimeElementPattern"
        },
        {
          "name": "_timeOnly",
          "type": "boolean | null | undefined",
          "description": "if true perspective starts at 0 (1970-01-01)",
          "privacy": "protected",
          "sourceRange": {
            "file": "time-element.js",
            "start": {
              "line": 156,
              "column": 8
            },
            "end": {
              "line": 159,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "true",
          "inheritedFrom": "TimeElementPattern"
        },
        {
          "name": "_hasNative",
          "type": "?",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 101,
              "column": 2
            },
            "end": {
              "line": 103,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_computeNativeInput",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 39,
              "column": 4
            },
            "end": {
              "line": 47,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "date"
            },
            {
              "name": "time"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "TimePickerPattern"
        },
        {
          "name": "_reflectNativeInput",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 49,
              "column": 4
            },
            "end": {
              "line": 54,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "nativeInput"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "TimePickerPattern"
        },
        {
          "name": "_computeNativeStep",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.js",
            "start": {
              "line": 187,
              "column": 4
            },
            "end": {
              "line": 209,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "partsStep"
            },
            {
              "name": "clamp"
            }
          ],
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_computeNativeThreshold",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.js",
            "start": {
              "line": 211,
              "column": 4
            },
            "end": {
              "line": 228,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "setDate",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-picker-mixin.js",
            "start": {
              "line": 230,
              "column": 4
            },
            "end": {
              "line": 235,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_defaultValueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.js",
            "start": {
              "line": 237,
              "column": 4
            },
            "end": {
              "line": 242,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "def"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "resetDate",
          "description": "reset confirmedValue and value and the date properties",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-picker-mixin.js",
            "start": {
              "line": 247,
              "column": 4
            },
            "end": {
              "line": 250,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_switchAm",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "time-element.js",
            "start": {
              "line": 170,
              "column": 4
            },
            "end": {
              "line": 173,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "TimeElementPattern"
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        },
        {
          "url": "demo/time-elements.html",
          "description": "time elements"
        },
        {
          "url": "demo/form.html",
          "description": "in a form"
        },
        {
          "url": "demo/music-album.html",
          "description": "music album demo"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 91,
          "column": 0
        },
        "end": {
          "line": 104,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "TimePicker",
      "attributes": [
        {
          "name": "hide-now-button",
          "description": "Set to `true` to hide the `now`-button",
          "sourceRange": {
            "file": "datetime-picker-mixin.js",
            "start": {
              "line": 150,
              "column": 8
            },
            "end": {
              "line": 152,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "with-timezone",
          "description": "if true, timezone inputs are shown",
          "sourceRange": {
            "file": "time-element.js",
            "start": {
              "line": 138,
              "column": 8
            },
            "end": {
              "line": 141,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "TimeElementPattern"
        },
        {
          "name": "clamp",
          "description": "Clamp timetime to a property\npossible values: 'month', 'day', 'hour', 'minute', 'second', 'millisecond' or ''",
          "sourceRange": {
            "file": "time-element.js",
            "start": {
              "line": 147,
              "column": 8
            },
            "end": {
              "line": 151,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "TimeElementPattern"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "time-picker",
      "mixins": [
        "DatetimePickerMixin",
        "DatetimeInputMixin",
        "TimePickerPattern",
        "TimeInputPattern",
        "TimeElementPattern",
        "SwitchMixin",
        "InputPickerPattern",
        "DatetimeFormMixin",
        "DatetimeMixin"
      ]
    },
    {
      "description": "`<datetime-picker>` is a picker for date and time for **[Polymer](https://github.com/Polymer/@polymer)** that can use the **native** input, too. If the **native** picker is choosen and is not supported, this element uses the **polyfill** datetime-picker. The `<calendar-element>` and the `<time-element>` will come in place if the native picker is not available or is not explicitly wanted. A range picker is provided by combining the `min`- and `max`-attributes.\n\n ```html\n   <datetime-picker value=\"{{value}}\"></datetime-picker>\n ```\n\n A use case could be for example, if you want on mobile devices use the `native picker` and on desktop devices this polyfill.\n\n ```html\n   <datetime-picker native-on-mobile></datetime-picker>\n ```\n\n If you need an **overlay** then use `overlay-datetime-picker`, that creates the element in an `overlay-element`, that extends *IronOverlayBehavior* and will create some of its attribute-bindings.\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--calendar-element`                   | Mixin applied to the calendar                  | {}\n`--calendar-cell`                      | Mixin applied to the date cells                | {}\n`--calendar-cell-hovered-background`   | background of the hovered date cells           | transparent\n`--calendar-cell-hovered-border-color` | border-color of the hovered date cells         | currentColor\n`--calendar-cell-size`                 | width of a date cell                           | 3em\n`--calendar-cell-border-radius`        | border-radius of a date cell                   | 0.3em\n`--calendar-cell-font-size`            | font-size of a date cell                       | 0.75em\n`--calendar-cell-notinmonth-opacity`   | text opacity of a date cell that are not in the current month | 0.6\n`--calendar-cell-weekend-opacity`      | text opacity of a date cell that are on weekend | 1\n`--time-element`                       | Mixin applied to the time-element               | {}\n\n Have a look at [input-picker-pattern#input-picker-shared-style](https://github.com/fooloomanzoo/input-picker-pattern#input-picker-shared-style) and [input-picker-pattern#input-shared-style](https://github.com/fooloomanzoo/input-picker-pattern#input-shared-style) to see how to style the element. `--inner-input-focus-background` and `--inner-input-focus-color` will style the selected date-cell and inputs.",
      "summary": "",
      "path": "datetime-picker.js",
      "properties": [
        {
          "name": "clamp",
          "type": "string | null | undefined",
          "description": "Clamp timetime to a property\npossible values: 'month', 'day', 'hour', 'minute', 'second', 'millisecond' or ''",
          "privacy": "public",
          "sourceRange": {
            "file": "time-element.js",
            "start": {
              "line": 147,
              "column": 8
            },
            "end": {
              "line": 151,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "defaultValue": "\"\"",
          "inheritedFrom": "TimeElementPattern"
        },
        {
          "name": "withTimezone",
          "type": "boolean | null | undefined",
          "description": "if true, timezone inputs are shown",
          "privacy": "public",
          "sourceRange": {
            "file": "time-element.js",
            "start": {
              "line": 138,
              "column": 8
            },
            "end": {
              "line": 141,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "TimeElementPattern"
        },
        {
          "name": "_timeOnly",
          "type": "boolean | null | undefined",
          "description": "if true perspective starts at 0 (1970-01-01)",
          "privacy": "protected",
          "sourceRange": {
            "file": "time-element.js",
            "start": {
              "line": 156,
              "column": 8
            },
            "end": {
              "line": 159,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "true",
          "inheritedFrom": "TimeElementPattern"
        },
        {
          "name": "hideNowButton",
          "type": "boolean | null | undefined",
          "description": "Set to `true` to hide the `now`-button",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-picker-mixin.js",
            "start": {
              "line": 150,
              "column": 8
            },
            "end": {
              "line": 152,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_nativeInput",
          "type": "string | null | undefined",
          "description": "Set to `true` to hide the `now`-button",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.js",
            "start": {
              "line": 156,
              "column": 8
            },
            "end": {
              "line": 158,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "firstDayOfWeek",
          "type": "number | null | undefined",
          "description": "Defines the first day of the week to use. Defaults to `1` (`monday`)\ne.g. when `firstDayOfWeek` is `0` the first day of the week would be `sunday`",
          "privacy": "public",
          "sourceRange": {
            "file": "calendar-element.js",
            "start": {
              "line": 254,
              "column": 8
            },
            "end": {
              "line": 257,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "1",
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "currentHoveredDayNode",
          "type": "Node | null | undefined",
          "description": "Current hovered day node\nto access: bind the attribute ('current-hovered-day-node') and get its dataset `year`, `month` or `day`-property",
          "privacy": "public",
          "sourceRange": {
            "file": "calendar-element.js",
            "start": {
              "line": 263,
              "column": 8
            },
            "end": {
              "line": 267,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "Node"
            }
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "currentActiveDayNode",
          "type": "Node | null | undefined",
          "description": "Node of the last clicked day-field (by clicking or keypress)\nto access: bind the attribute ('current-active-day-node') and get its dataset `year`, `month` or `day`-property",
          "privacy": "public",
          "sourceRange": {
            "file": "calendar-element.js",
            "start": {
              "line": 273,
              "column": 8
            },
            "end": {
              "line": 278,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_currentActiveDayNodeChanged\"",
              "readOnly": true,
              "attributeType": "Node"
            }
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "currentSelectedDayNode",
          "type": "Node | null | undefined",
          "description": "Node of the last selected day\nto access: bind the attribute ('current-selected-day-node') and get its dataset `year`, `month` or `day`-property",
          "privacy": "public",
          "sourceRange": {
            "file": "calendar-element.js",
            "start": {
              "line": 284,
              "column": 8
            },
            "end": {
              "line": 289,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_currentSelectedDayNodeChanged\"",
              "readOnly": true,
              "attributeType": "Node"
            }
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_hasNative",
          "type": "?",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 134,
              "column": 2
            },
            "end": {
              "line": 136,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_computeNativeInput",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.js",
            "start": {
              "line": 169,
              "column": 4
            },
            "end": {
              "line": 177,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "date"
            },
            {
              "name": "time"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_reflectNativeInput",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.js",
            "start": {
              "line": 179,
              "column": 4
            },
            "end": {
              "line": 185,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "nativeInput"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "renderCalendar",
          "description": "renderCalendars the current daySelector (manually).",
          "privacy": "public",
          "sourceRange": {
            "file": "calendar-element.js",
            "start": {
              "line": 434,
              "column": 4
            },
            "end": {
              "line": 550,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "year",
              "type": "number",
              "description": "The year of the date of the current daySelector."
            },
            {
              "name": "month",
              "type": "number",
              "description": "The month of the date of the current daySelector."
            },
            {
              "name": "day",
              "type": "number",
              "description": "The day of the date of the current daySelector."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_openedChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "date-picker.js",
            "start": {
              "line": 68,
              "column": 4
            },
            "end": {
              "line": 86,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "opened"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatePickerPattern"
        },
        {
          "name": "_confirmedValueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "date-picker.js",
            "start": {
              "line": 88,
              "column": 4
            },
            "end": {
              "line": 91,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "confirmedValue"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatePickerPattern"
        },
        {
          "name": "_switchAm",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "time-element.js",
            "start": {
              "line": 170,
              "column": 4
            },
            "end": {
              "line": 173,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "TimeElementPattern"
        },
        {
          "name": "_computeNativeStep",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.js",
            "start": {
              "line": 187,
              "column": 4
            },
            "end": {
              "line": 209,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "partsStep"
            },
            {
              "name": "clamp"
            }
          ],
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_computeNativeThreshold",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.js",
            "start": {
              "line": 211,
              "column": 4
            },
            "end": {
              "line": 228,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "setDate",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-picker-mixin.js",
            "start": {
              "line": 230,
              "column": 4
            },
            "end": {
              "line": 235,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_defaultValueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.js",
            "start": {
              "line": 237,
              "column": 4
            },
            "end": {
              "line": 242,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "def"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "resetDate",
          "description": "reset confirmedValue and value and the date properties",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-picker-mixin.js",
            "start": {
              "line": 247,
              "column": 4
            },
            "end": {
              "line": 250,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "calendar-element.js",
            "start": {
              "line": 319,
              "column": 4
            },
            "end": {
              "line": 322,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_computeOrderMonth",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.js",
            "start": {
              "line": 324,
              "column": 4
            },
            "end": {
              "line": 334,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dateOrder"
            },
            {
              "name": "forYear"
            }
          ],
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_onMouseMoveDay",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.js",
            "start": {
              "line": 336,
              "column": 4
            },
            "end": {
              "line": 349,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_onClickDay",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.js",
            "start": {
              "line": 351,
              "column": 4
            },
            "end": {
              "line": 371,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_currentActiveDayNodeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.js",
            "start": {
              "line": 373,
              "column": 4
            },
            "end": {
              "line": 382,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node"
            },
            {
              "name": "oldNode"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_currentSelectedDayNodeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.js",
            "start": {
              "line": 384,
              "column": 4
            },
            "end": {
              "line": 390,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node"
            },
            {
              "name": "oldNode"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_computeIncremPropTop",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.js",
            "start": {
              "line": 392,
              "column": 4
            },
            "end": {
              "line": 397,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hideMonth"
            }
          ],
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_setWeekDayCaptions",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.js",
            "start": {
              "line": 399,
              "column": 4
            },
            "end": {
              "line": 414,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "locale"
            },
            {
              "name": "firstDayOfWeek"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_setMonthSelectorOptions",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.js",
            "start": {
              "line": 416,
              "column": 4
            },
            "end": {
              "line": 425,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "locale"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_minChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.js",
            "start": {
              "line": 552,
              "column": 4
            },
            "end": {
              "line": 555,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "min"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_maxChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.js",
            "start": {
              "line": 557,
              "column": 4
            },
            "end": {
              "line": 560,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "max"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_checkKeycodeForDates",
          "description": "key press event handler on days area",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.js",
            "start": {
              "line": 566,
              "column": 4
            },
            "end": {
              "line": 652,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "[type]",
              "description": "Event"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_getDefaultForProp",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.js",
            "start": {
              "line": 654,
              "column": 4
            },
            "end": {
              "line": 664,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "prop"
            }
          ],
          "inheritedFrom": "CalendarElementPattern"
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        },
        {
          "url": "demo/datetime-elements.html",
          "description": "datetime elements"
        },
        {
          "url": "demo/form.html",
          "description": "in a form"
        },
        {
          "url": "demo/music-album.html",
          "description": "music album demo"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 124,
          "column": 0
        },
        "end": {
          "line": 137,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "DatetimePicker",
      "attributes": [
        {
          "name": "clamp",
          "description": "Clamp timetime to a property\npossible values: 'month', 'day', 'hour', 'minute', 'second', 'millisecond' or ''",
          "sourceRange": {
            "file": "time-element.js",
            "start": {
              "line": 147,
              "column": 8
            },
            "end": {
              "line": 151,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "TimeElementPattern"
        },
        {
          "name": "with-timezone",
          "description": "if true, timezone inputs are shown",
          "sourceRange": {
            "file": "time-element.js",
            "start": {
              "line": 138,
              "column": 8
            },
            "end": {
              "line": 141,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "TimeElementPattern"
        },
        {
          "name": "hide-now-button",
          "description": "Set to `true` to hide the `now`-button",
          "sourceRange": {
            "file": "datetime-picker-mixin.js",
            "start": {
              "line": 150,
              "column": 8
            },
            "end": {
              "line": 152,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "first-day-of-week",
          "description": "Defines the first day of the week to use. Defaults to `1` (`monday`)\ne.g. when `firstDayOfWeek` is `0` the first day of the week would be `sunday`",
          "sourceRange": {
            "file": "calendar-element.js",
            "start": {
              "line": 254,
              "column": 8
            },
            "end": {
              "line": 257,
              "column": 9
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "current-hovered-day-node",
          "description": "Current hovered day node\nto access: bind the attribute ('current-hovered-day-node') and get its dataset `year`, `month` or `day`-property",
          "sourceRange": {
            "file": "calendar-element.js",
            "start": {
              "line": 263,
              "column": 8
            },
            "end": {
              "line": 267,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Node | null | undefined",
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "current-active-day-node",
          "description": "Node of the last clicked day-field (by clicking or keypress)\nto access: bind the attribute ('current-active-day-node') and get its dataset `year`, `month` or `day`-property",
          "sourceRange": {
            "file": "calendar-element.js",
            "start": {
              "line": 273,
              "column": 8
            },
            "end": {
              "line": 278,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Node | null | undefined",
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "current-selected-day-node",
          "description": "Node of the last selected day\nto access: bind the attribute ('current-selected-day-node') and get its dataset `year`, `month` or `day`-property",
          "sourceRange": {
            "file": "calendar-element.js",
            "start": {
              "line": 284,
              "column": 8
            },
            "end": {
              "line": 289,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Node | null | undefined",
          "inheritedFrom": "CalendarElementPattern"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "datetime-picker",
      "mixins": [
        "DatetimePickerPattern",
        "DatePickerPattern",
        "TimePickerPattern",
        "DatetimePickerMixin",
        "DatetimeInputMixin",
        "DateInputPattern",
        "TimeInputPattern",
        "CalendarElementPattern",
        "TimeElementPattern",
        "SwitchMixin",
        "InputPickerPattern",
        "DatetimeFormMixin",
        "DatetimeMixin"
      ]
    },
    {
      "description": "`<overlay-datetime-picker>` extends `datetime-picker` and behaves simular.\n\n  ```html\n  <overlay-datetime-picker value=\"{{value}}\" ></overlay-datetime-picker>\n  ```\n\n A use case could be for example, if you want on mobile devices use the `native picker` and on desktop devices the polyfill.\n\n ```html\n   <overlay-datetime-picker native-on-mobile></overlay-datetime-picker>\n ```\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--calendar-element`               | Mixin applied to the calendar                  | {}\n`--calendar-cell`                  | Mixin applied to the date cells                | {}\n`--calendar-cell-hovered`          | Mixin applied to hovered date cells            | {}\n`--calendar-cell-size`             | width of a date cell                           | 3em\n`--calendar-cell-border-radius`    | border-radius of a date cell                   | 0.25em\n`--calendar-cell-font-size`        | font-size of a date cell                       | 0.75em\n`--time-element`                   | Mixin applied to the time-element              | {}\n\n Have a look at [input-picker-pattern#input-picker-shared-style](https://github.com/fooloomanzoo/input-picker-pattern#input-picker-shared-style) and [input-picker-pattern#input-shared-style](https://github.com/fooloomanzoo/input-picker-pattern#input-shared-style) to see how to style the element.",
      "summary": "",
      "path": "overlay-datetime-picker.js",
      "properties": [
        {
          "name": "clamp",
          "type": "string | null | undefined",
          "description": "Clamp timetime to a property\npossible values: 'month', 'day', 'hour', 'minute', 'second', 'millisecond' or ''",
          "privacy": "public",
          "sourceRange": {
            "file": "time-element.js",
            "start": {
              "line": 147,
              "column": 8
            },
            "end": {
              "line": 151,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "defaultValue": "\"\"",
          "inheritedFrom": "TimeElementPattern"
        },
        {
          "name": "withTimezone",
          "type": "boolean | null | undefined",
          "description": "if true, timezone inputs are shown",
          "privacy": "public",
          "sourceRange": {
            "file": "time-element.js",
            "start": {
              "line": 138,
              "column": 8
            },
            "end": {
              "line": 141,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "TimeElementPattern"
        },
        {
          "name": "_timeOnly",
          "type": "boolean | null | undefined",
          "description": "if true perspective starts at 0 (1970-01-01)",
          "privacy": "protected",
          "sourceRange": {
            "file": "time-element.js",
            "start": {
              "line": 156,
              "column": 8
            },
            "end": {
              "line": 159,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "true",
          "inheritedFrom": "TimeElementPattern"
        },
        {
          "name": "hideNowButton",
          "type": "boolean | null | undefined",
          "description": "Set to `true` to hide the `now`-button",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-picker-mixin.js",
            "start": {
              "line": 150,
              "column": 8
            },
            "end": {
              "line": 152,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_nativeInput",
          "type": "string | null | undefined",
          "description": "Set to `true` to hide the `now`-button",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.js",
            "start": {
              "line": 156,
              "column": 8
            },
            "end": {
              "line": 158,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "firstDayOfWeek",
          "type": "number | null | undefined",
          "description": "Defines the first day of the week to use. Defaults to `1` (`monday`)\ne.g. when `firstDayOfWeek` is `0` the first day of the week would be `sunday`",
          "privacy": "public",
          "sourceRange": {
            "file": "calendar-element.js",
            "start": {
              "line": 254,
              "column": 8
            },
            "end": {
              "line": 257,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "1",
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "currentHoveredDayNode",
          "type": "Node | null | undefined",
          "description": "Current hovered day node\nto access: bind the attribute ('current-hovered-day-node') and get its dataset `year`, `month` or `day`-property",
          "privacy": "public",
          "sourceRange": {
            "file": "calendar-element.js",
            "start": {
              "line": 263,
              "column": 8
            },
            "end": {
              "line": 267,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "Node"
            }
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "currentActiveDayNode",
          "type": "Node | null | undefined",
          "description": "Node of the last clicked day-field (by clicking or keypress)\nto access: bind the attribute ('current-active-day-node') and get its dataset `year`, `month` or `day`-property",
          "privacy": "public",
          "sourceRange": {
            "file": "calendar-element.js",
            "start": {
              "line": 273,
              "column": 8
            },
            "end": {
              "line": 278,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_currentActiveDayNodeChanged\"",
              "readOnly": true,
              "attributeType": "Node"
            }
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "currentSelectedDayNode",
          "type": "Node | null | undefined",
          "description": "Node of the last selected day\nto access: bind the attribute ('current-selected-day-node') and get its dataset `year`, `month` or `day`-property",
          "privacy": "public",
          "sourceRange": {
            "file": "calendar-element.js",
            "start": {
              "line": 284,
              "column": 8
            },
            "end": {
              "line": 289,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_currentSelectedDayNodeChanged\"",
              "readOnly": true,
              "attributeType": "Node"
            }
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_hasNative",
          "type": "?",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 68,
              "column": 2
            },
            "end": {
              "line": 70,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_computeNativeInput",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.js",
            "start": {
              "line": 169,
              "column": 4
            },
            "end": {
              "line": 177,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "date"
            },
            {
              "name": "time"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_reflectNativeInput",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.js",
            "start": {
              "line": 179,
              "column": 4
            },
            "end": {
              "line": 185,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "nativeInput"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "renderCalendar",
          "description": "renderCalendars the current daySelector (manually).",
          "privacy": "public",
          "sourceRange": {
            "file": "calendar-element.js",
            "start": {
              "line": 434,
              "column": 4
            },
            "end": {
              "line": 550,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "year",
              "type": "number",
              "description": "The year of the date of the current daySelector."
            },
            {
              "name": "month",
              "type": "number",
              "description": "The month of the date of the current daySelector."
            },
            {
              "name": "day",
              "type": "number",
              "description": "The day of the date of the current daySelector."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_openedChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "date-picker.js",
            "start": {
              "line": 68,
              "column": 4
            },
            "end": {
              "line": 86,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "opened"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatePickerPattern"
        },
        {
          "name": "_confirmedValueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "date-picker.js",
            "start": {
              "line": 88,
              "column": 4
            },
            "end": {
              "line": 91,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "confirmedValue"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatePickerPattern"
        },
        {
          "name": "_switchAm",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "time-element.js",
            "start": {
              "line": 170,
              "column": 4
            },
            "end": {
              "line": 173,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "TimeElementPattern"
        },
        {
          "name": "_computeNativeStep",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.js",
            "start": {
              "line": 187,
              "column": 4
            },
            "end": {
              "line": 209,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "partsStep"
            },
            {
              "name": "clamp"
            }
          ],
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_computeNativeThreshold",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.js",
            "start": {
              "line": 211,
              "column": 4
            },
            "end": {
              "line": 228,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "setDate",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-picker-mixin.js",
            "start": {
              "line": 230,
              "column": 4
            },
            "end": {
              "line": 235,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_defaultValueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.js",
            "start": {
              "line": 237,
              "column": 4
            },
            "end": {
              "line": 242,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "def"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "resetDate",
          "description": "reset confirmedValue and value and the date properties",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-picker-mixin.js",
            "start": {
              "line": 247,
              "column": 4
            },
            "end": {
              "line": 250,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "calendar-element.js",
            "start": {
              "line": 319,
              "column": 4
            },
            "end": {
              "line": 322,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_computeOrderMonth",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.js",
            "start": {
              "line": 324,
              "column": 4
            },
            "end": {
              "line": 334,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dateOrder"
            },
            {
              "name": "forYear"
            }
          ],
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_onMouseMoveDay",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.js",
            "start": {
              "line": 336,
              "column": 4
            },
            "end": {
              "line": 349,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_onClickDay",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.js",
            "start": {
              "line": 351,
              "column": 4
            },
            "end": {
              "line": 371,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_currentActiveDayNodeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.js",
            "start": {
              "line": 373,
              "column": 4
            },
            "end": {
              "line": 382,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node"
            },
            {
              "name": "oldNode"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_currentSelectedDayNodeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.js",
            "start": {
              "line": 384,
              "column": 4
            },
            "end": {
              "line": 390,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node"
            },
            {
              "name": "oldNode"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_computeIncremPropTop",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.js",
            "start": {
              "line": 392,
              "column": 4
            },
            "end": {
              "line": 397,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hideMonth"
            }
          ],
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_setWeekDayCaptions",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.js",
            "start": {
              "line": 399,
              "column": 4
            },
            "end": {
              "line": 414,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "locale"
            },
            {
              "name": "firstDayOfWeek"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_setMonthSelectorOptions",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.js",
            "start": {
              "line": 416,
              "column": 4
            },
            "end": {
              "line": 425,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "locale"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_minChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.js",
            "start": {
              "line": 552,
              "column": 4
            },
            "end": {
              "line": 555,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "min"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_maxChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.js",
            "start": {
              "line": 557,
              "column": 4
            },
            "end": {
              "line": 560,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "max"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_checkKeycodeForDates",
          "description": "key press event handler on days area",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.js",
            "start": {
              "line": 566,
              "column": 4
            },
            "end": {
              "line": 652,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "[type]",
              "description": "Event"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_getDefaultForProp",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.js",
            "start": {
              "line": 654,
              "column": 4
            },
            "end": {
              "line": 664,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "prop"
            }
          ],
          "inheritedFrom": "CalendarElementPattern"
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/overlay-elements.html",
          "description": "overlay demo"
        },
        {
          "url": "demo/music-album.html",
          "description": "music album demo"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 62,
          "column": 0
        },
        "end": {
          "line": 71,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "OverlayDatetimePicker",
      "attributes": [
        {
          "name": "clamp",
          "description": "Clamp timetime to a property\npossible values: 'month', 'day', 'hour', 'minute', 'second', 'millisecond' or ''",
          "sourceRange": {
            "file": "time-element.js",
            "start": {
              "line": 147,
              "column": 8
            },
            "end": {
              "line": 151,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "TimeElementPattern"
        },
        {
          "name": "with-timezone",
          "description": "if true, timezone inputs are shown",
          "sourceRange": {
            "file": "time-element.js",
            "start": {
              "line": 138,
              "column": 8
            },
            "end": {
              "line": 141,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "TimeElementPattern"
        },
        {
          "name": "hide-now-button",
          "description": "Set to `true` to hide the `now`-button",
          "sourceRange": {
            "file": "datetime-picker-mixin.js",
            "start": {
              "line": 150,
              "column": 8
            },
            "end": {
              "line": 152,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "first-day-of-week",
          "description": "Defines the first day of the week to use. Defaults to `1` (`monday`)\ne.g. when `firstDayOfWeek` is `0` the first day of the week would be `sunday`",
          "sourceRange": {
            "file": "calendar-element.js",
            "start": {
              "line": 254,
              "column": 8
            },
            "end": {
              "line": 257,
              "column": 9
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "current-hovered-day-node",
          "description": "Current hovered day node\nto access: bind the attribute ('current-hovered-day-node') and get its dataset `year`, `month` or `day`-property",
          "sourceRange": {
            "file": "calendar-element.js",
            "start": {
              "line": 263,
              "column": 8
            },
            "end": {
              "line": 267,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Node | null | undefined",
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "current-active-day-node",
          "description": "Node of the last clicked day-field (by clicking or keypress)\nto access: bind the attribute ('current-active-day-node') and get its dataset `year`, `month` or `day`-property",
          "sourceRange": {
            "file": "calendar-element.js",
            "start": {
              "line": 273,
              "column": 8
            },
            "end": {
              "line": 278,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Node | null | undefined",
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "current-selected-day-node",
          "description": "Node of the last selected day\nto access: bind the attribute ('current-selected-day-node') and get its dataset `year`, `month` or `day`-property",
          "sourceRange": {
            "file": "calendar-element.js",
            "start": {
              "line": 284,
              "column": 8
            },
            "end": {
              "line": 289,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Node | null | undefined",
          "inheritedFrom": "CalendarElementPattern"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "overlay-datetime-picker",
      "mixins": [
        "OverlayPickerMixin",
        "DatetimePickerPattern",
        "DatePickerPattern",
        "TimePickerPattern",
        "DatetimePickerMixin",
        "DatetimeInputMixin",
        "DateInputPattern",
        "TimeInputPattern",
        "CalendarElementPattern",
        "TimeElementPattern",
        "SwitchMixin",
        "InputPickerPattern",
        "DatetimeFormMixin",
        "DatetimeMixin"
      ]
    },
    {
      "description": "`<overlay-date-picker>` extends `date-picker` in an overlay.\n\n  ```html\n  <overlay-date-picker value=\"{{value}}\" ></overlay-date-picker>\n  ```\n\n A use case could be for example, if you want on mobile devices use the `native picker` and on desktop devices the polyfill.\n\n ```html\n   <overlay-date-picker native-on-mobile></overlay-date-picker>\n ```\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--calendar-element`               | Mixin applied to the calendar                  | {}\n`--calendar-cell`                  | Mixin applied to the date cells                | {}\n`--calendar-cell-hovered`          | Mixin applied to hovered date cells            | {}\n`--calendar-cell-size`             | width of a date cell                           | 3em\n`--calendar-cell-border-radius`    | border-radius of a date cell                   | 0.25em\n`--calendar-cell-font-size`        | font-size of a date cell                       | 0.75em\n\n Have a look at [input-picker-pattern#input-picker-shared-style](https://github.com/fooloomanzoo/input-picker-pattern#input-picker-shared-style) and [input-picker-pattern#input-shared-style](https://github.com/fooloomanzoo/input-picker-pattern#input-shared-style) to see how to style the element.",
      "summary": "",
      "path": "overlay-date-picker.js",
      "properties": [
        {
          "name": "hideNowButton",
          "type": "boolean | null | undefined",
          "description": "Set to `true` to hide the `now`-button",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-picker-mixin.js",
            "start": {
              "line": 150,
              "column": 8
            },
            "end": {
              "line": 152,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_nativeInput",
          "type": "string | null | undefined",
          "description": "Set to `true` to hide the `now`-button",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.js",
            "start": {
              "line": 156,
              "column": 8
            },
            "end": {
              "line": 158,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "firstDayOfWeek",
          "type": "number | null | undefined",
          "description": "Defines the first day of the week to use. Defaults to `1` (`monday`)\ne.g. when `firstDayOfWeek` is `0` the first day of the week would be `sunday`",
          "privacy": "public",
          "sourceRange": {
            "file": "calendar-element.js",
            "start": {
              "line": 254,
              "column": 8
            },
            "end": {
              "line": 257,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "1",
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "currentHoveredDayNode",
          "type": "Node | null | undefined",
          "description": "Current hovered day node\nto access: bind the attribute ('current-hovered-day-node') and get its dataset `year`, `month` or `day`-property",
          "privacy": "public",
          "sourceRange": {
            "file": "calendar-element.js",
            "start": {
              "line": 263,
              "column": 8
            },
            "end": {
              "line": 267,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "Node"
            }
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "currentActiveDayNode",
          "type": "Node | null | undefined",
          "description": "Node of the last clicked day-field (by clicking or keypress)\nto access: bind the attribute ('current-active-day-node') and get its dataset `year`, `month` or `day`-property",
          "privacy": "public",
          "sourceRange": {
            "file": "calendar-element.js",
            "start": {
              "line": 273,
              "column": 8
            },
            "end": {
              "line": 278,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_currentActiveDayNodeChanged\"",
              "readOnly": true,
              "attributeType": "Node"
            }
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "currentSelectedDayNode",
          "type": "Node | null | undefined",
          "description": "Node of the last selected day\nto access: bind the attribute ('current-selected-day-node') and get its dataset `year`, `month` or `day`-property",
          "privacy": "public",
          "sourceRange": {
            "file": "calendar-element.js",
            "start": {
              "line": 284,
              "column": 8
            },
            "end": {
              "line": 289,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_currentSelectedDayNodeChanged\"",
              "readOnly": true,
              "attributeType": "Node"
            }
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "clamp",
          "type": "string | null | undefined",
          "description": "Clamp datetime to a property\npossible values: 'month', 'day', 'hour'",
          "privacy": "public",
          "sourceRange": {
            "file": "calendar-element.js",
            "start": {
              "line": 295,
              "column": 8
            },
            "end": {
              "line": 299,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "defaultValue": "\"hour\"",
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_timeOnly",
          "type": "boolean | null | undefined",
          "description": "if true perspective starts at 0 (1970-01-01)",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.js",
            "start": {
              "line": 304,
              "column": 8
            },
            "end": {
              "line": 307,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_hasNative",
          "type": "?",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 59,
              "column": 2
            },
            "end": {
              "line": 61,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_computeNativeInput",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.js",
            "start": {
              "line": 169,
              "column": 4
            },
            "end": {
              "line": 177,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "date"
            },
            {
              "name": "time"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_reflectNativeInput",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.js",
            "start": {
              "line": 179,
              "column": 4
            },
            "end": {
              "line": 185,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "nativeInput"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "renderCalendar",
          "description": "renderCalendars the current daySelector (manually).",
          "privacy": "public",
          "sourceRange": {
            "file": "calendar-element.js",
            "start": {
              "line": 434,
              "column": 4
            },
            "end": {
              "line": 550,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "year",
              "type": "number",
              "description": "The year of the date of the current daySelector."
            },
            {
              "name": "month",
              "type": "number",
              "description": "The month of the date of the current daySelector."
            },
            {
              "name": "day",
              "type": "number",
              "description": "The day of the date of the current daySelector."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_openedChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "date-picker.js",
            "start": {
              "line": 68,
              "column": 4
            },
            "end": {
              "line": 86,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "opened"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatePickerPattern"
        },
        {
          "name": "_confirmedValueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "date-picker.js",
            "start": {
              "line": 88,
              "column": 4
            },
            "end": {
              "line": 91,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "confirmedValue"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatePickerPattern"
        },
        {
          "name": "_computeNativeStep",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.js",
            "start": {
              "line": 187,
              "column": 4
            },
            "end": {
              "line": 209,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "partsStep"
            },
            {
              "name": "clamp"
            }
          ],
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_computeNativeThreshold",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.js",
            "start": {
              "line": 211,
              "column": 4
            },
            "end": {
              "line": 228,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "setDate",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-picker-mixin.js",
            "start": {
              "line": 230,
              "column": 4
            },
            "end": {
              "line": 235,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_defaultValueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.js",
            "start": {
              "line": 237,
              "column": 4
            },
            "end": {
              "line": 242,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "def"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "resetDate",
          "description": "reset confirmedValue and value and the date properties",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-picker-mixin.js",
            "start": {
              "line": 247,
              "column": 4
            },
            "end": {
              "line": 250,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "calendar-element.js",
            "start": {
              "line": 319,
              "column": 4
            },
            "end": {
              "line": 322,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_computeOrderMonth",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.js",
            "start": {
              "line": 324,
              "column": 4
            },
            "end": {
              "line": 334,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dateOrder"
            },
            {
              "name": "forYear"
            }
          ],
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_onMouseMoveDay",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.js",
            "start": {
              "line": 336,
              "column": 4
            },
            "end": {
              "line": 349,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_onClickDay",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.js",
            "start": {
              "line": 351,
              "column": 4
            },
            "end": {
              "line": 371,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_currentActiveDayNodeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.js",
            "start": {
              "line": 373,
              "column": 4
            },
            "end": {
              "line": 382,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node"
            },
            {
              "name": "oldNode"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_currentSelectedDayNodeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.js",
            "start": {
              "line": 384,
              "column": 4
            },
            "end": {
              "line": 390,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node"
            },
            {
              "name": "oldNode"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_computeIncremPropTop",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.js",
            "start": {
              "line": 392,
              "column": 4
            },
            "end": {
              "line": 397,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hideMonth"
            }
          ],
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_setWeekDayCaptions",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.js",
            "start": {
              "line": 399,
              "column": 4
            },
            "end": {
              "line": 414,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "locale"
            },
            {
              "name": "firstDayOfWeek"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_setMonthSelectorOptions",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.js",
            "start": {
              "line": 416,
              "column": 4
            },
            "end": {
              "line": 425,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "locale"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_minChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.js",
            "start": {
              "line": 552,
              "column": 4
            },
            "end": {
              "line": 555,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "min"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_maxChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.js",
            "start": {
              "line": 557,
              "column": 4
            },
            "end": {
              "line": 560,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "max"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_checkKeycodeForDates",
          "description": "key press event handler on days area",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.js",
            "start": {
              "line": 566,
              "column": 4
            },
            "end": {
              "line": 652,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "[type]",
              "description": "Event"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "_getDefaultForProp",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "calendar-element.js",
            "start": {
              "line": 654,
              "column": 4
            },
            "end": {
              "line": 664,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "prop"
            }
          ],
          "inheritedFrom": "CalendarElementPattern"
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/overlay-elements.html",
          "description": "overlay demo"
        },
        {
          "url": "demo/music-album.html",
          "description": "music album demo"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 53,
          "column": 0
        },
        "end": {
          "line": 62,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "OverlayDatePicker",
      "attributes": [
        {
          "name": "hide-now-button",
          "description": "Set to `true` to hide the `now`-button",
          "sourceRange": {
            "file": "datetime-picker-mixin.js",
            "start": {
              "line": 150,
              "column": 8
            },
            "end": {
              "line": 152,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "first-day-of-week",
          "description": "Defines the first day of the week to use. Defaults to `1` (`monday`)\ne.g. when `firstDayOfWeek` is `0` the first day of the week would be `sunday`",
          "sourceRange": {
            "file": "calendar-element.js",
            "start": {
              "line": 254,
              "column": 8
            },
            "end": {
              "line": 257,
              "column": 9
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "current-hovered-day-node",
          "description": "Current hovered day node\nto access: bind the attribute ('current-hovered-day-node') and get its dataset `year`, `month` or `day`-property",
          "sourceRange": {
            "file": "calendar-element.js",
            "start": {
              "line": 263,
              "column": 8
            },
            "end": {
              "line": 267,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Node | null | undefined",
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "current-active-day-node",
          "description": "Node of the last clicked day-field (by clicking or keypress)\nto access: bind the attribute ('current-active-day-node') and get its dataset `year`, `month` or `day`-property",
          "sourceRange": {
            "file": "calendar-element.js",
            "start": {
              "line": 273,
              "column": 8
            },
            "end": {
              "line": 278,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Node | null | undefined",
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "current-selected-day-node",
          "description": "Node of the last selected day\nto access: bind the attribute ('current-selected-day-node') and get its dataset `year`, `month` or `day`-property",
          "sourceRange": {
            "file": "calendar-element.js",
            "start": {
              "line": 284,
              "column": 8
            },
            "end": {
              "line": 289,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Node | null | undefined",
          "inheritedFrom": "CalendarElementPattern"
        },
        {
          "name": "clamp",
          "description": "Clamp datetime to a property\npossible values: 'month', 'day', 'hour'",
          "sourceRange": {
            "file": "calendar-element.js",
            "start": {
              "line": 295,
              "column": 8
            },
            "end": {
              "line": 299,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "CalendarElementPattern"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "overlay-date-picker",
      "mixins": [
        "OverlayPickerMixin",
        "DatePickerPattern",
        "DatetimePickerMixin",
        "DatetimeInputMixin",
        "DateInputPattern",
        "CalendarElementPattern",
        "SwitchMixin",
        "InputPickerPattern",
        "DatetimeFormMixin",
        "DatetimeMixin"
      ]
    },
    {
      "description": "`<overlay-time-picker>` extends `time-picker` in an overlay.\n\n  ```html\n  <overlay-time-picker value=\"{{value}}\"></overlay-time-picker>\n  ```\n\n A use case could be for example, if you want on mobile devices use the `native picker` and on desktop devices the polyfill.\n\n ```html\n   <overlay-time-picker native-on-mobile></overlay-time-picker>\n ```\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--time-element` | Mixin applied to the time-element | {}\n\n Have a look at [input-picker-pattern#input-picker-shared-style](https://github.com/fooloomanzoo/input-picker-pattern#input-picker-shared-style) and [input-picker-pattern#input-shared-style](https://github.com/fooloomanzoo/input-picker-pattern#input-shared-style) to see how to style the element.",
      "summary": "",
      "path": "overlay-time-picker.js",
      "properties": [
        {
          "name": "hideNowButton",
          "type": "boolean | null | undefined",
          "description": "Set to `true` to hide the `now`-button",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-picker-mixin.js",
            "start": {
              "line": 150,
              "column": 8
            },
            "end": {
              "line": 152,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_nativeInput",
          "type": "string | null | undefined",
          "description": "Set to `true` to hide the `now`-button",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.js",
            "start": {
              "line": 156,
              "column": 8
            },
            "end": {
              "line": 158,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "withTimezone",
          "type": "boolean | null | undefined",
          "description": "if true, timezone inputs are shown",
          "privacy": "public",
          "sourceRange": {
            "file": "time-element.js",
            "start": {
              "line": 138,
              "column": 8
            },
            "end": {
              "line": 141,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "TimeElementPattern"
        },
        {
          "name": "clamp",
          "type": "string | null | undefined",
          "description": "Clamp timetime to a property\npossible values: 'month', 'day', 'hour', 'minute', 'second', 'millisecond' or ''",
          "privacy": "public",
          "sourceRange": {
            "file": "time-element.js",
            "start": {
              "line": 147,
              "column": 8
            },
            "end": {
              "line": 151,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "defaultValue": "\"\"",
          "inheritedFrom": "TimeElementPattern"
        },
        {
          "name": "_timeOnly",
          "type": "boolean | null | undefined",
          "description": "if true perspective starts at 0 (1970-01-01)",
          "privacy": "protected",
          "sourceRange": {
            "file": "time-element.js",
            "start": {
              "line": 156,
              "column": 8
            },
            "end": {
              "line": 159,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "true",
          "inheritedFrom": "TimeElementPattern"
        },
        {
          "name": "_hasNative",
          "type": "?",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 54,
              "column": 2
            },
            "end": {
              "line": 56,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_computeNativeInput",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "time-picker.js",
            "start": {
              "line": 39,
              "column": 4
            },
            "end": {
              "line": 47,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "date"
            },
            {
              "name": "time"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "TimePickerPattern"
        },
        {
          "name": "_reflectNativeInput",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "time-picker.js",
            "start": {
              "line": 49,
              "column": 4
            },
            "end": {
              "line": 54,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "nativeInput"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "TimePickerPattern"
        },
        {
          "name": "_computeNativeStep",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.js",
            "start": {
              "line": 187,
              "column": 4
            },
            "end": {
              "line": 209,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "partsStep"
            },
            {
              "name": "clamp"
            }
          ],
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_computeNativeThreshold",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.js",
            "start": {
              "line": 211,
              "column": 4
            },
            "end": {
              "line": 228,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "setDate",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-picker-mixin.js",
            "start": {
              "line": 230,
              "column": 4
            },
            "end": {
              "line": 235,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_defaultValueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.js",
            "start": {
              "line": 237,
              "column": 4
            },
            "end": {
              "line": 242,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "def"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "resetDate",
          "description": "reset confirmedValue and value and the date properties",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-picker-mixin.js",
            "start": {
              "line": 247,
              "column": 4
            },
            "end": {
              "line": 250,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_switchAm",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "time-element.js",
            "start": {
              "line": 170,
              "column": 4
            },
            "end": {
              "line": 173,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "TimeElementPattern"
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/overlay-elements.html",
          "description": "overlay demo"
        },
        {
          "url": "demo/music-album.html",
          "description": "music album demo"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 48,
          "column": 0
        },
        "end": {
          "line": 57,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "OverlayTimePicker",
      "attributes": [
        {
          "name": "hide-now-button",
          "description": "Set to `true` to hide the `now`-button",
          "sourceRange": {
            "file": "datetime-picker-mixin.js",
            "start": {
              "line": 150,
              "column": 8
            },
            "end": {
              "line": 152,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "with-timezone",
          "description": "if true, timezone inputs are shown",
          "sourceRange": {
            "file": "time-element.js",
            "start": {
              "line": 138,
              "column": 8
            },
            "end": {
              "line": 141,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "TimeElementPattern"
        },
        {
          "name": "clamp",
          "description": "Clamp timetime to a property\npossible values: 'month', 'day', 'hour', 'minute', 'second', 'millisecond' or ''",
          "sourceRange": {
            "file": "time-element.js",
            "start": {
              "line": 147,
              "column": 8
            },
            "end": {
              "line": 151,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "TimeElementPattern"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "overlay-time-picker",
      "mixins": [
        "OverlayPickerMixin",
        "DatetimePickerMixin",
        "DatetimeInputMixin",
        "TimePickerPattern",
        "TimeInputPattern",
        "TimeElementPattern",
        "SwitchMixin",
        "InputPickerPattern",
        "DatetimeFormMixin",
        "DatetimeMixin"
      ]
    }
  ],
  "mixins": [
    {
      "description": "Mixin for calendar-element",
      "summary": "",
      "path": "calendar-element.js",
      "properties": [
        {
          "name": "firstDayOfWeek",
          "type": "number | null | undefined",
          "description": "Defines the first day of the week to use. Defaults to `1` (`monday`)\ne.g. when `firstDayOfWeek` is `0` the first day of the week would be `sunday`",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 254,
              "column": 8
            },
            "end": {
              "line": 257,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "1"
        },
        {
          "name": "currentHoveredDayNode",
          "type": "Node | null | undefined",
          "description": "Current hovered day node\nto access: bind the attribute ('current-hovered-day-node') and get its dataset `year`, `month` or `day`-property",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 263,
              "column": 8
            },
            "end": {
              "line": 267,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "Node"
            }
          }
        },
        {
          "name": "currentActiveDayNode",
          "type": "Node | null | undefined",
          "description": "Node of the last clicked day-field (by clicking or keypress)\nto access: bind the attribute ('current-active-day-node') and get its dataset `year`, `month` or `day`-property",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 273,
              "column": 8
            },
            "end": {
              "line": 278,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_currentActiveDayNodeChanged\"",
              "readOnly": true,
              "attributeType": "Node"
            }
          }
        },
        {
          "name": "currentSelectedDayNode",
          "type": "Node | null | undefined",
          "description": "Node of the last selected day\nto access: bind the attribute ('current-selected-day-node') and get its dataset `year`, `month` or `day`-property",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 284,
              "column": 8
            },
            "end": {
              "line": 289,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_currentSelectedDayNodeChanged\"",
              "readOnly": true,
              "attributeType": "Node"
            }
          }
        },
        {
          "name": "clamp",
          "type": "string | null | undefined",
          "description": "Clamp datetime to a property\npossible values: 'month', 'day', 'hour'",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 295,
              "column": 8
            },
            "end": {
              "line": 299,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "defaultValue": "\"hour\""
        },
        {
          "name": "_timeOnly",
          "type": "boolean | null | undefined",
          "description": "if true perspective starts at 0 (1970-01-01)",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 304,
              "column": 8
            },
            "end": {
              "line": 307,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        }
      ],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 319,
              "column": 4
            },
            "end": {
              "line": 322,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_computeOrderMonth",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 324,
              "column": 4
            },
            "end": {
              "line": 334,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dateOrder"
            },
            {
              "name": "forYear"
            }
          ]
        },
        {
          "name": "_onMouseMoveDay",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 336,
              "column": 4
            },
            "end": {
              "line": 349,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_onClickDay",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 351,
              "column": 4
            },
            "end": {
              "line": 371,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_currentActiveDayNodeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 373,
              "column": 4
            },
            "end": {
              "line": 382,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node"
            },
            {
              "name": "oldNode"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_currentSelectedDayNodeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 384,
              "column": 4
            },
            "end": {
              "line": 390,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node"
            },
            {
              "name": "oldNode"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_computeIncremPropTop",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 392,
              "column": 4
            },
            "end": {
              "line": 397,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hideMonth"
            }
          ]
        },
        {
          "name": "_setWeekDayCaptions",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 399,
              "column": 4
            },
            "end": {
              "line": 414,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "locale"
            },
            {
              "name": "firstDayOfWeek"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_setMonthSelectorOptions",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 416,
              "column": 4
            },
            "end": {
              "line": 425,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "locale"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "renderCalendar",
          "description": "renderCalendars the current daySelector (manually).",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 434,
              "column": 4
            },
            "end": {
              "line": 550,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "year",
              "type": "number",
              "description": "The year of the date of the current daySelector."
            },
            {
              "name": "month",
              "type": "number",
              "description": "The month of the date of the current daySelector."
            },
            {
              "name": "day",
              "type": "number",
              "description": "The day of the date of the current daySelector."
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_minChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 552,
              "column": 4
            },
            "end": {
              "line": 555,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "min"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_maxChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 557,
              "column": 4
            },
            "end": {
              "line": 560,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "max"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_checkKeycodeForDates",
          "description": "key press event handler on days area",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 566,
              "column": 4
            },
            "end": {
              "line": 652,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "[type]",
              "description": "Event"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_getDefaultForProp",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 654,
              "column": 4
            },
            "end": {
              "line": 664,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "prop"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 40,
          "column": 7
        },
        "end": {
          "line": 666,
          "column": 3
        }
      },
      "privacy": "public",
      "name": "CalendarElementPattern",
      "attributes": [
        {
          "name": "first-day-of-week",
          "description": "Defines the first day of the week to use. Defaults to `1` (`monday`)\ne.g. when `firstDayOfWeek` is `0` the first day of the week would be `sunday`",
          "sourceRange": {
            "start": {
              "line": 254,
              "column": 8
            },
            "end": {
              "line": 257,
              "column": 9
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "current-hovered-day-node",
          "description": "Current hovered day node\nto access: bind the attribute ('current-hovered-day-node') and get its dataset `year`, `month` or `day`-property",
          "sourceRange": {
            "start": {
              "line": 263,
              "column": 8
            },
            "end": {
              "line": 267,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Node | null | undefined"
        },
        {
          "name": "current-active-day-node",
          "description": "Node of the last clicked day-field (by clicking or keypress)\nto access: bind the attribute ('current-active-day-node') and get its dataset `year`, `month` or `day`-property",
          "sourceRange": {
            "start": {
              "line": 273,
              "column": 8
            },
            "end": {
              "line": 278,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Node | null | undefined"
        },
        {
          "name": "current-selected-day-node",
          "description": "Node of the last selected day\nto access: bind the attribute ('current-selected-day-node') and get its dataset `year`, `month` or `day`-property",
          "sourceRange": {
            "start": {
              "line": 284,
              "column": 8
            },
            "end": {
              "line": 289,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Node | null | undefined"
        },
        {
          "name": "clamp",
          "description": "Clamp datetime to a property\npossible values: 'month', 'day', 'hour'",
          "sourceRange": {
            "start": {
              "line": 295,
              "column": 8
            },
            "end": {
              "line": 299,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": []
    },
    {
      "description": "Mixin for creating a picker for datetime",
      "summary": "",
      "path": "datetime-picker-mixin.js",
      "properties": [
        {
          "name": "hideNowButton",
          "type": "boolean | null | undefined",
          "description": "Set to `true` to hide the `now`-button",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 150,
              "column": 8
            },
            "end": {
              "line": 152,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "_nativeInput",
          "type": "string | null | undefined",
          "description": "Set to `true` to hide the `now`-button",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 156,
              "column": 8
            },
            "end": {
              "line": 158,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_computeNativeInput",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 169,
              "column": 4
            },
            "end": {
              "line": 177,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "date"
            },
            {
              "name": "time"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_reflectNativeInput",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 179,
              "column": 4
            },
            "end": {
              "line": 185,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "nativeInput"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_computeNativeStep",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 187,
              "column": 4
            },
            "end": {
              "line": 209,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "partsStep"
            },
            {
              "name": "clamp"
            }
          ]
        },
        {
          "name": "_computeNativeThreshold",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 211,
              "column": 4
            },
            "end": {
              "line": 228,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ]
        },
        {
          "name": "setDate",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 230,
              "column": 4
            },
            "end": {
              "line": 235,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_defaultValueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 237,
              "column": 4
            },
            "end": {
              "line": 242,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "def"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "resetDate",
          "description": "reset confirmedValue and value and the date properties",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 247,
              "column": 4
            },
            "end": {
              "line": 250,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 11,
          "column": 7
        },
        "end": {
          "line": 252,
          "column": 3
        }
      },
      "privacy": "public",
      "name": "DatetimePickerMixin",
      "attributes": [
        {
          "name": "hide-now-button",
          "description": "Set to `true` to hide the `now`-button",
          "sourceRange": {
            "start": {
              "line": 150,
              "column": 8
            },
            "end": {
              "line": 152,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": []
    },
    {
      "description": "Mixin for date-picker",
      "summary": "",
      "path": "date-picker.js",
      "properties": [],
      "methods": [
        {
          "name": "_computeNativeInput",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 44,
              "column": 4
            },
            "end": {
              "line": 52,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "date"
            },
            {
              "name": "time"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_reflectNativeInput",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 54,
              "column": 4
            },
            "end": {
              "line": 59,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "nativeInput"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "renderCalendar",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 61,
              "column": 4
            },
            "end": {
              "line": 66,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "year"
            },
            {
              "name": "month"
            },
            {
              "name": "day"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_openedChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 68,
              "column": 4
            },
            "end": {
              "line": 86,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "opened"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_confirmedValueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 88,
              "column": 4
            },
            "end": {
              "line": 91,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "confirmedValue"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 17,
          "column": 7
        },
        "end": {
          "line": 93,
          "column": 3
        }
      },
      "privacy": "public",
      "name": "DatePickerPattern",
      "attributes": [],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": []
    },
    {
      "description": "Mixin for time-element",
      "summary": "",
      "path": "time-element.js",
      "properties": [
        {
          "name": "withTimezone",
          "type": "boolean | null | undefined",
          "description": "if true, timezone inputs are shown",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 138,
              "column": 8
            },
            "end": {
              "line": 141,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "clamp",
          "type": "string | null | undefined",
          "description": "Clamp timetime to a property\npossible values: 'month', 'day', 'hour', 'minute', 'second', 'millisecond' or ''",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 147,
              "column": 8
            },
            "end": {
              "line": 151,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "defaultValue": "\"\""
        },
        {
          "name": "_timeOnly",
          "type": "boolean | null | undefined",
          "description": "if true perspective starts at 0 (1970-01-01)",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 156,
              "column": 8
            },
            "end": {
              "line": 159,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "true"
        }
      ],
      "methods": [
        {
          "name": "_switchAm",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 170,
              "column": 4
            },
            "end": {
              "line": 173,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 17,
          "column": 7
        },
        "end": {
          "line": 175,
          "column": 3
        }
      },
      "privacy": "public",
      "name": "TimeElementPattern",
      "attributes": [
        {
          "name": "with-timezone",
          "description": "if true, timezone inputs are shown",
          "sourceRange": {
            "start": {
              "line": 138,
              "column": 8
            },
            "end": {
              "line": 141,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "clamp",
          "description": "Clamp timetime to a property\npossible values: 'month', 'day', 'hour', 'minute', 'second', 'millisecond' or ''",
          "sourceRange": {
            "start": {
              "line": 147,
              "column": 8
            },
            "end": {
              "line": 151,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": []
    },
    {
      "description": "Mixin for time-picker",
      "summary": "",
      "path": "time-picker.js",
      "properties": [
        {
          "name": "withTimezone",
          "type": "boolean | null | undefined",
          "description": "if true, timezone inputs are shown",
          "privacy": "public",
          "sourceRange": {
            "file": "time-element.js",
            "start": {
              "line": 138,
              "column": 8
            },
            "end": {
              "line": 141,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "TimeElementPattern"
        },
        {
          "name": "clamp",
          "type": "string | null | undefined",
          "description": "Clamp timetime to a property\npossible values: 'month', 'day', 'hour', 'minute', 'second', 'millisecond' or ''",
          "privacy": "public",
          "sourceRange": {
            "file": "time-element.js",
            "start": {
              "line": 147,
              "column": 8
            },
            "end": {
              "line": 151,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "defaultValue": "\"\"",
          "inheritedFrom": "TimeElementPattern"
        },
        {
          "name": "_timeOnly",
          "type": "boolean | null | undefined",
          "description": "if true perspective starts at 0 (1970-01-01)",
          "privacy": "protected",
          "sourceRange": {
            "file": "time-element.js",
            "start": {
              "line": 156,
              "column": 8
            },
            "end": {
              "line": 159,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "true",
          "inheritedFrom": "TimeElementPattern"
        },
        {
          "name": "hideNowButton",
          "type": "boolean | null | undefined",
          "description": "Set to `true` to hide the `now`-button",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-picker-mixin.js",
            "start": {
              "line": 150,
              "column": 8
            },
            "end": {
              "line": 152,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_nativeInput",
          "type": "string | null | undefined",
          "description": "Set to `true` to hide the `now`-button",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.js",
            "start": {
              "line": 156,
              "column": 8
            },
            "end": {
              "line": 158,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "DatetimePickerMixin"
        }
      ],
      "methods": [
        {
          "name": "_switchAm",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "time-element.js",
            "start": {
              "line": 170,
              "column": 4
            },
            "end": {
              "line": 173,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "TimeElementPattern"
        },
        {
          "name": "_computeNativeInput",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 39,
              "column": 4
            },
            "end": {
              "line": 47,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "date"
            },
            {
              "name": "time"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_reflectNativeInput",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 49,
              "column": 4
            },
            "end": {
              "line": 54,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "nativeInput"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_computeNativeStep",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.js",
            "start": {
              "line": 187,
              "column": 4
            },
            "end": {
              "line": 209,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "partsStep"
            },
            {
              "name": "clamp"
            }
          ],
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_computeNativeThreshold",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.js",
            "start": {
              "line": 211,
              "column": 4
            },
            "end": {
              "line": 228,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "setDate",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-picker-mixin.js",
            "start": {
              "line": 230,
              "column": 4
            },
            "end": {
              "line": 235,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "_defaultValueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-picker-mixin.js",
            "start": {
              "line": 237,
              "column": 4
            },
            "end": {
              "line": 242,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "def"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        },
        {
          "name": "resetDate",
          "description": "reset confirmedValue and value and the date properties",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-picker-mixin.js",
            "start": {
              "line": 247,
              "column": 4
            },
            "end": {
              "line": 250,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimePickerMixin"
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 21,
          "column": 7
        },
        "end": {
          "line": 56,
          "column": 3
        }
      },
      "privacy": "public",
      "name": "TimePickerPattern",
      "attributes": [
        {
          "name": "with-timezone",
          "description": "if true, timezone inputs are shown",
          "sourceRange": {
            "file": "time-element.js",
            "start": {
              "line": 138,
              "column": 8
            },
            "end": {
              "line": 141,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "TimeElementPattern"
        },
        {
          "name": "clamp",
          "description": "Clamp timetime to a property\npossible values: 'month', 'day', 'hour', 'minute', 'second', 'millisecond' or ''",
          "sourceRange": {
            "file": "time-element.js",
            "start": {
              "line": 147,
              "column": 8
            },
            "end": {
              "line": 151,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "TimeElementPattern"
        },
        {
          "name": "hide-now-button",
          "description": "Set to `true` to hide the `now`-button",
          "sourceRange": {
            "file": "datetime-picker-mixin.js",
            "start": {
              "line": 150,
              "column": 8
            },
            "end": {
              "line": 152,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "DatetimePickerMixin"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "mixins": [
        "TimeInputPattern",
        "TimeElementPattern",
        "DatetimePickerMixin"
      ]
    },
    {
      "description": "Mixin for datetime-picker",
      "summary": "",
      "path": "datetime-picker.js",
      "properties": [
        {
          "name": "clamp",
          "type": "string | null | undefined",
          "description": "Clamp datetime to a property\npossible values: 'month', 'day', 'hour', 'minute', 'second', 'millisecond' or ''",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 47,
              "column": 8
            },
            "end": {
              "line": 51,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "defaultValue": "\"millisecond\""
        }
      ],
      "methods": [
        {
          "name": "_computeNativeInput",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 55,
              "column": 4
            },
            "end": {
              "line": 60,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "date"
            },
            {
              "name": "time"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_reflectNativeInput",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 62,
              "column": 4
            },
            "end": {
              "line": 68,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "nativeInput"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 21,
          "column": 7
        },
        "end": {
          "line": 70,
          "column": 3
        }
      },
      "privacy": "public",
      "name": "DatetimePickerPattern",
      "attributes": [
        {
          "name": "clamp",
          "description": "Clamp datetime to a property\npossible values: 'month', 'day', 'hour', 'minute', 'second', 'millisecond' or ''",
          "sourceRange": {
            "start": {
              "line": 47,
              "column": 8
            },
            "end": {
              "line": 51,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": []
    }
  ]
}
